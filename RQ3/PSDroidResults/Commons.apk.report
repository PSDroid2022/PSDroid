/home/ys/桌面/CompactDroid（复件）/dataset2/Commons.apk
Entry Points[fr.free.nrw.commons.upload.UploadActivity, fr.free.nrw.commons.review.ReviewActivity, fr.free.nrw.commons.widget.PicOfDayAppWidget, org.acra.sender.JobSenderService, fr.free.nrw.commons.category.CategoryDetailsActivity, fr.free.nrw.commons.profile.ProfileActivity, fr.free.nrw.commons.WelcomeActivity, org.acra.dialog.CrashReportDialog, androidx.room.MultiInstanceInvalidationService, fr.free.nrw.commons.explore.recentsearches.RecentSearchesContentProvider, fr.free.nrw.commons.notification.NotificationActivity, fr.free.nrw.commons.category.CategoryImagesActivity, fr.free.nrw.commons.explore.ExploreActivity, androidx.lifecycle.ProcessLifecycleOwnerInitializer, org.acra.attachment.AcraContentProvider, fr.free.nrw.commons.settings.SettingsActivity, fr.free.nrw.commons.upload.UploadService, fr.free.nrw.commons.auth.SignupActivity, fr.free.nrw.commons.bookmarks.locations.BookmarkLocationsContentProvider, fr.free.nrw.commons.AboutActivity, fr.free.nrw.commons.category.CategoryContentProvider, org.acra.sender.SenderService, com.karumi.dexter.DexterActivity, fr.free.nrw.commons.CommonsApplication, fr.free.nrw.commons.bookmarks.pictures.BookmarkPicturesContentProvider, com.squareup.leakcanary.internal.LeakCanaryFileProvider, fr.free.nrw.commons.auth.WikiAccountAuthenticatorService, fr.free.nrw.commons.quiz.QuizResultActivity, fr.free.nrw.commons.auth.LoginActivity, fr.free.nrw.commons.media.ZoomableActivity, fr.free.nrw.commons.explore.SearchActivity, com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider, com.mapbox.android.telemetry.crash.CrashReporterJobIntentService, org.acra.sender.LegacySenderService, fr.free.nrw.commons.explore.depictions.WikidataItemDetailsActivity, fr.free.nrw.commons.bookmarks.BookmarksActivity, fr.free.nrw.commons.contributions.MainActivity, fr.free.nrw.commons.filepicker.ExtendedFileProvider, fr.free.nrw.commons.quiz.QuizActivity]
FllowDroidcallgraph size:29836
Soot started on Sat Aug 27 21:21:28 CST 2022
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<com.facebook.common.webp.WebpSupportStatus: boolean sIsWebpSupportRequired>$yysi0 > 17
StaticCheck:<com.facebook.common.webp.WebpSupportStatus: boolean isExtendedWebpSupported()>i0 >= 17
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
Soot finished on Sat Aug 27 21:21:37 CST 2022
Soot has run for 0 min. 8 sec.
Found 1 additional DEX files. Now visiting them one by one.
Soot started on Sat Aug 27 21:21:37 CST 2022
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>$yysi0 < 19
StaticCheck:<androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>$yysi0 > 20
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>i0 < 21
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>i0 < 16
StaticCheck:<androidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR>$yysi0 >= 21
StaticCheck:<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>$yysi0 >= 15
StaticCheck:<androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)>$yysi0 < 21
StaticCheck:<com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>$yysi0 < 21
StaticCheck:<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>$yysi0 == 18
StaticCheck:<com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE>$yysi0 >= 18
StaticCheck:<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>i0 >= 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>i0 < 28
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>i0 < 28
StaticCheck:<com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API>$yysi0 < 16
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>i1 < 23
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
Soot finished on Sat Aug 27 21:23:48 CST 2022
Soot has run for 2 min. 11 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 19
Declared Target Sdk version is: 28
Declared Max Sdk version is: -1
Collected 592 Android APIs in the primary DEX file
Collected 3213 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
29call roads:
0 Mainhead roads:
29 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#2.the call statck between class <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)>[]--><com.google.android.material.button.MaterialButtonHelper: void setShouldDrawSurfaceColorStroke(boolean)>[]--><com.google.android.material.button.MaterialButtonHelper: void updateStroke()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#3.the call statck between class <com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout$5: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#4.the call statck between class <com.google.android.material.textfield.TextInputLayout$5: void afterTextChanged(android.text.Editable)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#5.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)>[]--><com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>[]--><com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#6.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#7.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void showError(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#8.the call statck between class <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void showError(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0]][[$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
$z0 == 0
$yysi0 >= 15
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[[$z0 == 0], [$yysi0 >= 15]]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#9.the call statck between class <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)>[]--><com.google.android.material.button.MaterialButton: void setCornerRadius(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setCornerRadius(int)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getSurfaceColorStrokeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#10.the call statck between class <com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean getClipToPadding()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i6 < 21
Good road: <androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>[[-i6 < 21]]--><android.view.ViewGroup: boolean getClipToPadding()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getNoBackupFilesDir()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <org.acra.file.Directory$6: java.io.File getFile(android.content.Context,java.lang.String)>[[-i0 < 21]]--><android.content.Context: java.io.File getNoBackupFilesDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
-i1 < 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)>[[try]]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <org.acra.reporter.ErrorReporterImpl: void handleException(java.lang.Throwable)>[]--><org.acra.reporter.ErrorReporterImpl: void handleException(java.lang.Throwable,boolean)>[]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <fr.free.nrw.commons.utils.'-$$Lambda$vUMB5pU-H7WrfgSR5u1jFhHopQE': void run()>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <org.acra.reporter.ErrorReporterImpl: void handleSilentException(java.lang.Throwable)>[]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i1 < 23
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$2: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.listener.multi.BaseMultiplePermissionsListener: void onPermissionRationaleShouldBeShown(java.util.List,com.karumi.dexter.PermissionToken)>[]--><com.karumi.dexter.PermissionRationaleToken: void continuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void onContinuePermissionRequest()>[]--><com.karumi.dexter.DexterInstance: void requestPermissionsToSystem(java.util.Collection)>[]--><com.karumi.dexter.AndroidPermissionService: void requestPermissions(android.app.Activity,java.lang.String[],int)>[]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#632.the call statck between class <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:true
containsTry:true
633call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTint(int)> is checking!!!
The life time of api is [21,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: kotlin.Unit lambda$initRvNearbyList$4$NearbyParentFragment(fr.free.nrw.commons.nearby.Place,java.lang.Boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMapMarkers(java.util.List,com.mapbox.mapboxsdk.annotations.Marker)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void addNearbyMarkersToMapBoxMap(java.util.List,com.mapbox.mapboxsdk.annotations.Marker)>[]--><fr.free.nrw.commons.nearby.presenter.NearbyParentFragmentPresenter: void updateMapMarkersToController(java.util.List)>[]--><fr.free.nrw.commons.nearby.NearbyBaseMarker: fr.free.nrw.commons.nearby.NearbyMarker getMarker()>[]--><fr.free.nrw.commons.nearby.NearbyMarker: void <init>(fr.free.nrw.commons.nearby.NearbyBaseMarker,fr.free.nrw.commons.nearby.Place)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.annotations.Icon,java.lang.String,java.lang.String)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMapMarkers(java.util.List,com.mapbox.mapboxsdk.annotations.Marker)>[]--><fr.free.nrw.commons.nearby.presenter.NearbyParentFragmentPresenter: void updateMapMarkersToController(java.util.List)>[]--><fr.free.nrw.commons.nearby.NearbyBaseMarker: fr.free.nrw.commons.nearby.NearbyMarker getMarker()>[]--><fr.free.nrw.commons.nearby.NearbyMarker: void <init>(fr.free.nrw.commons.nearby.NearbyBaseMarker,fr.free.nrw.commons.nearby.Place)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.annotations.Icon,java.lang.String,java.lang.String)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 != 21
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)>[[$i1 != 21]]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#3.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.mapbox.mapboxsdk.maps.MapView$MapCallback: void onDidFinishLoadingStyle()>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void onFinishLoadingStyle()>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void notifyStyleLoaded()>[]--><com.mapbox.mapboxsdk.location.LocationComponent: void onFinishLoadingStyle()>[]--><com.mapbox.mapboxsdk.location.LocationLayerController: void initializeComponents(com.mapbox.mapboxsdk.maps.Style,com.mapbox.mapboxsdk.location.LocationComponentOptions)>[]--><com.mapbox.mapboxsdk.location.LocationLayerController: void applyStyle(com.mapbox.mapboxsdk.location.LocationComponentOptions)>[]--><com.mapbox.mapboxsdk.location.LocationLayerController: void styleBackground(com.mapbox.mapboxsdk.location.LocationComponentOptions)>[]--><com.mapbox.mapboxsdk.location.LayerBitmapProvider: android.graphics.Bitmap generateBitmap(int,java.lang.Integer)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$28$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <com.mapbox.mapboxsdk.annotations.MarkerOptions: com.mapbox.mapboxsdk.annotations.Marker getMarker()>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.annotations.Icon,java.lang.String,java.lang.String)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterOutAllMarkers()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void hideAllMarkers()>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterMarkersByLabels(java.util.List,boolean,boolean,boolean,boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void hideAllMarkers()>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterMarkersByLabels(java.util.List,boolean,boolean,boolean,boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.NearbyBaseMarker: com.mapbox.mapboxsdk.annotations.Marker getMarker()>[]--><fr.free.nrw.commons.nearby.NearbyBaseMarker: fr.free.nrw.commons.nearby.NearbyMarker getMarker()>[]--><fr.free.nrw.commons.nearby.NearbyMarker: void <init>(fr.free.nrw.commons.nearby.NearbyBaseMarker,fr.free.nrw.commons.nearby.Place)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void <init>(com.mapbox.mapboxsdk.geometry.LatLng,com.mapbox.mapboxsdk.annotations.Icon,java.lang.String,java.lang.String)>[]--><com.mapbox.mapboxsdk.annotations.Marker: void setIcon(com.mapbox.mapboxsdk.annotations.Icon)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: void updateMarker(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void update(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: void ensureIconLoaded(com.mapbox.mapboxsdk.annotations.Marker,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$23$NearbyParentFragment(com.mapbox.mapboxsdk.annotations.MarkerOptions)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: com.mapbox.mapboxsdk.annotations.Marker addMarker(com.mapbox.mapboxsdk.annotations.MarkerOptions)>[]--><com.mapbox.mapboxsdk.maps.AnnotationManager: com.mapbox.mapboxsdk.annotations.Marker addMarker(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: com.mapbox.mapboxsdk.annotations.Marker addBy(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions,com.mapbox.mapboxsdk.maps.MapboxMap)>[]--><com.mapbox.mapboxsdk.maps.MarkerContainer: com.mapbox.mapboxsdk.annotations.Marker prepareMarker(com.mapbox.mapboxsdk.annotations.BaseMarkerOptions)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.maps.IconManager: com.mapbox.mapboxsdk.annotations.Icon loadDefaultIconForMarker(com.mapbox.mapboxsdk.annotations.Marker)>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon defaultMarker()>[]--><com.mapbox.mapboxsdk.annotations.IconFactory: com.mapbox.mapboxsdk.annotations.Icon fromResource(int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int)>[]--><com.mapbox.mapboxsdk.utils.BitmapUtils: android.graphics.drawable.Drawable getDrawableFromRes(android.content.Context,int,java.lang.Integer)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
crashApis:4
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setTouchModal(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean isTransitionGroup()> is checking!!!
The life time of api is [21,31]
701call roads:
1 Mainhead roads:
700 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.paging.LivePagedListBuilder$1$1: void onInvalidated()>[]--><androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
-i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[-i0 < 21]]--><android.view.ViewGroup: boolean isTransitionGroup()>
One road protect good!
containsStatic:true
containsTry:true
701call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-i0 < 28]]--><android.view.View: void setAccessibilityHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>[]--><org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)> to <org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.view.View: android.content.res.ColorStateList getBackgroundTintList()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: int getBackgroundTint(android.view.View)>[]--><androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>[[-$i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>[]--><org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#2.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#3.the call statck between class <org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#4.the call statck between class <org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#5.the call statck between class <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#6.the call statck between class <org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#7.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#8.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#9.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean isElegantTextHeight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetLeft()> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
-$i0 < 20
Good road: <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]
$z0 == 0
$yysi0 < 16
-$i0 < 20
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
$yysi0 < 16
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>[[$yysi0 < 16]]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
containsStatic:true
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 21
Good road: <org.acra.collector.MediaCodecListCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MediaCodecListCollector: org.json.JSONObject collectMediaCodecList()>[[i0 >= 21]]--><android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[$i1 < 21]][[-$i0 < 26]]
$i0 < 21
$i1 < 21
-$i0 < 26
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i0 < 26]]--><android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#1.the call statck between class <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMinTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.os.Message: void setAsynchronous(boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[]--><android.os.Message: void setAsynchronous(boolean)>
#1.the call statck between class <io.reactivex.android.schedulers.HandlerScheduler$HandlerWorker: io.reactivex.disposables.Disposable schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)> to <android.os.Message: void setAsynchronous(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)> is checking!!!
The life time of api is [23,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>[]--><org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.AbstractHttpServerConnection: void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
#12.the call statck between class <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)> to <org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setOverlapAnchor(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>[[-i0 < 23]]--><android.widget.PopupWindow: void setOverlapAnchor(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.view.View: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[]--><android.view.View: void drawableHotspotChanged(float,float)>
#1.the call statck between class <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)> to <android.view.View: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.widget.TextView: void setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.view.View: void setElevation(float)> is checking!!!
The life time of api is [21,31]
10call roads:
0 Mainhead roads:
10 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardView: void setCardElevation(float)>[]--><androidx.cardview.widget.CardView: void setCardElevation(float)>[]--><androidx.cardview.widget.CardViewApi21Impl: void setElevation(androidx.cardview.widget.CardViewDelegate,float)>[]--><android.view.View: void setElevation(float)>
#1.the call statck between class <com.google.android.material.card.MaterialCardView: void setCardElevation(float)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void setDrawerElevation(float)>[]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21], [$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21]][[$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]
$i8 < 21
$yysi0 < 16
-$i0 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21], [$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.campaigns.CampaignView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><fr.free.nrw.commons.utils.SwipableCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setElevation(float)>
#6.the call statck between class <fr.free.nrw.commons.campaigns.CampaignView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.ThumbnailsAdapter$ViewHolder: void bind(int)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.nearby.NearbyNotificationCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><fr.free.nrw.commons.utils.SwipableCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setElevation(float)>
#10.the call statck between class <fr.free.nrw.commons.nearby.NearbyNotificationCardView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeStepGranularity()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontFeatureSettings()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.Paint: java.lang.String getFontFeatureSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
722call roads:
1 Mainhead roads:
721 Packageshead roads:
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean checkRequiredParameters(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void initializeTelemetryClient()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: com.mapbox.android.telemetry.TelemetryClient createTelemetryClient(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.TelemetryClientFactory: com.mapbox.android.telemetry.TelemetryClient obtainTelemetryClient(android.content.Context)>[[try]]--><com.mapbox.android.telemetry.ChinaServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><com.mapbox.android.telemetry.StagingServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean checkRequiredParameters(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void initializeTelemetryClient()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: com.mapbox.android.telemetry.TelemetryClient createTelemetryClient(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.TelemetryClientFactory: com.mapbox.android.telemetry.TelemetryClient obtainTelemetryClient(android.content.Context)>[[try]]--><com.mapbox.android.telemetry.ChinaServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><com.mapbox.android.telemetry.StagingServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean checkRequiredParameters(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void initializeTelemetryClient()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: com.mapbox.android.telemetry.TelemetryClient createTelemetryClient(java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.TelemetryClientFactory: com.mapbox.android.telemetry.TelemetryClient obtainTelemetryClient(android.content.Context)>[[try]]--><com.mapbox.android.telemetry.ChinaServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><com.mapbox.android.telemetry.StagingServerInformation: com.mapbox.android.telemetry.ServerInformation obtainServerInformation(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.explore.depictions.media.DepictedImagesFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#75.the call statck between class <fr.free.nrw.commons.explore.depictions.media.DepictedImagesFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:true
containsTry:true
76call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)>[]--><androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>[[-i0 < 21]]--><android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>[[-i0 < 28]]--><android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onCreate(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: void <init>(android.content.Context)>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isConnectedToWifi(android.content.Context)>[[try]]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.view.View: void setTransitionName(java.lang.String)> is checking!!!
The life time of api is [21,31]
701call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><fr.free.nrw.commons.CommonsApplication: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void initTimber()>[]--><fr.free.nrw.commons.logging.FileLoggingTree: void <init>(int,java.lang.String,java.lang.String,int,java.util.concurrent.Executor)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
700 Packageshead roads:
-$i0 >= 18
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addDepictionsAndCaptions$7$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: void cancel()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable: void subscribeActual(org.reactivestreams.Subscriber)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <org.slf4j.helpers.NamedLoggerBase: java.lang.Object readResolve()>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$8: void onClick(android.view.View)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity: void deleteVisibleLeak()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.Logger: java.lang.Object readResolve()>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$3: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)>[[try]]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void onSuccess(java.lang.Object)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void onSuccess(java.lang.Object)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: retrofit2.Response execute()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void drain()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.category.CategoryEditHelper: io.reactivex.Single makeCategoryEdit(android.content.Context,fr.free.nrw.commons.Media,java.util.List,fr.free.nrw.commons.category.CategoryEditHelper$Callback)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task remove(com.facebook.cache.common.CacheKey)>[[try]]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)>[]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.NearbyNotificationCardView: boolean onSwipe(android.view.View)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: io.reactivex.SingleSource lambda$onDeleteClicked$6$MediaDetailFragment(java.lang.String,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$populatePlacesForAnotherLocation$19$NearbyParentFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void showErrorMessage(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addDepictsProperty$1$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void access$100(fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void refreshLeaderboard()>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[]--><okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)>[[try]]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$wbj1_b0L0YSojQ4fpcfFc5i9Xp4(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void displayYouWontSeeNearbyMessage()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.mediaDetails.UploadMediaDetailFragment: void showExternalMap(fr.free.nrw.commons.upload.UploadItem)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void disableTelemetrySession()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)>[]--><okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)>[[try]]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.campaigns.CampaignView: boolean onSwipe(android.view.View)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addImageAndMediaLegends$5$WikidataEditService(fr.free.nrw.commons.upload.WikidataItem,java.lang.Long)>[]--><fr.free.nrw.commons.wikidata.WikidataEditService: void handleImageClaimResult(fr.free.nrw.commons.upload.WikidataItem,java.lang.String)>[]--><fr.free.nrw.commons.wikidata.WikidataEditService: void showSuccessToast(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSocketServer: void main(java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void doMain(java.lang.Class,java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onFailure$1$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,java.lang.Throwable)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$2: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaDetailLicenceClicked()>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.CommonsApplication: void lambda$clearApplicationData$0$CommonsApplication()>[]--><fr.free.nrw.commons.CommonsApplication: void clearImageCache()>[]--><com.facebook.imagepipeline.core.ImagePipeline: void clearCaches()>[]--><com.facebook.imagepipeline.core.ImagePipeline: void clearDiskCaches()>[]--><com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task clearAll()>[[try]]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)>[]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableError: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void lambda$setAvatarFromImageUrl$1(android.content.Context,java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.StatusListenerAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSSLSocketServer: void main(java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void doMain(java.lang.Class,java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onCreate(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$3$SettingsFragment(androidx.preference.Preference,java.lang.Object)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void telemetryOptInOut(boolean)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleError: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)>[]--><com.facebook.imagepipeline.producers.JobScheduler: void doJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.location.LocationUpdatesBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.DefinePropertyAction: void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes)>[[try]]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <bolts.Task: void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[[try]]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$31$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$showSnackBarWithRetry$6$AchievementsFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.MapboxTelemetry: void access$100(com.mapbox.android.telemetry.MapboxTelemetry)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void flushEnqueuedEvents()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$6: void onClick(android.view.View)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity: void deleteVisibleLeak()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addImageAndMediaLegends$6$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onDirectionsClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers()>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers()>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$populatePlacesForCurrentLocation$16$NearbyParentFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void showErrorMessage(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.mediaDetails.UploadMediaDetailFragment: void showMessage(java.lang.String,int)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$showSnackBarWithRetry$7$AchievementsFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$3: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaDetailCoordinatesClicked()>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)>[]--><com.mapbox.mapboxsdk.Mapbox: void initializeTelemetry()>[]--><com.mapbox.mapboxsdk.ModuleProviderImpl: com.mapbox.mapboxsdk.maps.TelemetryDefinition obtainTelemetry()>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void <init>()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean enable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void startTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean tryEmitScalar(java.util.concurrent.Callable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableFromCallable: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.location.LocationCollectionClient$1: void handleMessage(android.os.Message)>[[try]]--><com.mapbox.android.telemetry.location.LocationCollectionClient: void handleSettingsChangeMessage(android.os.Message)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean enable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void startTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void lambda$setLeaderboard$2$LeaderboardFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void onError()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,retrofit2.Response)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,retrofit2.Response)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.paging.LivePagedListBuilder$1$1: void onInvalidated()>[]--><androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <kotlinx.coroutines.EventLoopImplBase: void shutdown()>[]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableToListSingle: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.NestedComplexPropertyIA: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addCaption$3$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSSLSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><ch.qos.logback.classic.net.SimpleSSLSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int,javax.net.ssl.SSLContext)>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.AppenderAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.BasicConfigurator: void configureDefaultContext()>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: void enqueue(retrofit2.Callback)>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: io.reactivex.SingleSource lambda$onDeleteClickeddialogtext$8$MediaDetailFragment(java.lang.String,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleDefer: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.review.ReviewController: void reportWrongCategory(android.app.Activity,fr.free.nrw.commons.review.ReviewController$ReviewCallback)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.joran.action.LoggerContextListenerAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.contributions.ContributionController$1: void onImagePickerError(java.lang.Exception,fr.free.nrw.commons.filepicker.FilePicker$ImageSource,int)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void lambda$setAvatarFromImageUrl$0(android.content.Context,fr.free.nrw.commons.profile.leaderboard.UpdateAvatarResponse)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleFromCallable: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$setUploadCount$9$AchievementsFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void onError()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <org.slf4j.impl.StaticLoggerBinder: void reset()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.android.BasicLogcatConfigurator: void configureDefaultContext()>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableDefer: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.crash.CrashReporterJobIntentService: void onHandleWork(android.content.Intent)>[[try]]--><com.mapbox.android.telemetry.crash.CrashReporterJobIntentService: void handleCrashReports(com.mapbox.android.telemetry.crash.CrashReporterClient)>[]--><com.mapbox.android.telemetry.crash.CrashReporterClient: boolean send(com.mapbox.android.telemetry.CrashEvent)>[]--><com.mapbox.android.telemetry.crash.CrashReporterClient: boolean sendSync(com.mapbox.android.telemetry.CrashEvent,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.CountDownLatch)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.SingleSource lambda$null$5$DeleteHelper(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.RealCall$1: void timedOut()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableToList: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void access$000(android.content.Context,android.graphics.Bitmap)>[]--><fr.free.nrw.commons.utils.ImageUtils: void setWallpaper(android.content.Context,android.graphics.Bitmap)>[[try]]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.maybe.MaybeFromCallable: void subscribeActual(io.reactivex.MaybeObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void lambda$onCreateView$0$LeaderboardFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void scrollToUserRank()>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransitionImpl$1: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void execute()>[[try]]--><retrofit2.OkHttpCall$1: void onResponse(okhttp3.Call,okhttp3.Response)>[[try]]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.view.View: void setTransitionName(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:true
701call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.view.ViewParent: void onStopNestedScroll(android.view.View)> is checking!!!
The life time of api is [21,31]
712call roads:
1 Mainhead roads:
711 Packageshead roads:
containsStatic:true
containsTry:true
712call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
One road protect good!
#21.the call statck between class <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()> to <android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:true
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.app.Activity: void postponeEnterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()>[]--><androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void postponeEnterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 26
Good road: <com.squareup.leakcanary.internal.LeakCanaryInternals: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <fr.free.nrw.commons.CommonsAppAdapter: void updateAccount(org.wikipedia.login.LoginResult)>[]--><fr.free.nrw.commons.auth.SessionManager: void updateAccount(org.wikipedia.login.LoginResult)>[]--><fr.free.nrw.commons.auth.SessionManager: boolean createAccount(java.lang.String,java.lang.String)>[]--><fr.free.nrw.commons.auth.SessionManager: void removeAccount()>[[-$i0 < 22]]--><android.accounts.AccountManager: boolean removeAccountExplicitly(android.accounts.Account)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.view.View: boolean isNestedScrollingEnabled()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]
$z0 == 0
$yysi0 < 16
-$i0 < 21
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.content.res.TypedArray: int getChangingConfigurations()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: android.os.IBinder getBinder()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()>[]--><android.app.job.JobServiceEngine: android.os.IBinder getBinder()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()> to <android.app.job.JobServiceEngine: android.os.IBinder getBinder()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.karumi.dexter.DexterActivity dummyMainMethod_com_karumi_dexter_DexterActivity(android.content.Intent)>[]--><com.karumi.dexter.DexterActivity: void onCreate(android.os.Bundle)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadActivity dummyMainMethod_fr_free_nrw_commons_upload_UploadActivity(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
14 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onResume()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
-i0 < 23
Good road: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void setUserVisibleHint(boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <com.karumi.dexter.DexterActivity: void onNewIntent(android.content.Intent)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
703call roads:
1 Mainhead roads:
702 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#179.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:true
containsTry:true
180call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)>[[-$i0 < 21]]--><android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[[]]--><android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
#1.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)>[]--><android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
#2.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)> to <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetRight()> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
-$i0 < 20
Good road: <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]
$z0 == 0
$yysi0 < 16
-$i0 < 20
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
$yysi0 < 16
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>[[$yysi0 < 16]]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
containsStatic:true
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
704call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.mapbox.android.telemetry.provider.MapboxTelemetryInitProvider: boolean onCreate()>[[try]]--><com.mapbox.android.telemetry.location.LocationCollectionClient: com.mapbox.android.telemetry.location.LocationCollectionClient install(android.content.Context,long)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void <init>(android.content.Context,java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.SchedulerFlusherFactory: void <init>(android.content.Context,com.mapbox.android.telemetry.AlarmReceiver)>[]--><com.mapbox.android.telemetry.SchedulerFlusherFactory: void checkUpdatePeriod(android.content.Context)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
703 Packageshead roads:
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onResume()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><com.mapbox.mapboxsdk.maps.MapView: void onStart()>[]--><com.mapbox.mapboxsdk.storage.FileSource: com.mapbox.mapboxsdk.storage.FileSource getInstance(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getResourcesCachePath(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getDefaultCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: boolean isExternalStorageConfiguration(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$3: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.TelemetryEnabler: boolean isEventsEnabled(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void disableTelemetrySession()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.TelemetryEnabler: boolean isEventsEnabled(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.TelemetryEnabler: boolean isEventsEnabled(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onStop()>[]--><com.mapbox.mapboxsdk.maps.MapView: void onStop()>[]--><com.mapbox.mapboxsdk.storage.FileSource: com.mapbox.mapboxsdk.storage.FileSource getInstance(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getResourcesCachePath(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getDefaultCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: boolean isExternalStorageConfiguration(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$3$SettingsFragment(androidx.preference.Preference,java.lang.Object)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void telemetryOptInOut(boolean)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.TelemetryEnabler: boolean isEventsEnabled(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.NativeMapView: void <init>(android.content.Context,float,boolean,com.mapbox.mapboxsdk.maps.NativeMapView$ViewCallback,com.mapbox.mapboxsdk.maps.NativeMapView$StateCallback,com.mapbox.mapboxsdk.maps.renderer.MapRenderer)>[]--><com.mapbox.mapboxsdk.storage.FileSource: com.mapbox.mapboxsdk.storage.FileSource getInstance(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getResourcesCachePath(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getDefaultCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: boolean isExternalStorageConfiguration(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)>[]--><com.mapbox.mapboxsdk.Mapbox: void initializeTelemetry()>[]--><com.mapbox.mapboxsdk.ModuleProviderImpl: com.mapbox.mapboxsdk.maps.TelemetryDefinition obtainTelemetry()>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void <init>()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void <init>(android.content.Context,java.lang.String,java.lang.String)>[]--><com.mapbox.android.telemetry.SchedulerFlusherFactory: void <init>(android.content.Context,com.mapbox.android.telemetry.AlarmReceiver)>[]--><com.mapbox.android.telemetry.SchedulerFlusherFactory: void checkUpdatePeriod(android.content.Context)>[]--><com.mapbox.android.telemetry.TelemetryUtils: boolean adjustWakeUpMode(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)>[]--><com.mapbox.mapboxsdk.AccountsManager: void <init>()>[]--><com.mapbox.mapboxsdk.AccountsManager: boolean isSkuTokenManaged()>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)>[]--><com.mapbox.mapboxsdk.storage.FileSource: com.mapbox.mapboxsdk.storage.FileSource getInstance(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getResourcesCachePath(android.content.Context)>[[try]]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: java.lang.String getDefaultCachePath(android.content.Context)>[]--><com.mapbox.mapboxsdk.storage.FileSource: boolean isExternalStorageConfiguration(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.location.LocationCollectionClient$1: void handleMessage(android.os.Message)>[[try]]--><com.mapbox.android.telemetry.location.LocationCollectionClient: void handleSettingsChangeMessage(android.os.Message)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean enable()>[]--><com.mapbox.android.telemetry.TelemetryEnabler: boolean isEventsEnabled(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: void onRestoreInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#481.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:true
containsTry:true
482call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.widget.TextView: int getHyphenationFrequency()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getHyphenationFrequency()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.textfield.CutoutDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.textfield.CutoutDrawable: void preDraw(android.graphics.Canvas)>[]--><com.google.android.material.textfield.CutoutDrawable: void saveCanvasLayer(android.graphics.Canvas)>[[-$i0 < 21]]--><android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionEnabled(boolean)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void initialiseAttribution(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionTintColor(int)>[]--><com.mapbox.mapboxsdk.utils.ColorUtils: void setTintList(android.widget.ImageView,int)>[]--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 21
Good road: <com.mapbox.mapboxsdk.maps.MapView: void access$800(com.mapbox.mapboxsdk.maps.MapView)>[]--><com.mapbox.mapboxsdk.maps.MapView: void initialiseMap()>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void initialise(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void initialise(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void initialiseAttribution(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionTintColor(int)>[]--><com.mapbox.mapboxsdk.utils.ColorUtils: void setTintList(android.widget.ImageView,int)>[]--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float)>[[-i0 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
-$i3 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)>[[-$i3 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
-i6 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)>[[-i6 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action build()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.view.View: void setKeyboardNavigationCluster(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[$i1 < 21]][[-$i0 < 26]]
$i0 < 21
$i1 < 21
-$i0 < 26
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21], [-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.widget.EdgeEffect: void onPull(float,float)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 >= 18
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)>[]--><androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)>[[-$i0 < 21]]--><android.widget.EdgeEffect: void onPull(float,float)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: boolean isWifiEnabled()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onCreate(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: void <init>(android.content.Context)>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isConnectedToWifi(android.content.Context)>[[try]]--><android.net.wifi.WifiManager: boolean isWifiEnabled()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 <= 21
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.canvas.CanvasCompat: int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)>[[-$i1 <= 21]]--><android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)>[[-$i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <android.widget.AutoCompleteTextView: void refreshAutoCompleteResults()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)> is checking!!!
The life time of api is [28,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-$i2 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$3: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26], [-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26]][[-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
-i0 >= 26
-i0 < 19
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26], [-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: android.content.Intent getIntent()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#2.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.karumi.dexter.DexterActivity dummyMainMethod_com_karumi_dexter_DexterActivity(android.content.Intent)>[]--><com.karumi.dexter.DexterActivity: void onCreate(android.os.Bundle)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadActivity dummyMainMethod_fr_free_nrw_commons_upload_UploadActivity(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
14 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onResume()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void setUserVisibleHint(boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <com.karumi.dexter.DexterActivity: void onNewIntent(android.content.Intent)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 26
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadService dummyMainMethod_fr_free_nrw_commons_upload_UploadService(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadService: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.review.ReviewActivity dummyMainMethod_fr_free_nrw_commons_review_ReviewActivity(android.content.Intent)>[]--><fr.free.nrw.commons.review.ReviewActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.review.ReviewController: void <init>(fr.free.nrw.commons.delete.DeleteHelper,android.content.Context)>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><fr.free.nrw.commons.CommonsApplication: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
1 Packageshead roads:
-i0 < 26
Good road: <com.squareup.leakcanary.internal.LeakCanaryInternals: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> is checking!!!
The life time of api is [23,31]
50call roads:
0 Mainhead roads:
50 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#1.the call statck between class <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#2.the call statck between class <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#3.the call statck between class <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)>[]--><org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#4.the call statck between class <org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#5.the call statck between class <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#6.the call statck between class <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#7.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpProtocolParamBean: void setUserAgent(java.lang.String)>[]--><org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#8.the call statck between class <org.apache.http.params.HttpProtocolParamBean: void setUserAgent(java.lang.String)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#9.the call statck between class <org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#10.the call statck between class <org.apache.http.conn.params.ConnRouteParams: void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewRemoved(android.view.View)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <android.widget.TextView: boolean setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[[try]]--><androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)> is checking!!!
The life time of api is [21,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
containsStatic:true
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 < 21]]--><android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]
-i0 < 20
-i1 < 23
i0 < 26
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
708call roads:
1 Mainhead roads:
707 Packageshead roads:
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: boolean isNetworkConnectionEstablished()>[]--><fr.free.nrw.commons.utils.NetworkUtils: boolean isInternetConnectionEstablished(android.content.Context)>[]--><fr.free.nrw.commons.utils.NetworkUtils: android.net.NetworkInfo getNetworkInfo(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#113.the call statck between class <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: boolean isNetworkConnectionEstablished()> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:true
containsTry:true
114call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <android.graphics.Outline: void setAlpha(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setAlpha(float)>
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setAlpha(float)>
#1.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setAlpha(float)>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void setVisibility(int)> is checking!!!
The life time of api is [21,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <android.widget.TextView: void setFirstBaselineToTopHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>[[-i1 < 28]]--><android.widget.TextView: void setFirstBaselineToTopHeight(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setHotspot(float,float)> is checking!!!
The life time of api is [21,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.facebook.drawee.drawable.ForwardingDrawable: void setHotspot(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#1.the call statck between class <com.facebook.drawee.drawable.ForwardingDrawable: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#2.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.facebook.drawee.drawable.ArrayDrawable: void setHotspot(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#3.the call statck between class <com.facebook.drawee.drawable.ArrayDrawable: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#6.the call statck between class <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <android.view.View: void setClipToOutline(boolean)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)>[]--><com.google.android.material.card.MaterialCardView: void updateContentLayout()>[[-$i0 < 21]]--><com.google.android.material.card.MaterialCardViewHelper: void createOutlineProvider(android.view.View)>[]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.campaigns.CampaignView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><fr.free.nrw.commons.utils.SwipableCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setClipToOutline(boolean)>
#2.the call statck between class <fr.free.nrw.commons.campaigns.CampaignView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setClipToOutline(boolean)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setRadius(float)>[]--><com.google.android.material.card.MaterialCardView: void updateContentLayout()>[[-$i0 < 21]]--><com.google.android.material.card.MaterialCardViewHelper: void createOutlineProvider(android.view.View)>[]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.nearby.NearbyNotificationCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><fr.free.nrw.commons.utils.SwipableCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setClipToOutline(boolean)>
#4.the call statck between class <fr.free.nrw.commons.nearby.NearbyNotificationCardView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setClipToOutline(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#1.the call statck between class <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#2.the call statck between class <org.apache.http.client.params.HttpClientParams: void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#3.the call statck between class <org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setConnectionManagerTimeout(long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#4.the call statck between class <org.apache.http.client.params.ClientParamBean: void setConnectionManagerTimeout(long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
#1.the call statck between class <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>has compatibility isssues！
-----------------------------------------
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()>[[-$i0 < 20]]--><android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
One road protect good!
crashApis:32
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
One road protect good!
-$i4 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)>[[-$i4 < 20]]--><android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
One road protect good!
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.quiz.QuizActivity dummyMainMethod_fr_free_nrw_commons_quiz_QuizActivity(android.content.Intent)>[]--><fr.free.nrw.commons.quiz.QuizActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.quiz.QuizActivity: void displayQuestion()>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
One road protect good!
2 Packageshead roads:
-$i1 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>[]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
One road protect good!
-$i1 < 21
Good road: <fr.free.nrw.commons.quiz.QuizActivity: void lambda$customAlert$3$QuizActivity(android.content.DialogInterface,int)>[]--><fr.free.nrw.commons.quiz.QuizActivity: void displayQuestion()>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
try
Good road with try: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>[[try]]--><android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <android.view.View: void invalidateOutline()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.chip.Chip: void onChipDrawableSizeChange()>[[-$i0 < 21]]--><android.view.View: void invalidateOutline()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
-i0 < 22
Good road: <org.acra.dialog.BaseCrashReportDialog: void lambda$sendCrash$1$BaseCrashReportDialog(java.lang.String,java.lang.String)>[]--><org.acra.scheduler.SchedulerStarter: void scheduleReports(java.io.File,boolean)>[]--><org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)>[[-i0 < 22]]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
containsStatic:true
containsTry:true
702call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategy: java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
706call roads:
1 Mainhead roads:
705 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <fr.free.nrw.commons.media.MediaDetailPagerFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#16.the call statck between class <fr.free.nrw.commons.media.MediaDetailPagerFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:true
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [21,31]
705call roads:
1 Mainhead roads:
704 Packageshead roads:
containsStatic:true
containsTry:true
705call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean isConsumed()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 19
-$z0 == 0
-$i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)>[[$yysi0 < 19]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat)>[[-$z0 == 0]]--><androidx.core.view.WindowInsetsCompat: boolean isConsumed()>[[-$i0 < 21]]--><android.view.WindowInsets: boolean isConsumed()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: boolean isConsumed()>[[-$i0 < 21]]--><android.view.WindowInsets: boolean isConsumed()>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)> to <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.transition.TransitionSet: int getTransitionCount()> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: int getTransitionCount()>
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: int getTransitionCount()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><android.transition.TransitionSet: int getTransitionCount()>
One road protect good!
#21.the call statck between class <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()> to <android.transition.TransitionSet: int getTransitionCount()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:true
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
725call roads:
1 Mainhead roads:
724 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <com.mapbox.mapboxsdk.location.LocationComponent: void access$1000(com.mapbox.mapboxsdk.location.LocationComponent,android.location.Location,boolean)>[]--><com.mapbox.mapboxsdk.location.LocationComponent: void updateLocation(android.location.Location,boolean)>[]--><com.mapbox.mapboxsdk.location.LocationAnimatorCoordinator: void feedNewLocation(android.location.Location,com.mapbox.mapboxsdk.camera.CameraPosition,boolean)>[]--><com.mapbox.mapboxsdk.location.LocationAnimatorCoordinator: void playAnimators(long,int[])>[]--><com.mapbox.mapboxsdk.location.MapboxAnimatorSetProvider: void startAnimation(java.util.List,android.view.animation.Interpolator,long)>[]--><android.animation.AnimatorSet: void <init>()>
#62.the call statck between class <com.mapbox.mapboxsdk.location.LocationComponent: void access$1000(com.mapbox.mapboxsdk.location.LocationComponent,android.location.Location,boolean)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:true
containsTry:true
63call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
16call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.CrashReportDialog: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.contributions.MainActivity dummyMainMethod_fr_free_nrw_commons_contributions_MainActivity(android.content.Intent)>[]--><fr.free.nrw.commons.contributions.MainActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.review.ReviewActivity dummyMainMethod_fr_free_nrw_commons_review_ReviewActivity(android.content.Intent)>[]--><fr.free.nrw.commons.review.ReviewActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.review.ReviewPagerAdapter: androidx.fragment.app.Fragment getItem(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
15 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onSaveInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onSaveInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void onSaveInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void onSaveInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void saveCompass(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#2.the call statck between class <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.preference.PreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#4.the call statck between class <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#5.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#6.the call statck between class <androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.media.MediaDetailFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#7.the call statck between class <fr.free.nrw.commons.media.MediaDetailFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.media.MediaDetailPagerFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#8.the call statck between class <fr.free.nrw.commons.media.MediaDetailPagerFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.preference.PreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.fragment.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#10.the call statck between class <androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:38
crashApisInMain:1
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createDeviceProtectedStorageContext()> is checking!!!
The life time of api is [24,31]
21call roads:
0 Mainhead roads:
21 Packageshead roads:
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.MultiSelectListPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.MultiSelectListPreference: void setValues(java.util.Set)>[]--><androidx.preference.Preference: boolean persistStringSet(java.util.Set)>[]--><androidx.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.PreferenceManager: android.content.SharedPreferences$Editor getEditor()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onClick()>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference$1: void onStopTrackingTouch(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void syncValueInternal(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>[]--><androidx.preference.PreferenceFragmentCompat: void setPreferencesFromResource(int,java.lang.String)>[]--><androidx.preference.PreferenceManager: androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen)>[]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup)>[[try]]--><androidx.preference.PreferenceInflater: void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet)>[]--><androidx.preference.PreferenceGroup: void addItemFromInflater(androidx.preference.Preference)>[]--><androidx.preference.PreferenceGroup: boolean addPreference(androidx.preference.Preference)>[]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager,long)>[[try]]--><androidx.preference.Preference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>[]--><androidx.preference.Preference: void dispatchSetInitialValue()>[]--><androidx.preference.Preference: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <fr.free.nrw.commons.settings.SettingsFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void prepareLanguages()>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.SeekBarPreference: void setValue(int)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SeekBarPreference$1: void onProgressChanged(android.widget.SeekBar,int,boolean)>[]--><androidx.preference.SeekBarPreference: void syncValueInternal(android.widget.SeekBar)>[]--><androidx.preference.SeekBarPreference: void setValueInternal(int,boolean)>[]--><androidx.preference.Preference: boolean persistInt(int)>[]--><androidx.preference.Preference: int getPersistedInt(int)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.DropDownPreference$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreferenceDialogFragmentCompat: void onDialogClosed(boolean)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.EditTextPreference: void setText(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.CheckBoxPreference$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.ListPreference: void setValue(java.lang.String)>[]--><androidx.preference.Preference: boolean persistString(java.lang.String)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.ListPreference: void onSetInitialValue(java.lang.Object)>[]--><androidx.preference.Preference: java.lang.String getPersistedString(java.lang.String)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.SwitchPreferenceCompat$Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
-$i0 < 24
Good road: <androidx.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>[]--><androidx.preference.TwoStatePreference: void setChecked(boolean)>[]--><androidx.preference.Preference: boolean persistBoolean(boolean)>[]--><androidx.preference.Preference: boolean getPersistedBoolean(boolean)>[]--><androidx.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>[]--><androidx.core.content.ContextCompat: android.content.Context createDeviceProtectedStorageContext(android.content.Context)>[[-$i0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
containsStatic:false
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)> is checking!!!
The life time of api is [28,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
-$i3 < 29
Good road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip$ChipTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.collection.SparseArrayCompat getAllNodes()>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <com.google.android.material.chip.Chip: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: void updateHoveredVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
-$i3 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)>[[-$i3 < 29]]--><android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <android.view.View: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isScreenReaderFocusable()>
#1.the call statck between class <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)> is checking!!!
The life time of api is [23,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
-i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()>[[-i0 < 21]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()>[[-i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
91call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.notification.NotificationActivity dummyMainMethod_fr_free_nrw_commons_notification_NotificationActivity(android.content.Intent)>[]--><fr.free.nrw.commons.notification.NotificationActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.notification.NotificationActivity: void initListView()>[]--><fr.free.nrw.commons.notification.NotificationActivity: void refresh(boolean)>[]--><fr.free.nrw.commons.utils.NetworkUtils: boolean isInternetConnectionEstablished(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnectedOrConnecting()>has compatibility isssues！
-----------------------------------------
90 Packageshead roads:
crashApis:41
crashApisInMain:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i3 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>[[-$i3 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEpicenterBounds(android.graphics.Rect)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
crashApis:42
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19], [i0 < 26], [i0 < 24], [i0 < 20], [-i0 < 16], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19]][[i0 < 26]][[i0 < 24]][[i0 < 20]][[-i0 < 16]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 24
i0 < 20
-i0 < 16
i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19], [i0 < 26], [i0 < 24], [i0 < 20], [-i0 < 16], [i0 < 21]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#2.the call statck between class <androidx.fragment.app.FragmentStatePagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#3.the call statck between class <androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isPowerSaveMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <android.graphics.Paint: float getLetterSpacing()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 21]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 21]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <android.app.FragmentManager: void registerFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks,boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <com.squareup.leakcanary.internal.FragmentRefWatcher$Helper$1: void onActivityCreated(android.app.Activity,android.os.Bundle)>[]--><com.squareup.leakcanary.internal.AndroidOFragmentRefWatcher: void watchFragments(android.app.Activity)>[]--><android.app.FragmentManager: void registerFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks,boolean)>
#1.the call statck between class <com.squareup.leakcanary.internal.FragmentRefWatcher$Helper$1: void onActivityCreated(android.app.Activity,android.os.Bundle)> to <android.app.FragmentManager: void registerFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:45
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.facebook.drawee.drawable.RoundedDrawable: android.graphics.ColorFilter getColorFilter()>[]--><android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
#2.the call statck between class <com.facebook.drawee.drawable.RoundedDrawable: android.graphics.ColorFilter getColorFilter()> to <android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams copy()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>
#1.the call statck between class <org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams copy()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <android.transition.Transition: java.util.List getTargetTypes()> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetTypes()>
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetTypes()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetTypes()>
One road protect good!
#21.the call statck between class <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()> to <android.transition.Transition: java.util.List getTargetTypes()>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:true
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$5: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void showError(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void lambda$addTextChangeListenerToSearchBox$1$DepictsFragment(io.reactivex.Notification)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void lambda$addTextChangeListenerToEtSearch$0$UploadCategoriesFragment(io.reactivex.Notification)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.tabs.TabLayout$TabView: void update()>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.chip.Chip: void setTextAppearance(int)>[]--><android.widget.TextView: void setTextAppearance(int)>
#9.the call statck between class <com.google.android.material.chip.Chip: void setTextAppearance(int)> to <android.widget.TextView: void setTextAppearance(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
crashApis:49
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)> is checking!!!
The life time of api is [21,31]
701call roads:
1 Mainhead roads:
700 Packageshead roads:
containsStatic:true
containsTry:true
701call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <android.widget.TextView: void setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)> is checking!!!
The life time of api is [29,31]
3call roads:
1 Mainhead roads:
-i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.BaseCrashReportDialog: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[[-i0 < 29]]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
One road protect good!
2 Packageshead roads:
-i0 < 29
Good road: <androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[[-i0 < 29]]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)>[]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
#2.the call statck between class <androidx.lifecycle.ProcessLifecycleOwner$3: void onActivityPreCreated(android.app.Activity,android.os.Bundle)> to <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])> is checking!!!
The life time of api is [1,29]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest)>[]--><com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri,com.facebook.imagepipeline.common.ResizeOptions)>[[try]]--><com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer: com.facebook.imagepipeline.image.EncodedImage getThumbnail(com.facebook.imagepipeline.common.ResizeOptions,int)>[[try]]--><android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)>[]--><com.google.android.material.card.MaterialCardView: void updateContentLayout()>[[-$i0 < 21]]--><com.google.android.material.card.MaterialCardViewHelper: void createOutlineProvider(android.view.View)>[]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setRadius(float)>[]--><com.google.android.material.card.MaterialCardView: void updateContentLayout()>[[-$i0 < 21]]--><com.google.android.material.card.MaterialCardViewHelper: void createOutlineProvider(android.view.View)>[]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>[]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
$i0 >= 23
-$i0 < 21
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 >= 23]]--><com.google.android.material.chip.Chip: void initOutlineProvider()>[[-$i0 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
705call roads:
1 Mainhead roads:
704 Packageshead roads:
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.mapbox.android.telemetry.EventsQueue$1: void run()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void onFullQueue(java.util.List)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void sendEvents(java.util.List,boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean isNetworkConnected()>[[try]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <com.mapbox.mapboxsdk.net.ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.mapbox.mapboxsdk.net.ConnectivityReceiver: boolean isNetworkActive()>[]--><android.net.NetworkInfo: boolean isConnected()>
#310.the call statck between class <com.mapbox.mapboxsdk.net.ConnectivityReceiver: void onReceive(android.content.Context,android.content.Intent)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:true
containsTry:true
311call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <android.app.Activity: void startPostponedEnterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()>[]--><androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void startPostponedEnterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [21,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.tabs.TabLayout$TabView: void updateBackgroundDrawable(android.content.Context)>[[-i0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.chip.Chip: void onChipDrawableSizeChange()>[]--><com.google.android.material.chip.Chip: void updateBackgroundDrawable()>[[-$yysi0 < 21]]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createForegroundRippleDrawable()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: void setRippleColorResource(int)>[]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
#4.the call statck between class <com.google.android.material.chip.Chip: void setRippleColorResource(int)> to <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)>[]--><com.google.android.material.chip.Chip: void updateBackgroundDrawable()>[[-$yysi0 < 21]]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
#7.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)> to <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
#8.the call statck between class <com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)> to <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:true
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0], [$yysi0 < 16], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0]][[$yysi0 < 16]][[-$i8 < 21]]
-$z3 == 0
$yysi0 < 16
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0], [$yysi0 < 16], [-$i8 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
-i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>[]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
#4.the call statck between class <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> to <android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:true
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
i1 < 23
-i0 < 20
-$i0 < 29
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: int getScaledHoverSlop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>[[-$i0 < 28]]--><android.view.ViewConfiguration: int getScaledHoverSlop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>[[]]--><android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>has compatibility isssues！
-----------------------------------------
crashApis:56
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <android.view.View: void setForeground(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#1.the call statck between class <com.google.android.material.card.MaterialCardView: void setClickable(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.mapbox.mapboxsdk.maps.MapView$InitialRenderCallback: void onDidFinishRenderingFrame(boolean)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#2.the call statck between class <com.mapbox.mapboxsdk.maps.MapView$InitialRenderCallback: void onDidFinishRenderingFrame(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void setCornerRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#3.the call statck between class <com.google.android.material.card.MaterialCardView: void setRadius(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.mapbox.mapboxsdk.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.mapbox.mapboxsdk.maps.MapView: void initialize(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#4.the call statck between class <com.mapbox.mapboxsdk.maps.MapView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#5.the call statck between class <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#6.the call statck between class <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#7.the call statck between class <com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:57
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <android.view.View: int getImportantForAutofill()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <android.content.res.Resources.Theme: android.content.res.Resources getResources()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 188 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 189 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 190 Potential Issue API: SDKCheck of <android.graphics.Path: boolean isConvex()> is checking!!!
The life time of api is [21,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.textfield.CutoutDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Path: boolean isConvex()>
#3.the call statck between class <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Path: boolean isConvex()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Path: boolean isConvex()>
#4.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Path: boolean isConvex()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Path: boolean isConvex()>
#5.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Path: boolean isConvex()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.google.android.material.textfield.TextInputLayout: void draw(android.graphics.Canvas)>[]--><com.google.android.material.textfield.TextInputLayout: void drawBoxUnderline(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
crashApis:60
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 191 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>[[-i0 < 23]]--><android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 192 Potential Issue API: SDKCheck of <android.view.View: java.lang.String getTransitionName()> is checking!!!
The life time of api is [21,31]
704call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><fr.free.nrw.commons.CommonsApplication: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void initTimber()>[]--><fr.free.nrw.commons.logging.FileLoggingTree: void <init>(int,java.lang.String,java.lang.String,int,java.util.concurrent.Executor)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
703 Packageshead roads:
-$i0 >= 18
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.WebpTranscodeProducer: void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.TiledPagedList: void onPagePlaceholderInserted(int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addDepictionsAndCaptions$7$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: void cancel()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.flowable.FlowableScalarXMap$ScalarXMapFlowable: void subscribeActual(org.reactivestreams.Subscriber)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <org.slf4j.helpers.NamedLoggerBase: java.lang.Object readResolve()>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.TransitionSet: void captureEndValues(androidx.transition.TransitionValues)>[]--><androidx.transition.Transition: boolean isValidTarget(android.view.View)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$8: void onClick(android.view.View)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity: void deleteVisibleLeak()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.Logger: java.lang.Object readResolve()>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()>[]--><androidx.room.InvalidationTracker: void refreshVersionsSync()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$3: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)>[[try]]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void onSuccess(java.lang.Object)>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThreadHandoffProducer$1: void onSuccess(java.lang.Object)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: retrofit2.Response execute()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableConcatMap$ConcatMapDelayErrorObserver: void drain()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableScalarXMap$ScalarXMapObservable: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.category.CategoryEditHelper: io.reactivex.Single makeCategoryEdit(android.content.Context,fr.free.nrw.commons.Media,java.util.List,fr.free.nrw.commons.category.CategoryEditHelper$Callback)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void ping(boolean,int,int)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task remove(com.facebook.cache.common.CacheKey)>[[try]]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)>[]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.NearbyNotificationCardView: boolean onSwipe(android.view.View)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: io.reactivex.SingleSource lambda$onDeleteClicked$6$MediaDetailFragment(java.lang.String,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onFailureImpl(java.lang.Throwable)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$populatePlacesForAnotherLocation$19$NearbyParentFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void showErrorMessage(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addDepictsProperty$1$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[]--><okhttp3.internal.http2.Http2Connection: void pushHeadersLater(int,java.util.List,boolean)>[[try]]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void headers(boolean,int,int,java.util.List)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void access$100(fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void refreshLeaderboard()>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$wbj1_b0L0YSojQ4fpcfFc5i9Xp4(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void displayYouWontSeeNearbyMessage()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.mediaDetails.UploadMediaDetailFragment: void showExternalMap(fr.free.nrw.commons.upload.UploadItem)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void disableTelemetrySession()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.paging.DataSource$LoadCallbackHelper: void dispatchResultToReceiver(androidx.paging.PageResult)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void load(com.squareup.leakcanary.internal.DisplayLeakActivity,com.squareup.leakcanary.LeakDirectoryProvider)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer: void onRequestFinished()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void pushPromise(int,int,java.util.List)>[]--><okhttp3.internal.http2.Http2Connection: void pushRequestLater(int,java.util.List)>[[try]]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.campaigns.CampaignView: boolean onSwipe(android.view.View)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.maps.AttributionDialogManager$1: void onClick(android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addImageAndMediaLegends$5$WikidataEditService(fr.free.nrw.commons.upload.WikidataItem,java.lang.Long)>[]--><fr.free.nrw.commons.wikidata.WikidataEditService: void handleImageClaimResult(fr.free.nrw.commons.upload.WikidataItem,java.lang.String)>[]--><fr.free.nrw.commons.wikidata.WikidataEditService: void showSuccessToast(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSocketServer: void main(java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void doMain(java.lang.Class,java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onFailure$1$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,java.lang.Throwable)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$2: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaDetailLicenceClicked()>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$yysi0 < 19
-$i0 < 21
Good road: <androidx.transition.FragmentTransitionSupport: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Transition: void captureValues(android.view.ViewGroup,boolean)>[]--><androidx.transition.Transition: void captureHierarchy(android.view.View,boolean)>[]--><androidx.transition.Transition: void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.CommonsApplication: void lambda$clearApplicationData$0$CommonsApplication()>[]--><fr.free.nrw.commons.CommonsApplication: void clearImageCache()>[]--><com.facebook.imagepipeline.core.ImagePipeline: void clearCaches()>[]--><com.facebook.imagepipeline.core.ImagePipeline: void clearDiskCaches()>[]--><com.facebook.imagepipeline.cache.BufferedDiskCache: bolts.Task clearAll()>[[try]]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor)>[]--><bolts.Task: bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableError: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void lambda$setAvatarFromImageUrl$1(android.content.Context,java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.StatusListenerAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.TransitionSet: void captureStartValues(androidx.transition.TransitionValues)>[]--><androidx.transition.Transition: boolean isValidTarget(android.view.View)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSSLSocketServer: void main(java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void doMain(java.lang.Class,java.lang.String[])>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$6: void onInvalidated(java.util.Set)>[[try]]--><androidx.room.MultiInstanceInvalidationService$2: void broadcastInvalidation(int,java.lang.String[])>[[try]]--><androidx.room.MultiInstanceInvalidationClient$1: void onInvalidation(java.lang.String[])>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.room.MultiInstanceInvalidationClient$2: void onServiceDisconnected(android.content.ComponentName)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.ViewUtil: void showDismissibleSnackBar(android.view.View,int,int,android.view.View$OnClickListener)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onCreate(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$3$SettingsFragment(androidx.preference.Preference,java.lang.Object)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void telemetryOptInOut(boolean)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void setUserTelemetryRequestState(boolean)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean disable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void stopTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleError: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)>[]--><com.facebook.imagepipeline.producers.JobScheduler: void doJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)>[]--><androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.location.LocationUpdatesBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.DefinePropertyAction: void begin(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String,org.xml.sax.Attributes)>[[try]]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <bolts.Task: void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[[try]]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$31$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$showSnackBarWithRetry$6$AchievementsFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.MapboxTelemetry: void access$100(com.mapbox.android.telemetry.MapboxTelemetry)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void flushEnqueuedEvents()>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.squareup.leakcanary.internal.DisplayLeakActivity$6: void onClick(android.view.View)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity: void deleteVisibleLeak()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addImageAndMediaLegends$6$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void verticalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.FastScroller: void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.FastScroller: void horizontalScrollTo(float)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onDirectionsClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers()>[]--><com.facebook.imagepipeline.producers.PartialDiskCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer: void startInputProducerIfHasAttachedConsumers()>[]--><com.facebook.imagepipeline.producers.DiskCacheReadProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation)>[]--><bolts.Task: bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken)>[]--><bolts.Task: void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$populatePlacesForCurrentLocation$16$NearbyParentFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void showErrorMessage(java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void rstStream(int,okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void pushResetLater(int,okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void pushExecutorExecute(okhttp3.internal.NamedRunnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void applyAndAckSettings(okhttp3.internal.http2.Settings)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.upload.mediaDetails.UploadMediaDetailFragment: void showMessage(java.lang.String,int)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$showSnackBarWithRetry$7$AchievementsFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$3: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaDetailCoordinatesClicked()>[]--><fr.free.nrw.commons.Utils: void handleGeoCoordinates(android.content.Context,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.mapboxsdk.Mapbox: void setAccessToken(java.lang.String)>[]--><com.mapbox.mapboxsdk.Mapbox: void initializeTelemetry()>[]--><com.mapbox.mapboxsdk.ModuleProviderImpl: com.mapbox.mapboxsdk.maps.TelemetryDefinition obtainTelemetry()>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void <init>()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean enable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void startTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableFlatMap$MergeObserver: boolean tryEmitScalar(java.util.concurrent.Callable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <kotlinx.coroutines.CommonPool: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableFromCallable: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.location.LocationCollectionClient$1: void handleMessage(android.os.Message)>[[try]]--><com.mapbox.android.telemetry.location.LocationCollectionClient: void handleSettingsChangeMessage(android.os.Message)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean enable()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void startTelemetry()>[]--><com.mapbox.android.telemetry.MapboxTelemetry: void enableLocationCollector(boolean)>[[try]]--><com.mapbox.android.telemetry.MapboxTelemetry: void executeRunnable(java.lang.Runnable)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void lambda$setLeaderboard$2$LeaderboardFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void onError()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.core.widget.AutoScrollHelper: void startAnimating()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.TransitionManager$MultiListener: boolean onPreDraw()>[]--><androidx.transition.Transition: void playTransition(android.view.ViewGroup)>[]--><androidx.transition.Transition: void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps)>[]--><androidx.transition.Transition: void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap)>[]--><androidx.transition.Transition: boolean isValidTarget(android.view.View)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.TransitionManager$MultiListener: boolean onPreDraw()>[]--><androidx.transition.Transition: void captureValues(android.view.ViewGroup,boolean)>[]--><androidx.transition.Transition: void captureHierarchy(android.view.View,boolean)>[]--><androidx.transition.Transition: void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,retrofit2.Response)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,retrofit2.Response)>[]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.paging.LivePagedListBuilder$1$1: void onInvalidated()>[]--><androidx.lifecycle.ComputableLiveData: void invalidate()>[]--><androidx.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <kotlinx.coroutines.EventLoopImplBase: void shutdown()>[]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableToListSingle: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.AbstractEventEvaluatorAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void executeOn(java.util.concurrent.ExecutorService)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.NestedComplexPropertyIA: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.wikidata.WikidataEditService: void lambda$addCaption$3$WikidataEditService(java.lang.Throwable)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$SmoothScroller: void onAnimation(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.net.SimpleSSLSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><ch.qos.logback.classic.net.SimpleSSLSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int,javax.net.ssl.SSLContext)>[]--><ch.qos.logback.classic.net.SimpleSocketServer: void <init>(ch.qos.logback.classic.LoggerContext,int)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>[]--><org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.joran.action.AppenderAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.BasicConfigurator: void configureDefaultContext()>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall: void enqueue(retrofit2.Callback)>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.DecodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.DiskCacheWriteProducer: void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.PostprocessorProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.WebpTranscodeProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DiskCacheReadProducer$1: java.lang.Void then(bolts.Task)>[]--><com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[[try]]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void settings(boolean,okhttp3.internal.http2.Settings)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: io.reactivex.SingleSource lambda$onDeleteClickeddialogtext$8$MediaDetailFragment(java.lang.String,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleDefer: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.review.ReviewController: void reportWrongCategory(android.app.Activity,fr.free.nrw.commons.review.ReviewController$ReviewCallback)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.core.net.SMTPAppenderBase: void append(java.lang.Object)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.joran.action.LoggerContextListenerAction: void end(ch.qos.logback.core.joran.spi.InterpretationContext,java.lang.String)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.contributions.ContributionController$1: void onImagePickerError(java.lang.Exception,fr.free.nrw.commons.filepicker.FilePicker$ImageSource,int)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,int)>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void lambda$setAvatarFromImageUrl$0(android.content.Context,fr.free.nrw.commons.profile.leaderboard.UpdateAvatarResponse)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.single.SingleFromCallable: void subscribeActual(io.reactivex.SingleObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$yysi0 < 19
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.PlaceAdapterDelegateKt: void access$showOrHideAndScrollToIfLast(com.hannesdorfmann.adapterdelegates4.dsl.AdapterDelegateLayoutContainerViewHolder)>[]--><fr.free.nrw.commons.nearby.PlaceAdapterDelegateKt: void showOrHideAndScrollToIfLast(com.hannesdorfmann.adapterdelegates4.dsl.AdapterDelegateLayoutContainerViewHolder)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>[]--><androidx.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition)>[[-$yysi0 < 19]]--><androidx.transition.TransitionManager: void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition)>[]--><androidx.transition.Transition: void captureValues(android.view.ViewGroup,boolean)>[]--><androidx.transition.Transition: void captureHierarchy(android.view.View,boolean)>[]--><androidx.transition.Transition: void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues)>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: void lambda$setUploadCount$9$AchievementsFragment(java.lang.Throwable)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void onError()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.achievements.AchievementsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: void setAchievements()>[]--><fr.free.nrw.commons.profile.achievements.AchievementsFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <org.slf4j.impl.StaticLoggerBinder: void reset()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <ch.qos.logback.classic.android.BasicLogcatConfigurator: void configureDefaultContext()>[]--><org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>[[try]]--><org.slf4j.LoggerFactory: void performInitialization()>[]--><org.slf4j.LoggerFactory: void bind()>[[try]]--><org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)>[]--><org.slf4j.impl.StaticLoggerBinder: void <clinit>()>[]--><org.slf4j.impl.StaticLoggerBinder: void init()>[[try]]--><ch.qos.logback.classic.util.ContextInitializer: void autoConfig()>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void installIfAsked(ch.qos.logback.classic.LoggerContext)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void addStatusListener(ch.qos.logback.classic.LoggerContext,java.lang.String)>[]--><ch.qos.logback.classic.util.StatusListenerConfigHelper: void initListener(ch.qos.logback.classic.LoggerContext,ch.qos.logback.core.status.StatusListener)>[]--><ch.qos.logback.core.net.server.ServerSocketAppenderBase: void start()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Connection$ReaderRunnable: void data(boolean,int,okio.BufferedSource,int)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableDefer: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener: void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.RecyclerView: boolean removeAnimatingView(android.view.View)>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <androidx.lifecycle.ComputableLiveData$1: void onActive()>[]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.SingleSource lambda$null$5$DeleteHelper(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.delete.DeleteHelper: io.reactivex.Single makeDeletion(android.content.Context,fr.free.nrw.commons.Media,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtilWrapper: void showShortToast(android.content.Context,java.lang.String)>[]--><fr.free.nrw.commons.utils.ViewUtil: void showShortToast(android.content.Context,java.lang.String)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.mapbox.android.telemetry.crash.CrashReporterJobIntentService: void onHandleWork(android.content.Intent)>[[try]]--><com.mapbox.android.telemetry.crash.CrashReporterJobIntentService: void handleCrashReports(com.mapbox.android.telemetry.crash.CrashReporterClient)>[]--><com.mapbox.android.telemetry.crash.CrashReporterClient: boolean send(com.mapbox.android.telemetry.CrashEvent)>[]--><com.mapbox.android.telemetry.crash.CrashReporterClient: boolean sendSync(com.mapbox.android.telemetry.CrashEvent,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.CountDownLatch)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean push(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.MapboxTelemetry: boolean pushToQueue(com.mapbox.android.telemetry.Event)>[]--><com.mapbox.android.telemetry.EventsQueue: boolean push(com.mapbox.android.telemetry.Event)>[[try]]--><com.mapbox.android.telemetry.EventsQueue: void dispatchCallback(java.util.List)>[[try]]--><androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.RealCall$1: void timedOut()>[]--><okhttp3.RealCall: void cancel()>[]--><okhttp3.internal.http.RetryAndFollowUpInterceptor: void cancel()>[]--><okhttp3.internal.connection.StreamAllocation: void cancel()>[]--><okhttp3.internal.http2.Http2Codec: void cancel()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Stream$FramingSource: void receive(okio.BufferedSource,long)>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.observable.ObservableToList: void subscribeActual(io.reactivex.Observer)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.ImageUtils: void access$000(android.content.Context,android.graphics.Bitmap)>[]--><fr.free.nrw.commons.utils.ImageUtils: void setWallpaper(android.content.Context,android.graphics.Bitmap)>[[try]]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.operators.maybe.MaybeFromCallable: void subscribeActual(io.reactivex.MaybeObserver)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void lambda$onCreateView$0$LeaderboardFragment(android.view.View)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void scrollToUserRank()>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: void setLeaderboard(java.lang.String,java.lang.String,int,int)>[]--><fr.free.nrw.commons.profile.leaderboard.LeaderboardFragment: boolean checkAccount()>[]--><fr.free.nrw.commons.utils.ViewUtil: void showLongToast(android.content.Context,java.lang.String)>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
i0 < 21
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.core.provider.SelfDestructiveThread$2: void run()>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: java.lang.Object call()>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.recyclerview.widget.AsyncListDiffer$1$2: void run()>[]--><androidx.recyclerview.widget.AsyncListDiffer: void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable)>[]--><androidx.recyclerview.widget.AsyncListDiffer: void onCurrentListChanged(java.util.List,java.lang.Runnable)>[]--><androidx.lifecycle.ComputableLiveData$3: void run()>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><kotlinx.coroutines.DefaultExecutor: void run()>[[try]]--><kotlinx.coroutines.EventLoopImplBase: long processNextEvent()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1: void run()>[]--><com.facebook.imagepipeline.producers.ThrottlingProducer: void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.BitmapPrepareProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ResizeAndRotateProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducer: void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext)>[]--><com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue: void addToQueueOrExecute(java.lang.Runnable)>[[try]]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.internal.schedulers.TrampolineScheduler$SleepingRunnable: void run()>[]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><io.reactivex.Scheduler$DisposeTask: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)>[]--><androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>[[i0 < 21]]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner$ClientWrapper: void run()>[[try]]--><androidx.recyclerview.widget.RecyclerView$1: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void consumeUpdatesInOnePass()>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.MultiplePermissionsListenerToPermissionListenerAdapter: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><fr.free.nrw.commons.utils.PermissionUtils$1: void onPermissionGranted(com.karumi.dexter.listener.PermissionGrantedResponse)>[]--><com.facebook.imagepipeline.core.PriorityThreadFactory$1: void run()>[]--><androidx.paging.AsyncPagedListDiffer$2: void run()>[]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><ch.qos.logback.core.net.server.ConcurrentServerRunner: void run()>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.internal.http2.Http2Stream$StreamTimeout: void timedOut()>[]--><okhttp3.internal.http2.Http2Stream: void closeLater(okhttp3.internal.http2.ErrorCode)>[]--><okhttp3.internal.http2.Http2Connection: void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode)>[[try]]--><bolts.BoltsExecutors$ImmediateExecutor: void execute(java.lang.Runnable)>[[try]]--><io.reactivex.internal.schedulers.ScheduledRunnable: void run()>[[try]]--><androidx.fragment.app.FragmentTransitionImpl$2: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
try
Good road with try: <okhttp3.RealCall$AsyncCall: void execute()>[[try]]--><retrofit2.OkHttpCall$1: void onResponse(okhttp3.Call,okhttp3.Response)>[[try]]--><retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)>[]--><com.facebook.common.executors.CallerThreadExecutor: void execute(java.lang.Runnable)>[]--><androidx.fragment.app.FragmentTransitionImpl$3: void run()>[]--><androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)>[[-$i0 < 21]]--><android.view.View: java.lang.String getTransitionName()>
One road protect good!
containsStatic:true
containsTry:true
704call by main package
-----------------------------------------
#################################################
N 193 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewAdded(android.view.View)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17], [try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17]][[try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]
-i9 >= 17
try
Good road with try: <androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[-i9 >= 17], [try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 194 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)> is checking!!!
The life time of api is [23,31]
18call roads:
0 Mainhead roads:
18 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoKeepalive(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoKeepalive(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
#9.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2109SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
crashApis:61
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 195 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 196 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 197 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 198 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[[try]]--><android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 199 Potential Issue API: SDKCheck of <android.os.BaseBundle: int[] getIntArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.BaseCrashReportDialog: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int[] getIntArray(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int[] getIntArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:63
crashApisInMain:3
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 200 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 201 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.BaseCrashReportDialog: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:64
crashApisInMain:4
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 202 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: java.lang.String getResPackage()> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 20
-i1 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 203 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getBreakStrategy()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getBreakStrategy()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getBreakStrategy()>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 204 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
-$i0 < 23
Good road: <androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)>[]--><androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:true
702call by main package
-----------------------------------------
#################################################
N 205 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 206 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
15call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.karumi.dexter.DexterActivity dummyMainMethod_com_karumi_dexter_DexterActivity(android.content.Intent)>[]--><com.karumi.dexter.DexterActivity: void onCreate(android.os.Bundle)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadActivity dummyMainMethod_fr_free_nrw_commons_upload_UploadActivity(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
14 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onResume()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void setUserVisibleHint(boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void startTheMap()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.karumi.dexter.DexterActivity: void onNewIntent(android.content.Intent)>[]--><com.karumi.dexter.Dexter: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: void onActivityReady(android.app.Activity)>[]--><com.karumi.dexter.DexterInstance: com.karumi.dexter.DexterInstance$PermissionStates getPermissionStates(java.util.Collection)>[]--><com.karumi.dexter.DexterInstance: int checkSelfPermission(android.app.Activity,java.lang.String)>[[try]]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: boolean isEveryPermissionGranted(java.util.Collection,android.content.Context)>[]--><com.karumi.dexter.AndroidPermissionService: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 207 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:66
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 208 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void removeSpan(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>[[-$i0 < 29]]--><android.text.PrecomputedText: void removeSpan(java.lang.Object)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 209 Potential Issue API: SDKCheck of <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><com.squareup.leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)>[]--><com.squareup.leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#2.the call statck between class <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 210 Potential Issue API: SDKCheck of <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 19
Good road: <androidx.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)>[]--><androidx.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>[]--><androidx.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)>[[$yysi0 < 19]]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 211 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean canApplyTheme()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: boolean canApplyTheme()>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: boolean canApplyTheme()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 212 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
25call roads:
0 Mainhead roads:
25 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#2.the call statck between class <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.DefaultHttpResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
try
Good road with try: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
#4.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#6.the call statck between class <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.io.HttpRequestParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#8.the call statck between class <org.apache.http.impl.io.HttpRequestParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>[]--><org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#9.the call statck between class <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
crashApis:68
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 213 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.pool.AbstractConnPool: org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture)>[]--><org.apache.http.pool.AbstractConnPool: org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture)>[[try]]--><org.apache.http.impl.pool.BasicConnFactory: java.lang.Object create(java.lang.Object)>[]--><org.apache.http.impl.pool.BasicConnFactory: org.apache.http.HttpClientConnection create(org.apache.http.HttpHost)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 214 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 215 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void <init>()> is checking!!!
The life time of api is [22,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
i0 != 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 != 21]]--><android.animation.StateListAnimator: void <init>()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#2.the call statck between class <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]][[$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
-$i0 < 21
$i1 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
One road protect good!
crashApis:69
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 216 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: void <init>(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 217 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)> to <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 218 Potential Issue API: SDKCheck of <android.view.View: void setStateListAnimator(android.animation.StateListAnimator)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24], [i0 != 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24]][[i0 != 21]]
i0 > 24
i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24], [i0 != 21]]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]][[$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
-$i0 < 21
$i1 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 219 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean hasSystemWindowInsets()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: boolean hasSystemWindowInsets()>[[-$i0 < 20]]--><android.view.WindowInsets: boolean hasSystemWindowInsets()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 220 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.BaseCrashReportDialog: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.quiz.QuizResultActivity dummyMainMethod_fr_free_nrw_commons_quiz_QuizResultActivity(android.content.Intent)>[]--><fr.free.nrw.commons.quiz.QuizResultActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean clearKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <com.google.android.material.chip.Chip: void onFocusChanged(boolean,int,android.graphics.Rect)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#2.the call statck between class <com.google.android.material.chip.Chip: boolean onKeyDown(int,android.view.KeyEvent)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.review.ReviewImageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#3.the call statck between class <fr.free.nrw.commons.review.ReviewImageFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#4.the call statck between class <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#5.the call statck between class <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performAction(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean performActionForChild(int,int,android.os.Bundle)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean clearAccessibilityFocus(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#6.the call statck between class <androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider: boolean performAction(int,int,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.media.MediaDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#7.the call statck between class <fr.free.nrw.commons.media.MediaDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#8.the call statck between class <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$ChipTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>[]--><com.google.android.material.chip.Chip: boolean performCloseIconClick()>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#9.the call statck between class <com.google.android.material.chip.Chip$ChipTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean moveFocus(int,android.graphics.Rect)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean requestKeyboardFocusForVirtualView(int)>[]--><androidx.customview.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEvent(int,int)>[]--><androidx.customview.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityEvent createEventForChild(int,int)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#10.the call statck between class <com.google.android.material.chip.Chip: boolean dispatchKeyEvent(android.view.KeyEvent)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:71
crashApisInMain:5
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 221 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:72
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 222 Potential Issue API: SDKCheck of <android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 223 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void addState(int[],android.animation.Animator)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 > 24], [i0 != 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22]][[i0 > 24]][[i0 != 21]]
-i0 < 22
i0 > 24
i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 > 24], [i0 != 21]]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]][[$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
-$i0 < 21
$i1 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [$i1 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 224 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()>[]--><android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>
#1.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()> to <android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 225 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:74
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 226 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])> is checking!!!
The life time of api is [21,31]
705call roads:
1 Mainhead roads:
704 Packageshead roads:
containsStatic:true
containsTry:true
705call by main package
-----------------------------------------
#################################################
N 227 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 228 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)> to <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:75
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 229 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()> is checking!!!
The life time of api is [21,31]
703call roads:
1 Mainhead roads:
702 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
#182.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>has compatibility isssues！
-----------------------------------------
crashApis:76
containsStatic:true
containsTry:true
183call by main package
-----------------------------------------
#################################################
N 230 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
704call roads:
1 Mainhead roads:
703 Packageshead roads:
$i0 >= 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>[[try]]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
$i0 >= 23
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$5: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: void clearLeakDirectory()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>[[try]]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
$i0 >= 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
$i0 >= 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$5: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: void clearLeakDirectory()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$5: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: void clearLeakDirectory()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>[[try]]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
$i0 >= 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
$i0 >= 23
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.squareup.leakcanary.internal.DisplayLeakActivity$5: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: void clearLeakDirectory()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
try
Good road with try: <androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)>[]--><androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)>[]--><io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable: void run()>[[try]]--><com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks: void run()>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: java.util.List listFiles(java.io.FilenameFilter)>[]--><com.squareup.leakcanary.DefaultLeakDirectoryProvider: boolean hasStoragePermission()>[[$i0 >= 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><com.squareup.leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[[]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
#185.the call statck between class <com.squareup.leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.content.Context: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:true
containsTry:true
186call by main package
-----------------------------------------
#################################################
N 231 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 232 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
2 Packageshead roads:
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 233 Potential Issue API: SDKCheck of <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)>[[-z0 == 0], [i2 < 26]]
###Multi invoking in one method, need manual check!!!<com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)>[[-z0 == 0]][[i2 < 26]]
-z0 == 0
i2 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)>[[-z0 == 0], [i2 < 26]]--><android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>
#1.the call statck between class <com.facebook.imagepipeline.platform.DefaultDecoder: com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean)> to <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>has compatibility isssues！
-----------------------------------------
crashApis:78
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 234 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: void <init>(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 235 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 < 21]]--><android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 236 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> is checking!!!
The life time of api is [23,31]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
#7.the call statck between class <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> to <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
crashApis:80
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 237 Potential Issue API: SDKCheck of <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <fr.free.nrw.commons.auth.LoginActivity$1$1: void twoFactorPrompt(java.lang.Throwable,java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void askUserForTwoFactorAuth()>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
#1.the call statck between class <fr.free.nrw.commons.auth.LoginActivity$1$1: void twoFactorPrompt(java.lang.Throwable,java.lang.String)> to <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:81
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 238 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 239 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 240 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout build()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 241 Potential Issue API: SDKCheck of <android.os.LocaleList: int hashCode()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: int hashCode()>[]--><android.os.LocaleList: int hashCode()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: int hashCode()> to <android.os.LocaleList: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:82
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 242 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 243 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onPointerCaptureChanged(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 244 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setWindowLayoutType(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>[[-$i1 < 23]]--><android.widget.PopupWindow: void setWindowLayoutType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 245 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
711call roads:
1 Mainhead roads:
710 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[$i0 < 28]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
$i0 < 28
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[$i0 < 28]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#13.the call statck between class <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:83
containsStatic:true
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 246 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
crashApis:84
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 247 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 248 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetTop()> is checking!!!
The life time of api is [21,31]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: float getOverlapRatioForOffset(android.view.View)>[]--><com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getScrollRangeForDragFling(com.google.android.material.appbar.AppBarLayout)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void updateAppBarLayoutDrawableState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int,int,boolean)>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.FloatingActionButton)>[]--><com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void snapToChildIfNeeded(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: int getMaxDragOffset(com.google.android.material.appbar.AppBarLayout)>[]--><com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
$yysi0 < 19
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat)>[[$yysi0 < 19]]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean canScrollChildren(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View)>[]--><com.google.android.material.appbar.AppBarLayout: boolean hasScrollableChildren()>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$yysi0 < 16
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: int interpolateOffset(com.google.android.material.appbar.AppBarLayout,int)>[[-$yysi0 < 16]]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: int getScrollRange(android.view.View)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]
$z0 == 0
$yysi0 < 16
-$i0 < 20
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout)>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean updateFabVisibilityForAppBarLayout(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton)>[]--><com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)>[]--><com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)>[]--><com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int[],int)>[]--><com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,android.view.View,int,int,int,int,int,int[])>[]--><com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()>[]--><com.google.android.material.appbar.AppBarLayout: int getTopInset()>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
$yysi0 < 16
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>[[$yysi0 < 16]]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
#26.the call statck between class <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: int getSystemWindowInsetTop()>has compatibility isssues！
-----------------------------------------
crashApis:85
containsStatic:true
containsTry:false
27call by main package
-----------------------------------------
#################################################
N 249 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
#2.the call statck between class <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)> to <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>has compatibility isssues！
-----------------------------------------
crashApis:86
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 250 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 251 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeTextType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 252 Potential Issue API: SDKCheck of <android.view.View: boolean isAccessibilityHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isAccessibilityHeading()>
#1.the call statck between class <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 253 Potential Issue API: SDKCheck of <android.graphics.Outline: void setConvexPath(android.graphics.Path)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
#1.the call statck between class <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setConvexPath(android.graphics.Path)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
#2.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setConvexPath(android.graphics.Path)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
#3.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setConvexPath(android.graphics.Path)>has compatibility isssues！
-----------------------------------------
crashApis:88
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 254 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]
-i0 < 20
-i1 < 23
-i0 < 26
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 255 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale access$getLocale$p(android.content.Context)>[]--><fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale getLocale(android.content.Context)>[]--><androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 256 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 257 Potential Issue API: SDKCheck of <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 258 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 259 Potential Issue API: SDKCheck of <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#1.the call statck between class <com.google.android.material.card.MaterialCardViewHelper$1: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.cardview.widget.RoundRectDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#2.the call statck between class <androidx.cardview.widget.RoundRectDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#3.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#4.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
crashApis:89
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 260 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 261 Potential Issue API: SDKCheck of <android.view.MenuItem: int getAlphabeticModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 262 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextClassifier(android.view.textclassifier.TextClassifier)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 263 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput build()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 264 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
7call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.AboutActivity dummyMainMethod_fr_free_nrw_commons_AboutActivity(android.content.Intent)>[]--><fr.free.nrw.commons.AboutActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.ui.widget.HtmlTextView: void setHtmlText(java.lang.String)>[]--><org.wikipedia.util.StringUtil: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
6 Packageshead roads:
-$i0 < 24
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: void access$100(fr.free.nrw.commons.media.MediaDetailFragment)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void displayMediaDetails()>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void setTextFields(fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.ui.widget.HtmlTextView: void setHtmlText(java.lang.String)>[]--><org.wikipedia.util.StringUtil: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-i0 < 24
Good road: <com.mapbox.mapboxsdk.attribution.AttributionParser$Options: com.mapbox.mapboxsdk.attribution.AttributionParser build()>[]--><com.mapbox.mapboxsdk.attribution.AttributionParser: void parse()>[]--><com.mapbox.mapboxsdk.attribution.AttributionParser: void parseAttributions()>[]--><com.mapbox.mapboxsdk.attribution.AttributionParser: android.text.Spanned fromHtml(java.lang.String)>[[-i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <fr.free.nrw.commons.ui.widget.HtmlTextView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><org.wikipedia.util.StringUtil: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i1 < 24
Good road: <fr.free.nrw.commons.MediaDataExtractor$fetchDiscussion$1: java.lang.String apply(java.lang.String)>[]--><androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <fr.free.nrw.commons.media.MediaDetailFragment: void lambda$XDEkz6CQPEEwdWrW1QMy6dsGvg0(fr.free.nrw.commons.media.MediaDetailFragment,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaRefreshed(fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void setTextFields(fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.ui.widget.HtmlTextView: void setHtmlText(java.lang.String)>[]--><org.wikipedia.util.StringUtil: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <fr.free.nrw.commons.notification.NotificationAdapterDelegatesKt: java.lang.CharSequence access$getProcessedNotificationText$p(fr.free.nrw.commons.notification.Notification)>[]--><fr.free.nrw.commons.notification.NotificationAdapterDelegatesKt: java.lang.CharSequence getProcessedNotificationText(fr.free.nrw.commons.notification.Notification)>[]--><org.wikipedia.util.StringUtil: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 265 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 266 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 267 Potential Issue API: SDKCheck of <android.content.Context: android.graphics.drawable.Drawable getDrawable(int)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i1 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.navigation.NavigationView: void setItemBackgroundResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 268 Potential Issue API: SDKCheck of <android.view.View: android.graphics.drawable.Drawable getForeground()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.view.View: android.graphics.drawable.Drawable getForeground()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 269 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[]--><android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
#1.the call statck between class <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)> to <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:90
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 270 Potential Issue API: SDKCheck of <android.graphics.Outline: void setRoundRect(int,int,int,int,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#1.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
crashApis:91
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 271 Potential Issue API: SDKCheck of <android.os.LocaleList: void <init>(java.util.Locale[])> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: void <clinit>()>[]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale access$getLocale$p(android.content.Context)>[]--><fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale getLocale(android.content.Context)>[]--><androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 272 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getLayoutDirection()> is checking!!!
The life time of api is [23,31]
27call roads:
0 Mainhead roads:
27 Packageshead roads:
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.Rect access$300(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$28$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: kotlin.Unit lambda$initRvNearbyList$4$NearbyParentFragment(fr.free.nrw.commons.nearby.Place,java.lang.Boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterOutAllMarkers()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void hideAllMarkers()>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterMarkersByLabels(java.util.List,boolean,boolean,boolean,boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void hideAllMarkers()>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void filterMarkersByLabels(java.util.List,boolean,boolean,boolean,boolean)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void updateMarker(boolean,fr.free.nrw.commons.nearby.Place,fr.free.nrw.commons.location.LatLng)>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <fr.free.nrw.commons.nearby.presenter.NearbyParentFragmentPresenter: void updateMapMarkers(fr.free.nrw.commons.nearby.NearbyController$NearbyPlacesInfo,com.mapbox.mapboxsdk.annotations.Marker,boolean)>[]--><fr.free.nrw.commons.nearby.NearbyController: java.util.List loadAttractionsFromLocationToBaseMarkerOptions(fr.free.nrw.commons.location.LatLng,java.util.List,android.content.Context,java.util.List)>[]--><fr.free.nrw.commons.utils.UiUtils: android.graphics.Bitmap getBitmap(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
containsStatic:false
containsTry:false
28call by main package
-----------------------------------------
#################################################
N 273 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:92
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 274 Potential Issue API: SDKCheck of <android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 275 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
#1.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
#2.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)> to <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 276 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toString()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()>[]--><android.os.LocaleList: java.lang.String toString()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()> to <android.os.LocaleList: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:94
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 277 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale access$getLocale$p(android.content.Context)>[]--><fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale getLocale(android.content.Context)>[]--><androidx.core.os.LocaleListCompat: java.util.Locale get(int)>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>[]--><android.os.LocaleList: java.util.Locale get(int)>
#1.the call statck between class <fr.free.nrw.commons.upload.SpinnerLanguagesAdapterKt: java.util.Locale access$getLocale$p(android.content.Context)> to <android.os.LocaleList: java.util.Locale get(int)>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 278 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>
#1.the call statck between class <org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:96
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 279 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 280 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 281 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadService dummyMainMethod_fr_free_nrw_commons_upload_UploadService(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadService: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.review.ReviewActivity dummyMainMethod_fr_free_nrw_commons_review_ReviewActivity(android.content.Intent)>[]--><fr.free.nrw.commons.review.ReviewActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.review.ReviewController: void <init>(fr.free.nrw.commons.delete.DeleteHelper,android.content.Context)>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><fr.free.nrw.commons.CommonsApplication: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
1 Packageshead roads:
-i0 < 26
Good road: <com.squareup.leakcanary.internal.LeakCanaryInternals: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 282 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)> to <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 283 Potential Issue API: SDKCheck of <android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()> is checking!!!
The life time of api is [29,31]
721call roads:
1 Mainhead roads:
720 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.notification.NotificationActivity: void lambda$removeNotification$1$NotificationActivity(fr.free.nrw.commons.notification.Notification,java.lang.Boolean)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$i0 < 24
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.utils.ViewUtil: void lambda$showDismissibleSnackBar$6(android.view.View,int,int,android.view.View$OnClickListener)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)>[]--><com.facebook.imagepipeline.producers.JobScheduler: void doJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[[try]]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.NavigationMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.contributions.UnswipableViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.CheckableImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.notification.NotificationActivity: void lambda$refresh$4$NotificationActivity(boolean,android.view.View)>[]--><fr.free.nrw.commons.notification.NotificationActivity: void refresh(boolean)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$i0 < 24
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.preference.PreferenceFragmentCompat: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.preference.PreferenceFragmentCompat: androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$i0 < 24
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$i0 < 24
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
$yysi0 < 19
-$i0 < 29
Good road: <androidx.drawerlayout.widget.DrawerLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[$yysi0 < 19]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.RecyclerView$Recycler: void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.recyclerview.widget.RecyclerView$Recycler: void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment$4: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <fr.free.nrw.commons.review.ReviewViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
-$i0 < 29
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 >= 23], [$i0 < 24]]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 >= 23]][[$i0 < 24]]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]
$i0 >= 23
$i0 < 24
$i0 < 24
-$i0 < 29
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 >= 23], [$i0 < 24]]--><com.google.android.material.chip.Chip: void updateAccessibilityDelegate()>[[$i0 < 24]]--><androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)>[]--><androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
containsStatic:true
containsTry:true
721call by main package
-----------------------------------------
#################################################
N 284 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 285 Potential Issue API: SDKCheck of <android.content.Context: java.io.File[] getExternalMediaDirs()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>[[-$i0 < 21]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 286 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 287 Potential Issue API: SDKCheck of <android.view.View: void stopNestedScroll()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 288 Potential Issue API: SDKCheck of <android.widget.CheckedTextView: void setVisibility(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void adjustAppearance()>[]--><android.widget.CheckedTextView: void setVisibility(int)>
#1.the call statck between class <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)> to <android.widget.CheckedTextView: void setVisibility(int)>has compatibility isssues！
-----------------------------------------
crashApis:99
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 289 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 290 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)> to <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 291 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.net.Uri getUri()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 20
-i1 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 292 Potential Issue API: SDKCheck of <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.ViewCompat$ViewCompatApi29: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>[]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
#1.the call statck between class <androidx.core.view.ViewCompat$ViewCompatApi29: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> to <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 293 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetBottom()> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
-$i0 < 20
Good road: <com.google.android.material.bottomappbar.BottomAppBar$Behavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.bottomappbar.BottomAppBar,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayout(boolean,int,int,int,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]
$z0 == 0
$yysi0 < 16
-$i0 < 20
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
$yysi0 < 16
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onMeasure(int,int)>[[$yysi0 < 16]]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.HeaderScrollingViewBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.appbar.AppBarLayout$BaseBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><com.google.android.material.appbar.ViewOffsetBehavior: void layoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout$1: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar$2: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
-$i0 < 20
Good road: <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void onLayoutChild(android.view.View,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void layoutChild(android.view.View,int)>[]--><androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()>[[-$i0 < 20]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
containsStatic:true
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 294 Potential Issue API: SDKCheck of <android.media.MediaCodecList: void <init>(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 21
Good road: <org.acra.collector.MediaCodecListCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MediaCodecListCollector: org.json.JSONObject collectMediaCodecList()>[[i0 >= 21]]--><android.media.MediaCodecList: void <init>(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 295 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
-i0 < 22
Good road: <org.acra.dialog.BaseCrashReportDialog: void lambda$sendCrash$1$BaseCrashReportDialog(java.lang.String,java.lang.String)>[]--><org.acra.scheduler.SchedulerStarter: void scheduleReports(java.io.File,boolean)>[]--><org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)>[[-i0 < 22]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
containsStatic:true
containsTry:true
702call by main package
-----------------------------------------
#################################################
N 296 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 297 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:102
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 298 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 299 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 300 Potential Issue API: SDKCheck of <android.widget.ImageView: android.content.res.ColorStateList getImageTintList()> is checking!!!
The life time of api is [21,31]
10call roads:
0 Mainhead roads:
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <fr.free.nrw.commons.media.zoomControllers.zoomable.ZoomableDraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.DraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <com.facebook.drawee.view.SimpleDraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.GenericDraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.DraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.SimpleDraweeView: void init(android.content.Context,android.util.AttributeSet)>[[try]]--><com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.SimpleDraweeView: void init(android.content.Context,android.util.AttributeSet)>[[try]]--><com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
try
Good road with try: <com.facebook.drawee.view.SimpleDraweeView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.facebook.drawee.view.SimpleDraweeView: void init(android.content.Context,android.util.AttributeSet)>[[try]]--><com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionEnabled(boolean)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void initialiseAttribution(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionTintColor(int)>[]--><com.mapbox.mapboxsdk.utils.ColorUtils: void setTintList(android.widget.ImageView,int)>[]--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)>[[-$i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <fr.free.nrw.commons.nearby.PlaceAdapterDelegateKt$placeAdapterDelegate$1$8: void invoke(java.util.List)>[]--><com.facebook.drawee.view.SimpleDraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void setImageResource(int)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <com.mapbox.mapboxsdk.maps.MapView: void access$800(com.mapbox.mapboxsdk.maps.MapView)>[]--><com.mapbox.mapboxsdk.maps.MapView: void initialiseMap()>[]--><com.mapbox.mapboxsdk.maps.MapboxMap: void onRestoreInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void onRestoreInstanceState(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void restoreAttribution(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionEnabled(boolean)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void initialiseAttribution(android.content.Context,com.mapbox.mapboxsdk.maps.MapboxMapOptions)>[]--><com.mapbox.mapboxsdk.maps.UiSettings: void setAttributionTintColor(int)>[]--><com.mapbox.mapboxsdk.utils.ColorUtils: void setTintList(android.widget.ImageView,int)>[]--><androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)>[]--><com.facebook.drawee.view.DraweeView: void init(android.content.Context)>[[-i0 < 21], [try]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 301 Potential Issue API: SDKCheck of <android.graphics.ColorSpace: boolean isWideGamut()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <com.facebook.imagepipeline.platform.OreoDecoder: boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options)>[]--><android.graphics.ColorSpace: boolean isWideGamut()>
#1.the call statck between class <com.facebook.imagepipeline.platform.OreoDecoder: boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options)> to <android.graphics.ColorSpace: boolean isWideGamut()>has compatibility isssues！
-----------------------------------------
crashApis:103
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 302 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 303 Potential Issue API: SDKCheck of <android.view.View: float getZ()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: int compare(android.view.View,android.view.View)>[]--><androidx.core.view.ViewCompat: float getZ(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 304 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
708call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.quiz.QuizActivity dummyMainMethod_fr_free_nrw_commons_quiz_QuizActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><androidx.lifecycle.ProcessLifecycleOwnerInitializer: boolean onCreate()>[]--><androidx.lifecycle.ProcessLifecycleOwner: void init(android.content.Context)>[]--><androidx.lifecycle.ProcessLifecycleOwner: void attach(android.content.Context)>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.quiz.QuizResultActivity dummyMainMethod_fr_free_nrw_commons_quiz_QuizResultActivity(android.content.Intent)>[]--><androidx.fragment.app.FragmentActivity: void onPause()>[]--><androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)>[]--><androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
707 Packageshead roads:
crashApis:104
crashApisInMain:6
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 305 Potential Issue API: SDKCheck of <android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>[[try]]--><android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 306 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 307 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)> is checking!!!
The life time of api is [21,31]
703call roads:
1 Mainhead roads:
702 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#182.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void <init>(android.content.Context,android.content.ComponentName,int)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
crashApis:105
containsStatic:true
containsTry:true
183call by main package
-----------------------------------------
#################################################
N 308 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 309 Potential Issue API: SDKCheck of <org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>[[try]]--><org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 310 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextLocales(android.os.LocaleList)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 311 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getGroup()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 312 Potential Issue API: SDKCheck of <android.view.View: float getTranslationZ()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 != 21], [-i0 > 24]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22]][[i0 != 21]][[-i0 > 24]]
-i0 < 22
i0 != 21
-i0 > 24
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 != 21], [-i0 > 24]]--><android.view.View: float getTranslationZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 313 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
#9.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:106
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 314 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 315 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)>[]--><android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)>[]--><android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
#2.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>has compatibility isssues！
-----------------------------------------
crashApis:107
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 316 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
#9.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:108
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 317 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()>[]--><android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()> to <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()>[]--><android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
#2.the call statck between class <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()> to <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>has compatibility isssues！
-----------------------------------------
crashApis:109
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 318 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 319 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setIsClippedToScreen(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 320 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 321 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>[[-$i2 < 23]]--><android.view.View: void setScrollIndicators(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 322 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 323 Potential Issue API: SDKCheck of <android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()>[[try]]--><android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 324 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setExitTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 325 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 326 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
crashApis:110
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 327 Potential Issue API: SDKCheck of <android.transition.Transition: java.util.List getTargetNames()> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetNames()>
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetNames()>
One road protect good!
try
Good road with try: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.mapbox.mapboxsdk.maps.renderer.textureview.TextureViewRenderThread: void run()>[[try]]--><kotlinx.coroutines.scheduling.TaskImpl: void run()>[[try]]--><androidx.fragment.app.FragmentTransition$4: void run()>[]--><androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)>[]--><androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)>[]--><androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)>[]--><android.transition.Transition: java.util.List getTargetNames()>
One road protect good!
#21.the call statck between class <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()> to <android.transition.Transition: java.util.List getTargetNames()>has compatibility isssues！
-----------------------------------------
crashApis:111
containsStatic:true
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 328 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 329 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>[[-$i4 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 330 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)>[[-$i1 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 331 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 332 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getHyphenationFrequency()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getHyphenationFrequency()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getHyphenationFrequency()>has compatibility isssues！
-----------------------------------------
crashApis:112
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 333 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.BaseCrashReportDialog: void onCreate(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19], [i0 < 26], [i0 < 24], [i0 < 20], [-i0 < 16], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19]][[i0 < 26]][[i0 < 24]][[i0 < 20]][[-i0 < 16]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 24
i0 < 20
-i0 < 16
i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[i0 < 19], [i0 < 26], [i0 < 24], [i0 < 20], [-i0 < 16], [i0 < 21]]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <fr.free.nrw.commons.auth.WikiAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#2.the call statck between class <fr.free.nrw.commons.auth.WikiAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:113
crashApisInMain:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 334 Potential Issue API: SDKCheck of <android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)> is checking!!!
The life time of api is [21,31]
711call roads:
1 Mainhead roads:
710 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.notification.NotificationActivity: void lambda$removeNotification$1$NotificationActivity(fr.free.nrw.commons.notification.Notification,java.lang.Boolean)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$2: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$2$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.DialogUtil$createAndShowDialogSafely$$inlined$apply$lambda$1: void onClick(android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsFragment: void lambda$j5YTa0vvjnAxhr34keaDh2C633s(fr.free.nrw.commons.contributions.ContributionsFragment)>[]--><fr.free.nrw.commons.contributions.ContributionsFragment: void requestLocationPermission()>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onCameraClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$2$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.settings.SettingsFragment: void checkPermissionsAndSendLogs()>[]--><fr.free.nrw.commons.settings.SettingsFragment: void requestExternalStoragePermissions()>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.utils.DownloadUtils: void downloadMedia(android.app.Activity,fr.free.nrw.commons.Media)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.utils.ViewUtil: void lambda$showDismissibleSnackBar$6(android.view.View,int,int,android.view.View$OnClickListener)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.fragment.app.FragmentTransitionCompat21$4: void onTransitionEnd(android.transition.Transition)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.upload.UploadActivity: void lambda$showInfoAlert$4(java.lang.Runnable,android.content.DialogInterface,int)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.JobScheduler: void access$000(com.facebook.imagepipeline.producers.JobScheduler)>[]--><com.facebook.imagepipeline.producers.JobScheduler: void doJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void onJobFinished()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21]][[$i1 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
$i0 < 21
$i1 < 21
-$i0 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i0 < 21], [$i1 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.preference.PreferenceFragmentCompat: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>[[try]]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder: void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int)>[[try]]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.contributions.ContributionsListFragment: void lambda$setListeners$1$ContributionsListFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler: io.reactivex.disposables.Disposable scheduleDirect(java.lang.Runnable)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions$onGalleryClicked$1: void invoke(fr.free.nrw.commons.nearby.Place)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.contributions.UnswipableViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.notification.NotificationActivity: void lambda$refresh$4$NotificationActivity(boolean,android.view.View)>[]--><fr.free.nrw.commons.notification.NotificationActivity: void refresh(boolean)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.DefaultItemAnimator: void runPendingAnimations()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$33$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateCameraPick(android.app.Activity)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void performMapReadyActions()>[]--><fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void checkPermissionsAndPerformAction(java.lang.Runnable)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21]][[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
$i0 >= 21
-$yysi0 < 16
-$i0 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.karumi.dexter.DexterInstance: void checkPermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkSinglePermission(com.karumi.dexter.listener.single.PermissionListener,java.lang.String,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.media.zoomControllers.zoomable.AnimatedZoomableController$2: void onAnimationStopped()>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$34$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.contributions.ContributionController: void initiateGalleryPick(android.app.Activity,boolean)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,int,int)>[]--><fr.free.nrw.commons.utils.PermissionUtils: void checkPermissionsAndPerformAction(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,int,int)>[]--><com.karumi.dexter.Dexter: void check()>[[try]]--><com.karumi.dexter.DexterInstance: void checkPermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance: void checkMultiplePermissions(com.karumi.dexter.listener.multi.MultiplePermissionsListener,java.util.Collection,com.karumi.dexter.Thread)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [-$yysi0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]][[-$yysi0 < 16]]
-$i0 < 21
-$yysi0 < 16
Good road: <androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [-$yysi0 < 16]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2: void onIsIntermediateResultExpectedChanged()>[]--><com.facebook.imagepipeline.producers.JobScheduler: boolean scheduleJob()>[]--><com.facebook.imagepipeline.producers.JobScheduler: void enqueueJob(long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment$4: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <fr.free.nrw.commons.review.ReviewViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.MultiplePermissionListenerThreadDecorator$1: void run()>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <io.reactivex.internal.schedulers.TrampolineScheduler$TrampolineWorker: io.reactivex.disposables.Disposable enqueue(java.lang.Runnable,long)>[]--><com.karumi.dexter.DexterInstance$1: void run()>[]--><com.karumi.dexter.listener.multi.CompositeMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void onPermissionsChecked(com.karumi.dexter.MultiplePermissionsReport)>[]--><com.karumi.dexter.listener.multi.SnackbarOnAnyDeniedMultiplePermissionsListener: void showSnackbar()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21]][[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
$i0 >= 21
-$yysi0 < 16
-$i0 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
containsStatic:true
containsTry:true
711call by main package
-----------------------------------------
#################################################
N 335 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>[[]]--><android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>has compatibility isssues！
-----------------------------------------
crashApis:114
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 336 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
715call roads:
1 Mainhead roads:
714 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle toBundle(androidx.core.app.RemoteInput)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#16.the call statck between class <androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:115
containsStatic:true
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 337 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 338 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 339 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColor(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 340 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 341 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[[]]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
#1.the call statck between class <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()> to <org.apache.http.conn.ssl.AbstractVerifier: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:116
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 342 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
715call roads:
1 Mainhead roads:
714 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()>[]--><com.google.android.material.expandable.ExpandableWidgetHelper: android.os.Bundle onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#8.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:117
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 343 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 344 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 345 Potential Issue API: SDKCheck of <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <org.acra.sender.JobSenderService: void lambda$onStartJob$0$JobSenderService(org.acra.config.CoreConfiguration,boolean,android.app.job.JobParameters)>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#1.the call statck between class <org.acra.sender.JobSenderService: void lambda$onStartJob$0$JobSenderService(org.acra.config.CoreConfiguration,boolean,android.app.job.JobParameters)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:118
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 346 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:119
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 347 Potential Issue API: SDKCheck of <android.graphics.fonts.FontStyle: void <init>(int,int)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:120
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 348 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 349 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 350 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 351 Potential Issue API: SDKCheck of <android.view.MenuItem: int getNumericModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 352 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: void <init>(android.app.Service)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.mapbox.android.telemetry.crash.CrashReporterJobIntentService dummyMainMethod_com_mapbox_android_telemetry_crash_CrashReporterJobIntentService(android.content.Intent)>[]--><androidx.core.app.JobIntentService: void onCreate()>[]--><androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>[]--><android.app.job.JobServiceEngine: void <init>(android.app.Service)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobServiceEngine: void <init>(android.app.Service)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:121
crashApisInMain:8
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 353 Potential Issue API: SDKCheck of <android.view.View: void setPointerIcon(android.view.PointerIcon)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 354 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:122
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 355 Potential Issue API: SDKCheck of <android.view.WindowInsets: void <init>(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
One road protect good!
-i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>[]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
#3.the call statck between class <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> to <android.view.WindowInsets: void <init>(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
crashApis:123
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 356 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 357 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.os.LocaleList: boolean equals(java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>[]--><android.os.LocaleList: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)> to <android.os.LocaleList: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:124
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 358 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 359 Potential Issue API: SDKCheck of <org.apache.http.conn.ConnectTimeoutException: void <init>()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>()>
#1.the call statck between class <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> to <org.apache.http.conn.ConnectTimeoutException: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:125
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 360 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)> is checking!!!
The life time of api is [21,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>[]--><androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)>[]--><androidx.core.widget.NestedScrollView: void doScrollY(int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>[]--><androidx.core.widget.NestedScrollView: boolean arrowScroll(int)>[]--><androidx.core.widget.NestedScrollView: void doScrollY(int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
-$i0 >= 18
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: void fling(int)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
containsStatic:true
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 361 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#2.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:126
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 362 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
#1.the call statck between class <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>has compatibility isssues！
-----------------------------------------
crashApis:127
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 363 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
crashApis:128
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 364 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
#2.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:129
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 365 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)>[]--><org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#1.the call statck between class <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#2.the call statck between class <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#3.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#4.the call statck between class <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#5.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#6.the call statck between class <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#7.the call statck between class <org.apache.http.client.params.ClientParamBean: void setHandleAuthentication(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setHandleRedirects(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#8.the call statck between class <org.apache.http.client.params.ClientParamBean: void setHandleRedirects(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParams: void setSoKeepalive(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#9.the call statck between class <org.apache.http.params.HttpConnectionParams: void setSoKeepalive(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#10.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:130
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 366 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 367 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 368 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)> is checking!!!
The life time of api is [23,31]
37call roads:
0 Mainhead roads:
37 Packageshead roads:
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.client.utils.HttpClientUtils: void closeQuietly(org.apache.http.client.HttpClient)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#3.the call statck between class <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.SocketInputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractSessionInputBuffer: void init(java.io.InputStream,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpProtocolParams: java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
try
Good road with try: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
try
Good road with try: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestProxyAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAuthenticationBase: void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.client.HttpAuthenticator: boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AuthenticationStrategyImpl: java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
#5.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AutoRetryHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DecompressingHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.client.methods.HttpRequestBase: java.lang.String toString()>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#7.the call statck between class <org.apache.http.client.methods.HttpRequestBase: java.lang.String toString()> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestDefaultHeaders: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.ResponseConnControl: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestProxyAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAuthenticationBase: void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestUserAgent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.ImmutableHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.BestMatchSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestExpectContinue: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestContent: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>[]--><org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.StrictContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.AbstractHttpServerConnection: void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.StrictContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestTargetHost: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.BestMatchSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestClientConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestConnControl: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.ResponseServer: void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestProxyAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAuthenticationBase: void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestTargetAuthentication: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.client.protocol.RequestAuthenticationBase: void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAuthenticationBase: org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.auth.BasicScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpService: void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>[]--><org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>[]--><org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
#8.the call statck between class <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#9.the call statck between class <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.SystemDefaultHttpClient: org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
crashApis:131
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 369 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 28]]--><android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 370 Potential Issue API: SDKCheck of <android.view.View: float getElevation()> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i0 >= 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardView: void setCardElevation(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateElevation()>[[-$i0 >= 21]]--><androidx.cardview.widget.CardView: float getCardElevation()>[]--><androidx.cardview.widget.CardViewApi21Impl: float getElevation(androidx.cardview.widget.CardViewDelegate)>[]--><android.view.View: float getElevation()>
#1.the call statck between class <com.google.android.material.card.MaterialCardView: void setCardElevation(float)> to <android.view.View: float getElevation()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21], [$yysi0 < 16]]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21]][[$yysi0 < 16]]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]
$i8 < 21
$yysi0 < 16
-$i0 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$i8 < 21], [$yysi0 < 16]]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: float getElevation()>[]--><android.view.View: float getElevation()>
#3.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: float getElevation()> to <android.view.View: float getElevation()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
crashApis:132
containsStatic:true
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 371 Potential Issue API: SDKCheck of <android.widget.TextView: void setLastBaselineToBottomHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 372 Potential Issue API: SDKCheck of <android.widget.TextView: boolean isHorizontallyScrollable()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 373 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 374 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 375 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 376 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21]][[try]]
-$i0 >= 18
-i0 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 377 Potential Issue API: SDKCheck of <android.media.ExifInterface: void <init>(java.io.InputStream)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN: int getOrientation(java.io.InputStream)>[[try]]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 378 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
87call roads:
1 Mainhead roads:
86 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <fr.free.nrw.commons.theme.NavigationBaseActivity: boolean onNavigationItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.logging.CommonsLogSender: java.lang.String getExtraInfo()>[]--><fr.free.nrw.commons.utils.DeviceInfoUtil: fr.free.nrw.commons.utils.model.ConnectionType getConnectionType(android.content.Context)>[]--><fr.free.nrw.commons.utils.NetworkUtils: fr.free.nrw.commons.utils.model.NetworkConnectionType getNetworkType(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
#61.the call statck between class <fr.free.nrw.commons.theme.NavigationBaseActivity: boolean onNavigationItemSelected(android.view.MenuItem)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:133
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 379 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 380 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 381 Potential Issue API: SDKCheck of <android.view.View: void setImportantForAutofill(int)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <fr.free.nrw.commons.widget.HeightLimitedRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 382 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$yysi0 < 21
Good road: <com.google.android.material.button.MaterialButton: void setRippleColorResource(int)>[]--><com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setRippleColor(android.content.res.ColorStateList)>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setRippleColor(android.content.res.ColorStateList)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#2.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setRippleColor(android.content.res.ColorStateList)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:134
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 383 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 384 Potential Issue API: SDKCheck of <android.graphics.Paint: android.os.LocaleList getTextLocales()> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24]][[$i0 < 21]]
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 24]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 385 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]
-i0 < 20
-i1 < 23
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 386 Potential Issue API: SDKCheck of <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()>[]--><android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
#1.the call statck between class <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()> to <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>has compatibility isssues！
-----------------------------------------
crashApis:135
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 387 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)> is checking!!!
The life time of api is [23,31]
13call roads:
0 Mainhead roads:
13 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
containsStatic:false
containsTry:true
14call by main package
-----------------------------------------
#################################################
N 388 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i1 < 23]][[-i0 < 20]]
-i0 < 24
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 389 Potential Issue API: SDKCheck of <android.view.View: void setTranslationZ(float)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)>[]--><android.view.View: void setTranslationZ(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><android.view.View: void setTranslationZ(float)>
#3.the call statck between class <com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)> to <android.view.View: void setTranslationZ(float)>has compatibility isssues！
-----------------------------------------
crashApis:136
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 390 Potential Issue API: SDKCheck of <android.content.res.TypedArray: int getType(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>[]--><androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>[[try]]--><androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>[[-i1 < 21]]--><android.content.res.TypedArray: int getType(int)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>[]--><androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>[]--><androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>[]--><androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>[[try]]--><androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>[[-i1 < 21]]--><android.content.res.TypedArray: int getType(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 391 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
46call roads:
0 Mainhead roads:
46 Packageshead roads:
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void showError(java.lang.Boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$3: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchPrivacyPolicy(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)>[[try]]--><fr.free.nrw.commons.auth.LoginActivity$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(java.lang.String,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout$5: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.category.CategoryDetailsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$4: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onSeeMoreClicked()>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$6: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchFacebook(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity$1$1: void error(java.lang.Throwable)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(java.lang.String,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$30$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: com.google.android.material.floatingactionbutton.BorderDrawable createBorderDrawable(int,android.content.res.ColorStateList)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$29$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$1: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchFrequentlyAskedQuesions(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onFailure$1$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,java.lang.Throwable)>[]--><fr.free.nrw.commons.auth.LoginActivity$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(java.lang.String,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void showError(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.media.MediaDetailFragment_ViewBinding$2: void doClick(android.view.View)>[]--><fr.free.nrw.commons.media.MediaDetailFragment: void onMediaDetailLicenceClicked()>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions: boolean access$openWebView(fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions,android.net.Uri)>[]--><fr.free.nrw.commons.nearby.fragments.CommonPlaceClickActions: boolean openWebView(android.net.Uri)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.profile.leaderboard.LeaderboardListAdapter: void lambda$onBindViewHolder$0$LeaderboardListAdapter(fr.free.nrw.commons.profile.leaderboard.LeaderboardListAdapter$ListViewHolder,int,android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.WelcomePagerAdapter: void lambda$instantiateItem$0(android.view.ViewGroup,android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.settings.SettingsFragment: boolean lambda$onCreatePreferences$1$SettingsFragment(androidx.preference.Preference)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity$1$1: void twoFactorPrompt(java.lang.Throwable,java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void askUserForTwoFactorAuth()>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(int)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(int,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void showError(java.lang.String)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity_ViewBinding$5: void doClick(android.view.View)>[]--><fr.free.nrw.commons.auth.LoginActivity: void forgotPassword()>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.campaigns.CampaignView: void lambda$init$0$CampaignView(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$7: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchGithub(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.depicts.DepictsFragment: void lambda$addTextChangeListenerToSearchBox$1$DepictsFragment(io.reactivex.Notification)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.categories.UploadCategoriesFragment: void lambda$addTextChangeListenerToEtSearch$0$UploadCategoriesFragment(io.reactivex.Notification)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$passInfoToSheet$32$NearbyParentFragment(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity: void access$100(fr.free.nrw.commons.auth.LoginActivity,org.wikipedia.login.LoginResult)>[]--><fr.free.nrw.commons.auth.LoginActivity: void onLoginSuccess(org.wikipedia.login.LoginResult)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showSuccessAndDismissDialog()>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(int,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$2: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchRatings(android.view.View)>[]--><fr.free.nrw.commons.Utils: void rateApp(android.content.Context)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.upload.license.MediaLicenseFragment: void access$000(fr.free.nrw.commons.upload.license.MediaLicenseFragment,java.lang.String)>[]--><fr.free.nrw.commons.upload.license.MediaLicenseFragment: void launchBrowser(java.lang.String)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0$DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.Callback,retrofit2.Response)>[]--><fr.free.nrw.commons.auth.LoginActivity$1: void onFailure(retrofit2.Call,java.lang.Throwable)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(java.lang.String,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity: void lambda$launchTranslate$0$AboutActivity(android.widget.Spinner,android.content.DialogInterface,int)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.contributions.'-$$Lambda$QliXthw-eR-8DM0Bs0kR42Wu1YY': void onConfirmClicked(fr.free.nrw.commons.contributions.Contribution,boolean)>[]--><fr.free.nrw.commons.contributions.ContributionsListFragment: void onConfirmClicked(fr.free.nrw.commons.contributions.Contribution,boolean)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$5: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchCredits(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity_ViewBinding$6: void doClick(android.view.View)>[]--><fr.free.nrw.commons.auth.LoginActivity: void onPrivacyPolicyClicked()>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.media.MediaDetailPagerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.AboutActivity_ViewBinding$8: void doClick(android.view.View)>[]--><fr.free.nrw.commons.AboutActivity: void launchWebsite(android.view.View)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.auth.LoginActivity: void access$300(fr.free.nrw.commons.auth.LoginActivity)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showPasswordResetPrompt()>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessageAndCancelDialog(java.lang.String)>[]--><fr.free.nrw.commons.auth.LoginActivity: void showMessage(java.lang.String,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><com.mapbox.pluginscalebar.ScaleBarOptions: com.mapbox.pluginscalebar.ScaleBarOptions setTextColor(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void lambda$null$1$NearbyParentFragment(com.mapbox.mapboxsdk.maps.MapboxMap,com.mapbox.mapboxsdk.maps.Style)>[]--><com.mapbox.pluginscalebar.ScaleBarOptions: void <init>(android.content.Context)>[]--><com.mapbox.pluginscalebar.ScaleBarOptions: com.mapbox.pluginscalebar.ScaleBarOptions setTextColor(int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <fr.free.nrw.commons.notification.NotificationActivity: kotlin.Unit lambda$initListView$3$NotificationActivity(fr.free.nrw.commons.notification.Notification)>[]--><fr.free.nrw.commons.notification.NotificationActivity: void handleUrl(java.lang.String)>[]--><fr.free.nrw.commons.Utils: void handleWebUrl(android.content.Context,android.net.Uri)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[i0 < 28], [-i0 >= 21]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[i0 < 28]][[-i0 >= 21]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]
i0 < 28
-i0 >= 21
-$i1 < 23
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[i0 < 28], [-i0 >= 21]]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:false
containsTry:true
47call by main package
-----------------------------------------
#################################################
N 392 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 393 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 394 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
#9.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:137
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 395 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 396 Potential Issue API: SDKCheck of <android.widget.AbsListView: void setSelectionFromTop(int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i1 < 19
Good road: <androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)>[]--><androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)>[[i1 < 19]]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 397 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putIntArray(java.lang.String,int[])> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.CrashReportDialog: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:138
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 398 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 399 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 400 Potential Issue API: SDKCheck of <android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)>[]--><androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>[[-i0 < 21]]--><android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 401 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 402 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 403 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.CrashReportDialog: void onSaveInstanceState(android.os.Bundle)>[]--><androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 < 16]][[-i0 < 19]]
i0 < 26
i0 < 16
-i0 < 19
Good road: <androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
One road protect good!
crashApis:139
crashApisInMain:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 404 Potential Issue API: SDKCheck of <android.os.BaseBundle: int size()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 405 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <com.squareup.leakcanary.internal.HeapAnalyzerService: void onHandleIntentInForeground(android.content.Intent)>[]--><com.squareup.leakcanary.AbstractAnalysisResultService: void sendResultToListener(android.content.Context,java.lang.String,com.squareup.leakcanary.HeapDump,com.squareup.leakcanary.AnalysisResult)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <com.squareup.leakcanary.ServiceHeapDumpListener: void analyze(com.squareup.leakcanary.HeapDump)>[]--><com.squareup.leakcanary.internal.HeapAnalyzerService: void runAnalysis(android.content.Context,com.squareup.leakcanary.HeapDump,java.lang.Class)>[]--><androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 406 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 407 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 408 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
45call roads:
0 Mainhead roads:
45 Packageshead roads:
containsStatic:true
containsTry:false
46call by main package
-----------------------------------------
#################################################
N 409 Potential Issue API: SDKCheck of <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 410 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.upload.UploadService dummyMainMethod_fr_free_nrw_commons_upload_UploadService(android.content.Intent)>[]--><fr.free.nrw.commons.upload.UploadService: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: fr.free.nrw.commons.review.ReviewActivity dummyMainMethod_fr_free_nrw_commons_review_ReviewActivity(android.content.Intent)>[]--><fr.free.nrw.commons.review.ReviewActivity: void onCreate(android.os.Bundle)>[]--><fr.free.nrw.commons.review.ReviewController: void <init>(fr.free.nrw.commons.delete.DeleteHelper,android.content.Context)>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><fr.free.nrw.commons.CommonsApplication: void onCreate()>[]--><fr.free.nrw.commons.CommonsApplication: void createNotificationChannel(android.content.Context)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
1 Packageshead roads:
-i0 < 26
Good road: <com.squareup.leakcanary.internal.LeakCanaryInternals: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 411 Potential Issue API: SDKCheck of <android.widget.LinearLayout: void onRtlPropertiesChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)>[]--><android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)> to <android.widget.LinearLayout: void onRtlPropertiesChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:140
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 412 Potential Issue API: SDKCheck of <android.net.wifi.WifiInfo: int getNetworkId()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <fr.free.nrw.commons.nearby.fragments.NearbyParentFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.mapbox.mapboxsdk.maps.MapView: void onCreate(android.os.Bundle)>[]--><com.mapbox.mapboxsdk.module.telemetry.TelemetryImpl: void onAppUserTurnstileEvent()>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: void <init>(android.content.Context)>[]--><com.mapbox.mapboxsdk.module.telemetry.PhoneState: boolean isConnectedToWifi(android.content.Context)>[[try]]--><android.net.wifi.WifiInfo: int getNetworkId()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 413 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)> is checking!!!
The life time of api is [23,31]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0]][[-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
-$z0 == 0
-i1 < 23
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
containsStatic:true
containsTry:false
18call by main package
-----------------------------------------
#################################################
N 414 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 415 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <org.acra.sender.JobSenderService: boolean onStartJob(android.app.job.JobParameters)>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#1.the call statck between class <org.acra.sender.JobSenderService: boolean onStartJob(android.app.job.JobParameters)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:141
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 416 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.params.DefaultedHttpParams: boolean removeParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>
#1.the call statck between class <org.apache.http.params.DefaultedHttpParams: boolean removeParameter(java.lang.String)> to <org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:142
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 417 Potential Issue API: SDKCheck of <android.app.Activity: void finishAfterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()>[]--><androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void finishAfterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 418 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMaxTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 419 Potential Issue API: SDKCheck of <android.os.PersistableBundle: void <init>()> is checking!!!
The life time of api is [21,31]
702call roads:
1 Mainhead roads:
701 Packageshead roads:
-i0 < 22
Good road: <org.acra.dialog.BaseCrashReportDialog: void lambda$sendCrash$1$BaseCrashReportDialog(java.lang.String,java.lang.String)>[]--><org.acra.scheduler.SchedulerStarter: void scheduleReports(java.io.File,boolean)>[]--><org.acra.scheduler.DefaultSenderScheduler: void scheduleReportSending(boolean)>[[-i0 < 22]]--><android.os.PersistableBundle: void <init>()>
One road protect good!
containsStatic:true
containsTry:true
702call by main package
-----------------------------------------
#################################################
N 420 Potential Issue API: SDKCheck of <android.view.View: void requestApplyInsets()> is checking!!!
The life time of api is [21,31]
703call roads:
1 Mainhead roads:
702 Packageshead roads:
-$i0 < 20
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void onAttachedToWindow()>[]--><androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>[[-$i0 < 20]]--><android.view.View: void requestApplyInsets()>
One road protect good!
-$yysi0 < 16
-$i0 < 20
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void onAttachedToWindow()>[[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)>[[-$i0 < 20]]--><android.view.View: void requestApplyInsets()>
One road protect good!
containsStatic:true
containsTry:true
703call by main package
-----------------------------------------
#################################################
N 421 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 422 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getResId()> is checking!!!
The life time of api is [28,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i1 < 23
-i0 < 20
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompatJellybean: android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 423 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 424 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>[[-$i0 < 21]]--><android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>[[-$i0 < 21]]--><android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 425 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 426 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.ManagedClientConnectionImpl: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)>[]--><org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
#9.the call statck between class <org.apache.http.impl.client.ProxyClient: java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials)> to <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:143
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
crashApis numbers:143
crashApis numbers in main road:10
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 135 and error api roads: 258
On Android Version 20 this app may have error api use(at least): 135 and error api roads: 258
On Android Version 21 this app may have error api use(at least): 90 and error api roads: 179
On Android Version 22 this app may have error api use(at least): 86 and error api roads: 174
On Android Version 23 this app may have error api use(at least): 46 and error api roads: 57
On Android Version 24 this app may have error api use(at least): 40 and error api roads: 51
On Android Version 25 this app may have error api use(at least): 40 and error api roads: 51
On Android Version 26 this app may have error api use(at least): 27 and error api roads: 37
On Android Version 27 this app may have error api use(at least): 27 and error api roads: 37
On Android Version 28 this app may have error api use(at least): 18 and error api roads: 27
On Android Version 29 this app may have error api use(at least): 2 and error api roads: 2
On Android Version 30 this app may have error api use(at least): 2 and error api roads: 2
On Android Version 31 this app may have error api use(at least): 6 and error api roads: 6
