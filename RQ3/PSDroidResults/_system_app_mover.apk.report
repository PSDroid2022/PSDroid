/home/ys/桌面/CompactDroid（复件）/dataset2/_system_app_mover.apk
Entry Points[de.j4velin.systemappmover.MoverActivity]
FllowDroidcallgraph size:1385
Soot started on Mon Jul 11 12:55:38 CST 2022
Soot finished on Mon Jul 11 12:55:43 CST 2022
Soot has run for 0 min. 5 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 14
Declared Target Sdk version is: 21
Declared Max Sdk version is: -1
Collected 131 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
20call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.j4velin.systemappmover.MoverActivity dummyMainMethod_de_j4velin_systemappmover_MoverActivity(android.content.Intent)>[]--><de.j4velin.systemappmover.MoverActivity: void onCreate(android.os.Bundle)>[]--><de.j4velin.systemappmover.MoverActivity: void checkForRoot()>[]--><java.lang.Thread: void run()>[]--><de.j4velin.systemappmover.MoverActivity$6: void run()>[]--><com.stericson.RootTools.RootTools: boolean isAccessGiven()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAccessGiven()>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
19 Packageshead roads:
try
Good road with try: <com.stericson.RootTools.RootTools: boolean installBinary(android.content.Context,int,java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean installBinary(android.content.Context,int,java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean installBinary(android.content.Context,int,java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.Installer: boolean installBinary(int,java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.test.SanityCheckRootTools: void onCreate(android.os.Bundle)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.test.SanityCheckRootTools: void onCreate(android.os.Bundle)>[[try]]--><com.stericson.RootTools.RootTools: boolean isAccessGiven()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAccessGiven()>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: boolean deleteFileOrDirectory(java.lang.String,boolean)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean deleteFileOrDirectory(java.lang.String,boolean)>[[try]]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean hasUtil(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: boolean isAppletAvailable(java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean isAppletAvailable(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAppletAvailable(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.List getBusyBoxApplets(java.lang.String)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#5.the call statck between class <com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#6.the call statck between class <com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.stericson.RootTools.RootTools: void fixUtil(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: void fixUtil(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.execution.Shell: void runCommand(com.stericson.RootTools.execution.Command)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: java.lang.String getWorkingToolbox()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.lang.String getWorkingToolbox()>[]--><com.stericson.RootTools.RootTools: boolean checkUtil(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean checkUtil(java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean findBinary(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean findBinary(java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: java.util.Set getPath()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.Set getPath()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean returnPath()>[[try]]--><com.stericson.RootTools.RootTools: boolean remount(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.Remounter: boolean remount(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: java.util.ArrayList getMounts()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.ArrayList getMounts()>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <de.j4velin.systemappmover.EfficientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.j4velin.systemappmover.MoverActivity$6$2: void run()>[]--><com.stericson.RootTools.RootTools: java.lang.String getBusyBoxVersion()>[]--><com.stericson.RootTools.RootTools: java.lang.String getBusyBoxVersion(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.lang.String getBusyBoxVersion(java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
crashApis:1
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.test.SanityCheckRootTools$TestHandler: void handleMessage(android.os.Message)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <com.stericson.RootTools.test.SanityCheckRootTools$TestHandler: void handleMessage(android.os.Message)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.test.SanityCheckRootTools$TestHandler: void handleMessage(android.os.Message)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <com.stericson.RootTools.test.SanityCheckRootTools$TestHandler: void handleMessage(android.os.Message)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
20call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: de.j4velin.systemappmover.MoverActivity dummyMainMethod_de_j4velin_systemappmover_MoverActivity(android.content.Intent)>[]--><de.j4velin.systemappmover.MoverActivity: void onCreate(android.os.Bundle)>[]--><de.j4velin.systemappmover.MoverActivity: void checkForRoot()>[]--><java.lang.Thread: void run()>[]--><de.j4velin.systemappmover.MoverActivity$6: void run()>[]--><com.stericson.RootTools.RootTools: boolean isAccessGiven()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAccessGiven()>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
19 Packageshead roads:
try
Good road with try: <com.stericson.RootTools.RootTools: boolean installBinary(android.content.Context,int,java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean installBinary(android.content.Context,int,java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean installBinary(android.content.Context,int,java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.Installer: boolean installBinary(int,java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.test.SanityCheckRootTools: void onCreate(android.os.Bundle)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.test.SanityCheckRootTools: void onCreate(android.os.Bundle)>[[try]]--><com.stericson.RootTools.RootTools: boolean isAccessGiven()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAccessGiven()>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: boolean deleteFileOrDirectory(java.lang.String,boolean)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean deleteFileOrDirectory(java.lang.String,boolean)>[[try]]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean hasUtil(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: boolean isAppletAvailable(java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean isAppletAvailable(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean isAppletAvailable(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.List getBusyBoxApplets(java.lang.String)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#5.the call statck between class <com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startCustomShell(java.lang.String,int)>[]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#6.the call statck between class <com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getCustomShell(java.lang.String)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.stericson.RootTools.RootTools: void fixUtil(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: void fixUtil(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.execution.Shell: void runCommand(com.stericson.RootTools.execution.Command)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <com.stericson.RootTools.RootTools: java.lang.String getWorkingToolbox()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.lang.String getWorkingToolbox()>[]--><com.stericson.RootTools.RootTools: boolean checkUtil(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean checkUtil(java.lang.String)>[]--><com.stericson.RootTools.RootTools: boolean findBinary(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean findBinary(java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: java.util.Set getPath()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.Set getPath()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: boolean returnPath()>[[try]]--><com.stericson.RootTools.RootTools: boolean remount(java.lang.String,java.lang.String)>[]--><com.stericson.RootTools.internal.Remounter: boolean remount(java.lang.String,java.lang.String)>[[try]]--><com.stericson.RootTools.RootTools: java.util.ArrayList getMounts()>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.util.ArrayList getMounts()>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int)>[]--><com.stericson.RootTools.RootTools: com.stericson.RootTools.execution.Shell getShell(boolean,int,int)>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startShell(int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
try
Good road with try: <de.j4velin.systemappmover.EfficientAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><de.j4velin.systemappmover.MoverActivity$6$2: void run()>[]--><com.stericson.RootTools.RootTools: java.lang.String getBusyBoxVersion()>[]--><com.stericson.RootTools.RootTools: java.lang.String getBusyBoxVersion(java.lang.String)>[]--><com.stericson.RootTools.internal.RootToolsInternalMethods: java.lang.String getBusyBoxVersion(java.lang.String)>[[try]]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell()>[]--><com.stericson.RootTools.execution.Shell: com.stericson.RootTools.execution.Shell startRootShell(int,int)>[[try]]--><com.stericson.RootTools.execution.Shell: void <init>(java.lang.String)>[]--><com.stericson.RootTools.execution.Executer$Worker: void run()>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread$2: void onComplete(int)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void access$200(com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread,int,java.lang.String)>[]--><com.stericson.RootTools.test.SanityCheckRootTools$SanityCheckThread: void visualUpdate(int,java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
crashApis:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
crashApis numbers:4
crashApis numbers in main road:0
On Android Version 16 this app may have error api use(at least): 4 and error api roads: 6
On Android Version 17 this app may have error api use(at least): 4 and error api roads: 6
On Android Version 18 this app may have error api use(at least): 4 and error api roads: 6
On Android Version 19 this app may have error api use(at least): 4 and error api roads: 6
On Android Version 20 this app may have error api use(at least): 4 and error api roads: 6
On Android Version 21 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 22 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 0 and error api roads: 0
