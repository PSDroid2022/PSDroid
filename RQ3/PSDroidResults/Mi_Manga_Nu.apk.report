/home/ys/桌面/CompactDroid（复件）/dataset2/Mi_Manga_Nu.apk
Entry Points[ar.rulosoft.mimanganu.utils.CancelIntentReceiver, ar.rulosoft.mimanganu.SplashActivity, com.evernote.android.job.v14.PlatformAlarmServiceExact, ar.rulosoft.mimanganu.MessageActivity, com.evernote.android.job.JobRescheduleService, com.evernote.android.job.v14.PlatformAlarmReceiver, ar.rulosoft.mimanganu.utils.NotificationDeleteIntentReceiver, ar.rulosoft.mimanganu.MainActivity, com.evernote.android.job.v14.PlatformAlarmService, ar.rulosoft.mimanganu.services.DownloadPoolService, ar.rulosoft.mimanganu.utils.autotest.RunAutoTest, com.evernote.android.job.JobBootReceiver, ar.rulosoft.mimanganu.MiMangaNuApplication, com.evernote.android.job.v21.PlatformJobService, ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver]
FllowDroidcallgraph size:10739
Soot started on Mon Jul 11 07:03:40 CST 2022
StaticCheck:<rapid.decoder.BackgroundTaskManager: boolean shouldBeWeak(java.lang.Object)>$yysi0 < 11
StaticCheck:<com.evernote.android.job.JobConfig: boolean isAllowSmallerIntervalsForMarshmallow()>$yysi0 >= 24
StaticCheck:<rapid.decoder.cache.DiskLruCache: boolean isExternalStorageRemovable()>$yysi0 < 9
StaticCheck:<ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>$yysi1 >= 21
StaticCheck:<com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>$yysi0 < 23
StaticCheck:<com.google.android.gms.common.util.zzs: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<com.google.android.gms.common.util.zzs: boolean isAtLeastO()>$yysi0 > 25
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzrY()>$yysi0 < 16
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzrZ()>$yysi0 < 17
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzsa()>$yysi0 < 18
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzsb()>$yysi0 < 19
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzsc()>$yysi0 < 20
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzsd()>$yysi0 < 21
Soot finished on Mon Jul 11 07:04:05 CST 2022
Soot has run for 0 min. 25 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 15
Declared Target Sdk version is: 28
Declared Max Sdk version is: -1
Collected 1215 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller: java.util.List getAllSessions()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzb: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.security.zza: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.google.android.gms.security.zza: java.lang.Integer zzb(java.lang.Void[])>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbds: void zzpT()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: int zzG(android.content.Context,java.lang.String)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzc: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbdn: void zzpT()>[]--><com.google.android.gms.internal.zzbdm: void onConnectionSuspended(int)>[]--><com.google.android.gms.internal.zzbeb: void zze(int,boolean)>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.gms.dynamic.zza: void zza(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zze: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzd: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: void start()>[]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzf: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,android.support.v4.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.internal.zzd: void zzqZ()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbfn: void zzpq()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbcm: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <it.sephiroth.android.library.imagezoom.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.gms.internal.zzbco: void run()>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$zzd,java.lang.String)>[[try]]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void signOut()>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void resume()>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzben: void zzc(com.google.android.gms.common.api.GoogleApi)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzb: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.security.zza: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.google.android.gms.security.zza: java.lang.Integer zzb(java.lang.Void[])>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbds: void zzpT()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: int zzG(android.content.Context,java.lang.String)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzc: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbdn: void zzpT()>[]--><com.google.android.gms.internal.zzbdm: void onConnectionSuspended(int)>[]--><com.google.android.gms.internal.zzbeb: void zze(int,boolean)>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.gms.dynamic.zza: void zza(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zze: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzd: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: void start()>[]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzf: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,android.support.v4.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.common.internal.zzd: void zzqZ()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbfn: void zzpq()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbcm: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <it.sephiroth.android.library.imagezoom.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.gms.internal.zzbco: void run()>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$zzd,java.lang.String)>[[try]]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void signOut()>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void resume()>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzben: void zzc(com.google.android.gms.common.api.GoogleApi)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: java.util.List getAllPendingJobs()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.graphics.Bitmap: int getAllocationByteCount()> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 19
Good road: <rapid.decoder.cache.BitmapLruCache: int sizeOf(java.lang.Object,java.lang.Object)>[]--><rapid.decoder.cache.BitmapLruCache: int sizeOf(rapid.decoder.BitmapLoader,android.graphics.Bitmap)>[]--><rapid.decoder.BitmapUtils: int getByteCount(android.graphics.Bitmap)>[[-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getNoBackupFilesDir()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 21
Good road: <com.google.android.gms.common.util.zzw: java.io.File getNoBackupFilesDir(android.content.Context)>[[-$yysi0 < 21]]--><android.content.Context: java.io.File getNoBackupFilesDir()>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
418call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.autotest.RunAutoTest dummyMainMethod_ar_rulosoft_mimanganu_utils_autotest_RunAutoTest(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$1: void onClick(android.view.View)>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest: void access$000(ar.rulosoft.mimanganu.utils.autotest.RunAutoTest,ar.rulosoft.mimanganu.servers.ServerBase[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest: void start(ar.rulosoft.mimanganu.servers.ServerBase[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$RunTest: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$RunTest: java.lang.Void doInBackground(ar.rulosoft.mimanganu.servers.ServerBase[][])>[]--><ar.rulosoft.mimanganu.servers.DesuMe: java.util.ArrayList getMangasFiltered(int[][],int)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String,int,int,int)>[]--><okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>[]--><okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.services.DownloadPoolService dummyMainMethod_ar_rulosoft_mimanganu_services_DownloadPoolService(android.content.Intent)>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void onCreate()>[]--><java.lang.Thread: void run()>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService$1: void run()>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void access$000(ar.rulosoft.mimanganu.services.DownloadPoolService)>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void initPool()>[]--><ar.rulosoft.mimanganu.servers.JapScan: void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String,int,int,int)>[]--><okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>[]--><okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v21.PlatformJobService dummyMainMethod_com_evernote_android_job_v21_PlatformJobService(android.content.Intent)>[]--><com.evernote.android.job.v21.PlatformJobService: boolean onStartJob(android.app.job.JobParameters)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: void <init>(android.content.Context,android.view.View,android.content.SharedPreferences,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasForUpdates(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.JobBootReceiver dummyMainMethod_com_evernote_android_job_JobBootReceiver(android.content.Intent)>[]--><com.evernote.android.job.JobBootReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: boolean onContextItemSelected(android.view.MenuItem)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v14.PlatformAlarmService dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmService(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmService: void onHandleWork(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmService: void runJob(android.content.Intent,android.app.Service,com.evernote.android.job.util.JobCat)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v14.PlatformAlarmServiceExact dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmServiceExact(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmServiceExact: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.JobRescheduleService dummyMainMethod_com_evernote_android_job_JobRescheduleService(android.content.Intent)>[]--><com.evernote.android.job.JobRescheduleService: void onHandleWork(android.content.Intent)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: void scheduleJob(android.content.Context)>[]--><com.evernote.android.job.JobManager: int cancelAllForTag(java.lang.String)>[]--><com.evernote.android.job.JobManager: int cancelAllInner(java.lang.String)>[[try]]--><com.evernote.android.job.JobManager: java.util.Set getAllJobsForTag(java.lang.String)>[]--><com.evernote.android.job.JobExecutor: java.util.Set getAllJobsForTag(java.lang.String)>[[try]]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
417 Packageshead roads:
try
Good road with try: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
-$yysi0 < 21
try
Good road with try: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
-$yysi0 < 21
try
Good road with try: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>[[try]]--><ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader: boolean onSingleTapConfirmed(android.view.MotionEvent)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItem(int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void smoothScrollTo(int,int,int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void completeScroll(boolean)>[]--><com.evernote.android.job.v21.PlatformJobService$1: void run()>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MainFragment$4: boolean onClose()>[]--><ar.rulosoft.mimanganu.MainFragment: void setListManga(boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])>[]--><okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>[]--><okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzh: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzb: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
#6.the call statck between class <android.arch.lifecycle.MediatorLiveData: void onActive()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <fr.castorflex.android.verticalviewpager.VerticalViewPager: void computeScroll()>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void completeScroll(boolean)>[]--><com.evernote.android.job.v21.PlatformJobService$1: void run()>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzh: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzb: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
#8.the call statck between class <com.google.android.gms.internal.zzbga: void onResume()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.data.DataBufferUtils: boolean hasData(com.google.android.gms.common.data.DataBuffer)>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
crashApis:1
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
10call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
9 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#9.the call statck between class <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:2
crashApisInMain:1
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setTransientExtras(android.os.Bundle)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder setTransientBundle(com.evernote.android.job.JobRequest,android.app.job.JobInfo$Builder)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setTransientExtras(android.os.Bundle)>
#1.the call statck between class <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder setTransientBundle(com.evernote.android.job.JobRequest,android.app.job.JobInfo$Builder)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setTransientExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
411call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.autotest.RunAutoTest dummyMainMethod_ar_rulosoft_mimanganu_utils_autotest_RunAutoTest(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$1: void onClick(android.view.View)>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest: void access$000(ar.rulosoft.mimanganu.utils.autotest.RunAutoTest,ar.rulosoft.mimanganu.servers.ServerBase[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest: void start(ar.rulosoft.mimanganu.servers.ServerBase[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$RunTest: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.utils.autotest.RunAutoTest$RunTest: java.lang.Void doInBackground(ar.rulosoft.mimanganu.servers.ServerBase[][])>[]--><ar.rulosoft.mimanganu.servers.DesuMe: java.util.ArrayList getMangasFiltered(int[][],int)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String,int,int,int)>[]--><okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>[]--><okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.services.DownloadPoolService dummyMainMethod_ar_rulosoft_mimanganu_services_DownloadPoolService(android.content.Intent)>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void onCreate()>[]--><java.lang.Thread: void run()>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService$1: void run()>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void access$000(ar.rulosoft.mimanganu.services.DownloadPoolService)>[]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void initPool()>[]--><ar.rulosoft.mimanganu.servers.JapScan: void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String)>[]--><ar.rulosoft.navegadores.Navigator: java.lang.String get(java.lang.String,int,int,int)>[]--><okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>[]--><okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v21.PlatformJobService dummyMainMethod_com_evernote_android_job_v21_PlatformJobService(android.content.Intent)>[]--><com.evernote.android.job.v21.PlatformJobService: boolean onStartJob(android.app.job.JobParameters)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: void <init>(android.content.Context,android.view.View,android.content.SharedPreferences,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasForUpdates(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.JobBootReceiver dummyMainMethod_com_evernote_android_job_JobBootReceiver(android.content.Intent)>[]--><com.evernote.android.job.JobBootReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: boolean onContextItemSelected(android.view.MenuItem)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v14.PlatformAlarmService dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmService(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmService: void onHandleWork(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmService: void runJob(android.content.Intent,android.app.Service,com.evernote.android.job.util.JobCat)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.v14.PlatformAlarmServiceExact dummyMainMethod_com_evernote_android_job_v14_PlatformAlarmServiceExact(android.content.Intent)>[]--><com.evernote.android.job.v14.PlatformAlarmServiceExact: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.evernote.android.job.JobRescheduleService dummyMainMethod_com_evernote_android_job_JobRescheduleService(android.content.Intent)>[]--><com.evernote.android.job.JobRescheduleService: void onHandleWork(android.content.Intent)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: void scheduleJob(android.content.Context)>[]--><com.evernote.android.job.JobManager: int cancelAllForTag(java.lang.String)>[]--><com.evernote.android.job.JobManager: int cancelAllInner(java.lang.String)>[[try]]--><com.evernote.android.job.JobManager: java.util.Set getAllJobsForTag(java.lang.String)>[]--><com.evernote.android.job.JobExecutor: java.util.Set getAllJobsForTag(java.lang.String)>[[try]]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
410 Packageshead roads:
-$yysi0 < 21
try
Good road with try: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
-$yysi0 < 21
try
Good road with try: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
-$yysi0 < 21
try
Good road with try: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$yysi0 < 21]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>[[try]]--><ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader: boolean onSingleTapConfirmed(android.view.MotionEvent)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItem(int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItemInternal(int,boolean,boolean)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void scrollToItem(int,boolean,int,boolean)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void smoothScrollTo(int,int,int)>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void completeScroll(boolean)>[]--><com.evernote.android.job.v21.PlatformJobService$1: void run()>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MainFragment$4: boolean onClose()>[]--><ar.rulosoft.mimanganu.MainFragment: void setListManga(boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.HtmlUnescape: java.lang.String Unescape(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <okhttp3.CertificatePinner: void check(java.lang.String,java.security.cert.Certificate[])>[]--><okhttp3.CertificatePinner: void check(java.lang.String,java.util.List)>[]--><okhttp3.CertificatePinner: java.util.List findMatchingPins(java.lang.String)>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzh: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.google.android.gms.common.data.zzb: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <android.arch.lifecycle.MediatorLiveData: void onActive()>[]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
#6.the call statck between class <android.arch.lifecycle.MediatorLiveData: void onActive()> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <fr.castorflex.android.verticalviewpager.VerticalViewPager: void computeScroll()>[]--><fr.castorflex.android.verticalviewpager.VerticalViewPager: void completeScroll(boolean)>[]--><com.evernote.android.job.v21.PlatformJobService$1: void run()>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.app.Service,com.evernote.android.job.util.JobCat,int)>[]--><com.evernote.android.job.JobProxy$Common: void <init>(android.content.Context,com.evernote.android.job.util.JobCat,int)>[[try]]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobManager create(android.content.Context)>[[try]]--><com.evernote.android.job.JobManager: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context)>[]--><com.evernote.android.job.JobStorage: void <init>(android.content.Context,java.lang.String)>[]--><com.evernote.android.job.JobStorage: void tryToCleanupFinishedJobs()>[]--><com.evernote.android.job.JobStorage$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: void remove()>[[try]]--><okhttp3.internal.cache.DiskLruCache: boolean remove(java.lang.String)>[[try]]--><okhttp3.internal.cache.DiskLruCache: void initialize()>[[try]]--><okhttp3.internal.cache.DiskLruCache: void rebuildJournal()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzh: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator: boolean hasNext()>[]--><okhttp3.Cache$2: boolean hasNext()>[[try]]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict()>[]--><okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)>[]--><okio.RealBufferedSource: boolean request(long)>[]--><okhttp3.internal.http2.Http2Stream$FramingSource: long read(okio.Buffer,long)>[[try]]--><okhttp3.internal.http2.Http2Connection: void writeWindowUpdateLater(int,long)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbga: void onResume()>[]--><com.google.android.gms.common.data.zzb: java.lang.Object next()>[]--><com.google.android.gms.common.data.zzd: java.lang.Object get(int)>[]--><com.google.android.gms.common.data.zzd: com.google.android.gms.common.internal.safeparcel.SafeParcelable zzas(int)>[]--><com.google.android.gms.common.data.DataHolder: byte[] zzg(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
try
Good road with try: <com.google.android.gms.internal.zzbga: void onResume()>[]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
#8.the call statck between class <com.google.android.gms.internal.zzbga: void onResume()> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.google.android.gms.tasks.zzm: void execute(java.lang.Runnable)>[]--><ar.rulosoft.mimanganu.DetailsFragment$1: void run()>[[try]]--><okhttp3.internal.cache.DiskLruCache$3: boolean hasNext()>[[try]]--><com.google.android.gms.common.data.zzb: boolean hasNext()>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.data.DataBufferUtils: boolean hasData(com.google.android.gms.common.data.DataBuffer)>[]--><com.google.android.gms.common.data.zzg: int getCount()>[]--><com.google.android.gms.common.data.zzg: void zzqR()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String zzd(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zzh(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
crashApis:4
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.os.Bundle getTransientExtras()> is checking!!!
The life time of api is [26,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <com.evernote.android.job.v24.JobProxy24: android.app.job.JobInfo$Builder createBuilderPeriodic(android.app.job.JobInfo$Builder,long,long)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
#1.the call statck between class <com.evernote.android.job.v24.JobProxy24: android.app.job.JobInfo$Builder createBuilderPeriodic(android.app.job.JobInfo$Builder,long,long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzcvg: android.os.Bundle zzmm()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <com.google.android.gms.internal.zzcvg: android.os.Bundle zzmm()> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.internal.zzcvg: android.os.Bundle zza(com.google.android.gms.common.internal.zzq)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#2.the call statck between class <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2: boolean onQueryTextSubmit(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#3.the call statck between class <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2: boolean onQueryTextSubmit(java.lang.String)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#4.the call statck between class <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,java.lang.Throwable)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#5.the call statck between class <com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,java.lang.Throwable)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.PreferencesFragment: void onDisplayPreferenceDialog(android.support.v7.preference.Preference)>[]--><ar.rulosoft.custompref.PreferenceListDirFragment: ar.rulosoft.custompref.PreferenceListDirFragment newInstance(android.support.v7.preference.Preference)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.PreferencesFragment: void onDisplayPreferenceDialog(android.support.v7.preference.Preference)>[]--><ar.rulosoft.custompref.ColorListDialogFragment: ar.rulosoft.custompref.ColorListDialogFragment newInstance(android.support.v7.preference.Preference)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#6.the call statck between class <ar.rulosoft.mimanganu.PreferencesFragment: void onDisplayPreferenceDialog(android.support.v7.preference.Preference)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerListFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#7.the call statck between class <ar.rulosoft.mimanganu.ServerListFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.SearchResultsFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#8.the call statck between class <ar.rulosoft.mimanganu.SearchResultsFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)> is checking!!!
The life time of api is [8,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 9
Good road: <com.google.android.gms.internal.zzas: com.google.android.gms.internal.zzs zza(android.content.Context,com.google.android.gms.internal.zzan)>[[$i0 < 9]]--><android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setVibrationPattern(long[])> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zzbcm: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <com.google.android.gms.internal.zzbcm: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.internal.zzcvg: android.os.Bundle zza(com.google.android.gms.common.internal.zzq)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#2.the call statck between class <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableLights(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.componentes.ReaderOptions: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <ar.rulosoft.mimanganu.componentes.ReaderOptions: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isInteractive()> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.google.android.gms.internal.zzcvl: void release()>[[try]]--><com.google.android.gms.common.stats.zze: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.zze: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzl: int zzaK(android.content.Context)>[[-$yysi0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzcvl: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.zze: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzl: int zzaK(android.content.Context)>[[-$yysi0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
-$i0 < 20
Good road: <com.evernote.android.job.Job: boolean meetsRequirements()>[]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.evernote.android.job.DailyJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.evernote.android.job.Job: com.evernote.android.job.Job$Result runJob()>[[try]]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 20]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
containsStatic:true
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.util.SizeF: float getHeight()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: float getHeight()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)> to <android.util.SizeF: float getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <com.google.android.gms.common.api.GoogleApiActivity: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
395call roads:
1 Mainhead roads:
394 Packageshead roads:
try
Good road with try: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.dynamite.zzb: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.security.zza: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.google.android.gms.security.zza: java.lang.Integer zzb(java.lang.Void[])>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: int zzaE(android.content.Context)>[]--><com.google.android.gms.common.internal.zzbg: void zzaF(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.DetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#91.the call statck between class <ar.rulosoft.mimanganu.DetailsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:true
containsTry:true
92call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.app.job.JobInfo: int getId()> is checking!!!
The life time of api is [21,31]
390call roads:
1 Mainhead roads:
389 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.evernote.android.job.v26.JobProxy26: boolean isJobInfoScheduled(android.app.job.JobInfo,com.evernote.android.job.JobRequest)>[]--><android.app.job.JobInfo: int getId()>
#69.the call statck between class <com.evernote.android.job.v26.JobProxy26: boolean isJobInfoScheduled(android.app.job.JobInfo,com.evernote.android.job.JobRequest)> to <android.app.job.JobInfo: int getId()>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:true
containsTry:true
70call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)> is checking!!!
The life time of api is [24,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
try
Good road with try: <com.evernote.android.job.DailyJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[]--><com.evernote.android.job.JobManager: com.evernote.android.job.JobRequest getJobRequest(int)>[]--><com.evernote.android.job.v24.JobProxy24: boolean isPlatformJobScheduled(com.evernote.android.job.JobRequest)>[[try]]--><android.app.job.JobScheduler: android.app.job.JobInfo getPendingJob(int)>
One road protect good!
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [19,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask: void onPostExecute(java.lang.Void)>[]--><android.animation.AnimatorSet: void <init>()>
#1.the call statck between class <ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask: void onPostExecute(java.lang.Void)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <ar.rulosoft.mimanganu.DetailsFragment$2: void onClick(android.view.View)>[]--><android.animation.AnimatorSet: void <init>()>
#2.the call statck between class <ar.rulosoft.mimanganu.DetailsFragment$2: void onClick(android.view.View)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[[]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.DetailsFragment: void onStart()>[[]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
#1.the call statck between class <ar.rulosoft.mimanganu.DetailsFragment: void onStart()> to <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:14
crashApisInMain:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
15call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MainActivity: void onNewIntent(android.content.Intent)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
14 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbcm: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <com.google.android.gms.internal.zzbcm: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.data.DataHolder: void <init>(com.google.android.gms.common.data.DataHolder$zza,int,android.os.Bundle)>[]--><com.google.android.gms.common.data.DataHolder: void <init>(java.lang.String[],android.database.CursorWindow[],int,android.os.Bundle)>[]--><com.google.android.gms.common.data.DataHolder: void zzqP()>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#2.the call statck between class <com.google.android.gms.common.data.DataHolder: void <init>(com.google.android.gms.common.data.DataHolder$zza,int,android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#3.the call statck between class <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: boolean onOptionsItemSelected(android.view.MenuItem)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.internal.zzcvg: android.os.Bundle zza(com.google.android.gms.common.internal.zzq)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#4.the call statck between class <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServersSelectFragment$1: void onServerClick(ar.rulosoft.mimanganu.servers.ServerBase)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#5.the call statck between class <ar.rulosoft.mimanganu.ServersSelectFragment$1: void onServerClick(ar.rulosoft.mimanganu.servers.ServerBase)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2: boolean onQueryTextSubmit(java.lang.String)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#6.the call statck between class <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2: boolean onQueryTextSubmit(java.lang.String)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#7.the call statck between class <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#8.the call statck between class <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.MainFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#9.the call statck between class <ar.rulosoft.mimanganu.MainFragment: void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.ReaderFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#10.the call statck between class <ar.rulosoft.mimanganu.ReaderFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:15
crashApisInMain:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.util.SizeF: float getWidth()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: float getWidth()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)> to <android.util.SizeF: float getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
9call roads:
1 Mainhead roads:
-$i1 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
-$i1 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Integer doInBackground(java.lang.Void[])>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
8 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
-$i1 >= 21
Good road: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
One road protect good!
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MainActivity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>[]--><android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:17
crashApisInMain:4
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.util.zze: int zzB(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <com.google.android.gms.common.util.zze: int zzB(android.content.Context,java.lang.String)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbcm: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#2.the call statck between class <com.google.android.gms.internal.zzbcm: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <ar.rulosoft.mimanganu.MangaFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#3.the call statck between class <ar.rulosoft.mimanganu.MangaFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
#1.the call statck between class <com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)> to <android.net.NetworkInfo: boolean isConnectedOrConnecting()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.view.Window: void setStatusBarColor(int)> is checking!!!
The life time of api is [21,31]
7call roads:
1 Mainhead roads:
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MainActivity: void onResume()>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
6 Packageshead roads:
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onActivityCreated(android.os.Bundle)>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.PreferencesFragment$1: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.DetailsFragment: void onStart()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onStart()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onResume()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: boolean onBackPressed()>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.app.AppOpsManager: void checkPackage(int,java.lang.String)> is checking!!!
The life time of api is [19,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try], [-$yysi0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try]][[-$yysi0 < 19]]
try
Good road with try: <com.google.android.gms.common.zzo: boolean zzb(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.common.util.zzy: boolean zzb(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try], [-$yysi0 < 19]]--><android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.internal.zza: android.accounts.Account zza(com.google.android.gms.common.internal.zzam)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.zzo: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzb(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try], [-$yysi0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.internal.zza: android.accounts.Account zza(com.google.android.gms.common.internal.zzam)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.zzo: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzb(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try]][[-$yysi0 < 19]]
try
Good road with try: <com.google.android.gms.common.internal.zzz: java.lang.Object createFromParcel(android.os.Parcel)>[]--><com.google.android.gms.common.internal.zzy: void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,com.google.android.gms.common.zzc[])>[]--><com.google.android.gms.common.internal.zza: android.accounts.Account zza(com.google.android.gms.common.internal.zzam)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.zzo: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzf(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzb(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.internal.zzbil: boolean zzf(int,java.lang.String)>[[try], [-$yysi0 < 19]]--><android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
One road protect good!
containsStatic:true
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isDeviceIdleMode()> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 23
Good road: <com.evernote.android.job.Job: boolean meetsRequirements()>[]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 23]]--><android.os.PowerManager: boolean isDeviceIdleMode()>
One road protect good!
try
Good road with try: <com.evernote.android.job.DailyJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 23]]--><android.os.PowerManager: boolean isDeviceIdleMode()>
One road protect good!
try
Good road with try: <com.evernote.android.job.Job: com.evernote.android.job.Job$Result runJob()>[[try]]--><com.evernote.android.job.Job: boolean meetsRequirements(boolean)>[]--><com.evernote.android.job.Job: boolean isRequirementDeviceIdleMet()>[]--><com.evernote.android.job.util.Device: boolean isIdle(android.content.Context)>[[-$i0 < 23]]--><android.os.PowerManager: boolean isDeviceIdleMode()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isRoaming()> is checking!!!
The life time of api is [3,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)>[]--><android.net.NetworkInfo: boolean isRoaming()>
#1.the call statck between class <com.evernote.android.job.util.Device: com.evernote.android.job.JobRequest$NetworkType getNetworkType(android.content.Context)> to <android.net.NetworkInfo: boolean isRoaming()>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresStorageNotLow(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder createBaseBuilder(com.evernote.android.job.JobRequest,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresStorageNotLow(boolean)>
#1.the call statck between class <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder createBaseBuilder(com.evernote.android.job.JobRequest,boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresStorageNotLow(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,java.lang.Throwable)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#1.the call statck between class <com.google.android.gms.ads.identifier.AdvertisingIdClient: void zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,java.lang.Throwable)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbif: java.lang.String toString()>[]--><com.google.android.gms.internal.zzbif: void zza(java.lang.StringBuilder,java.util.Map,android.os.Parcel)>[]--><com.google.android.gms.internal.zzbif: java.util.HashMap zzo(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#2.the call statck between class <com.google.android.gms.internal.zzbif: java.lang.String toString()> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.util.Size: int getHeight()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)>[]--><android.util.Size: int getHeight()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)> to <android.util.Size: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)> is checking!!!
The life time of api is [19,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <com.evernote.android.job.v19.JobProxy19: void plantOneOffFlexSupport(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)>[]--><android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
#1.the call statck between class <com.evernote.android.job.v19.JobProxy19: void plantOneOffFlexSupport(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)> to <android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 
Error road: <com.evernote.android.job.v19.JobProxy19: void plantOneOffInexact(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)>[]--><android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
#2.the call statck between class <com.evernote.android.job.v19.JobProxy19: void plantOneOffInexact(com.evernote.android.job.JobRequest,android.app.AlarmManager,android.app.PendingIntent)> to <android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:25
crashApisInMain:5
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableVibration(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void enableVibration(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: void zzb(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog getErrorDialog(int,android.app.Activity,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!<ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!<ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.navegadores.Navigator: ar.rulosoft.navegadores.Navigator initialiseInstance(android.content.Context)>[]--><ar.rulosoft.navegadores.Navigator: void <init>(android.content.Context)>[]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.tasks.Task makeGooglePlayServicesAvailable(android.app.Activity)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.zzb: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!)>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.security.zza: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.google.android.gms.security.zza: java.lang.Integer zzb(java.lang.Void[])>[[try]]--><com.google.android.gms.security.ProviderInstaller: void installIfNeeded(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzas(android.content.Context)>[]--><com.google.android.gms.common.zzo: void zzah(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbds: void zzpT()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: int zzG(android.content.Context,java.lang.String)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.zzc: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbdn: void zzpT()>[]--><com.google.android.gms.internal.zzbdm: void onConnectionSuspended(int)>[]--><com.google.android.gms.internal.zzbeb: void zze(int,boolean)>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.dynamic.zza: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.google.android.gms.dynamic.zza: void zza(android.widget.FrameLayout)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GoogleApiAvailability$zza: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.zze: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.zzd: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: void start()>[]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void start(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzd(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.zzf: com.google.android.gms.dynamite.zzi zza(android.content.Context,java.lang.String,com.google.android.gms.dynamite.zzh)>[]--><com.google.android.gms.dynamite.zza: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzb(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: int zzc(android.content.Context,java.lang.String,boolean)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: boolean showErrorDialogFragment(int,android.app.Activity,android.support.v4.app.Fragment,int,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.common.internal.zzd: void zzqZ()>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbfn: void zzpq()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzbcm: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <it.sephiroth.android.library.imagezoom.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.gms.internal.zzbco: void run()>[]--><com.google.android.gms.common.GoogleApiAvailability: com.google.android.gms.internal.zzbew zza(android.content.Context,com.google.android.gms.internal.zzbex)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$zzd,java.lang.String)>[[try]]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$zzd,java.lang.String)>[[try]]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
try
Good road with try: <com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$zzd,java.lang.String)>[[try]]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zza(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.DynamiteModule zzb(android.content.Context,java.lang.String,int)>[]--><com.google.android.gms.dynamite.DynamiteModule: com.google.android.gms.dynamite.zzj zzaT(android.content.Context)>[[try]]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void signOut()>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void zza(com.google.android.gms.internal.zzbby)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void resume()>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0]][[-$yysi0 < 21]]
-$z1 == 0
-$yysi0 < 21
Good road: <com.google.android.gms.internal.zzben: boolean handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzben: void zzc(com.google.android.gms.common.api.GoogleApi)>[]--><com.google.android.gms.internal.zzbep: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzo: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzo: boolean zzy(android.content.Context,java.lang.String)>[[-$z1 == 0], [-$yysi0 < 21]]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)> is checking!!!
The life time of api is [21,30]
9call roads:
1 Mainhead roads:
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Integer doInBackground(java.lang.Void[])>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
8 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
$i1 >= 21
try
Good road with try: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
One road protect good!
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
391call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: void <init>(android.content.Context,android.view.View,android.content.SharedPreferences,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasForUpdates(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: boolean onContextItemSelected(android.view.MenuItem)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
390 Packageshead roads:
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MainFragment$4: boolean onClose()>[]--><ar.rulosoft.mimanganu.MainFragment: void setListManga(boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MangaFragment: void onActivityCreated(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.services.UpdateJobCreator$UpdateJob: com.evernote.android.job.Job$Result onRunJob(com.evernote.android.job.Job$Params)>[[try]]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: void <init>(android.content.Context,android.view.View,android.content.SharedPreferences,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasForUpdates(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MainFragment$5: boolean onQueryTextChange(java.lang.String)>[[try]]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.adapters.DownloadAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onEndOver()>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void freeSpace(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MainFragment: boolean onBackPressed()>[]--><ar.rulosoft.mimanganu.MainFragment: void setListManga(boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.ReaderFragment$10: void onClick(android.content.DialogInterface,int)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void freeSpace(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters: void onPostExecute(java.lang.Integer)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapterFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask: java.lang.Void doInBackground(java.lang.String[])>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getFromFolderMangas(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.adapters.MangaAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters: java.lang.Void doInBackground(java.lang.Void[])>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapterFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapterFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getFullManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getFullManga(android.content.Context,int,boolean)>[[try]]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapterFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Chapter getChapter(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.Manga: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,float,int,int,int,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.Manga: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,float,int,int,int,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void freeSpace(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.Chapter: void reset(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getChapterFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void <init>(java.lang.String,java.lang.String)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void setTitle(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask: java.lang.Void doInBackground(java.lang.String[])>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getFromFolderMangas(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <it.sephiroth.android.library.imagezoom.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>[]--><ar.rulosoft.mimanganu.SearchResultsFragment$2: void run()>[[try]]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean)>[]--><ar.rulosoft.mimanganu.componentes.Database: java.util.ArrayList getMangasFromCursor(android.database.Cursor)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setSynopsis(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$11: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.componentes.Chapter: void freeSpace(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
-$i0 < 24
Good road: <ar.rulosoft.mimanganu.ReaderFragment$9: void onClick(android.content.DialogInterface,int)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void freeSpace(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Chapter: void deleteImages(android.content.Context)>[]--><ar.rulosoft.mimanganu.componentes.Database: ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int)>[]--><ar.rulosoft.mimanganu.componentes.Manga: void setAuthor(java.lang.String)>[]--><ar.rulosoft.mimanganu.utils.Util: android.text.Spanned fromHtml(java.lang.String)>[[-$i0 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:true
containsTry:true
391call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,int)>[[$i7 >= 23], [$i5 >= 23]]
###Multi invoking in one method, need manual check!!!,int)>[[$i7 >= 23]][[$i5 >= 23]]
$i7 >= 23
$i5 >= 23
Good road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><ar.rulosoft.mimanganu.componentes.FilterViewGenerator: void <init>(android.content.Context,java.lang.String,ar.rulosoft.mimanganu.componentes.ServerFilter[],int[][],int)>[[$i7 >= 23], [$i5 >= 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
9call roads:
1 Mainhead roads:
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Integer doInBackground(java.lang.Void[])>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
8 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
$i1 >= 21
try
Good road with try: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.NetworkInfo: int getType()>
One road protect good!
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLongArray(java.lang.String,long[])> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: void cancel(int)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
try
Good road with try: <com.evernote.android.job.DailyJob: int schedule(com.evernote.android.job.JobRequest$Builder,boolean,long,long,boolean)>[]--><com.evernote.android.job.JobRequest: int schedule()>[]--><com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>[]--><com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>[[try]]--><com.evernote.android.job.v21.JobProxy21: void cancel(int)>[[try]]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.PreferencesFragment$10: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)>[]--><com.evernote.android.job.JobRequest: int schedule()>[]--><com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>[]--><com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>[[try]]--><com.evernote.android.job.v21.JobProxy21: void cancel(int)>[[try]]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <com.evernote.android.job.DailyJob: int startNowOnce(com.evernote.android.job.JobRequest$Builder)>[]--><com.evernote.android.job.JobRequest: int schedule()>[]--><com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>[]--><com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>[[try]]--><com.evernote.android.job.v21.JobProxy21: void cancel(int)>[[try]]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <com.evernote.android.job.JobExecutor$JobCallable: void handleResult(com.evernote.android.job.Job,com.evernote.android.job.Job$Result)>[]--><com.evernote.android.job.JobRequest: com.evernote.android.job.JobRequest reschedule(boolean,boolean)>[[try]]--><com.evernote.android.job.JobRequest: int schedule()>[]--><com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>[]--><com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>[[try]]--><com.evernote.android.job.v21.JobProxy21: void cancel(int)>[[try]]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <it.sephiroth.android.library.imagezoom.ImageViewTouchBase: void onLayout(boolean,int,int,int,int)>[]--><com.evernote.android.job.JobRequest$2: void run()>[[try]]--><com.evernote.android.job.JobRequest: int schedule()>[]--><com.evernote.android.job.JobManager: void schedule(com.evernote.android.job.JobRequest)>[]--><com.evernote.android.job.JobProxy$Common: void cleanUpOrphanedJob(android.content.Context,int)>[[try]]--><com.evernote.android.job.v21.JobProxy21: void cancel(int)>[[try]]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.util.Size: int getWidth()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)>[]--><android.util.Size: int getWidth()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)> to <android.util.Size: int getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
9call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
8 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean _isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
-$i1 >= 21
Good road: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[-$i1 >= 21]]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
#8.the call statck between class <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:27
crashApisInMain:6
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.view.Window: void setNavigationBarColor(int)> is checking!!!
The life time of api is [21,31]
7call roads:
1 Mainhead roads:
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MainActivity: void onResume()>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
6 Packageshead roads:
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ServerFilteredNavigationFragment: void onActivityCreated(android.os.Bundle)>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.PreferencesFragment$1: boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.DetailsFragment: void onStart()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onStart()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: void onResume()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
-$i0 < 21
Good road: <ar.rulosoft.mimanganu.ReaderFragment: boolean onBackPressed()>[]--><ar.rulosoft.mimanganu.MainActivity: void setColorToBars()>[[-$i0 < 21]]--><android.view.Window: void setNavigationBarColor(int)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.app.Fragment: android.app.Fragment getParentFragment()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <com.google.android.gms.dynamic.zzj: com.google.android.gms.dynamic.zzk zzty()>[]--><android.app.Fragment: android.app.Fragment getParentFragment()>
#1.the call statck between class <com.google.android.gms.dynamic.zzj: com.google.android.gms.dynamic.zzk zzty()> to <android.app.Fragment: android.app.Fragment getParentFragment()>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.app.job.JobParameters: int getJobId()> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zzbcm: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <com.google.android.gms.internal.zzbcm: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLightColor(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.util.Size: void <init>(int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)>[]--><android.util.Size: void <init>(int,int)>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)> to <android.util.Size: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDouble(java.lang.String,double)> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> is checking!!!
The life time of api is [17,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <rapid.decoder.binder.TextViewBinder: void setDrawable(int,android.graphics.drawable.Drawable)>[]--><rapid.decoder.binder.TextViewBinder: void setCompoundDrawable(int,android.graphics.drawable.Drawable)>[]--><android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
#1.the call statck between class <rapid.decoder.binder.TextViewBinder: void setDrawable(int,android.graphics.drawable.Drawable)> to <android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 
Error road: <rapid.decoder.binder.TextViewBinder: android.graphics.drawable.Drawable getDrawable(int)>[]--><rapid.decoder.binder.TextViewBinder: android.graphics.drawable.Drawable getCompoundDrawable(int)>[]--><android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
#2.the call statck between class <rapid.decoder.binder.TextViewBinder: android.graphics.drawable.Drawable getDrawable(int)> to <android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putIntArray(java.lang.String,int[])> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.internal.zzcvg: android.os.Bundle zza(com.google.android.gms.common.internal.zzq)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
#1.the call statck between class <com.google.android.gms.internal.zzcvg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzq,com.google.android.gms.internal.zzcux,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <rapid.decoder.binder.TextViewBinder: void setDrawable(int,android.graphics.drawable.Drawable)>[]--><rapid.decoder.binder.TextViewBinder: void setCompoundDrawable(int,android.graphics.drawable.Drawable)>[]--><android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
#1.the call statck between class <rapid.decoder.binder.TextViewBinder: void setDrawable(int,android.graphics.drawable.Drawable)> to <android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresBatteryNotLow(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder createBaseBuilder(com.evernote.android.job.JobRequest,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresBatteryNotLow(boolean)>
#1.the call statck between class <com.evernote.android.job.v26.JobProxy26: android.app.job.JobInfo$Builder createBaseBuilder(com.evernote.android.job.JobRequest,boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresBatteryNotLow(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$Builder setTransientExtras(android.os.Bundle)>[]--><android.os.BaseBundle: boolean isEmpty()>
#1.the call statck between class <com.evernote.android.job.JobRequest$Builder: com.evernote.android.job.JobRequest$Builder setTransientExtras(android.os.Bundle)> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.common.internal.zzh: void handleMessage(android.os.Message)>[]--><com.google.android.gms.internal.zzbdr: void zzf(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzbdp: void zzj(com.google.android.gms.internal.zzbdp)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbej: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.internal.zzbdp: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbcu: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzbej: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[[try]]--><com.google.android.gms.internal.zzbdp: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,boolean)>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzo: boolean zzrh()>[]--><com.google.android.gms.internal.zzbdr: void zzf(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzbdp: void zzj(com.google.android.gms.internal.zzbdp)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzo: void zzj(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzbdr: void zzf(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzbdp: void zzj(com.google.android.gms.internal.zzbdp)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzbdx: void zzpT()>[]--><com.google.android.gms.internal.zzbdp: void zza(com.google.android.gms.internal.zzbdp,com.google.android.gms.internal.zzcvj)>[]--><com.google.android.gms.internal.zzbdp: void zza(com.google.android.gms.internal.zzcvj)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
#7.the call statck between class <com.google.android.gms.internal.zzbdx: void zzpT()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zzbdu: void zzpT()>[]--><com.google.android.gms.internal.zzbdr: void zzf(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzbdp: void zzj(com.google.android.gms.internal.zzbdp)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzbdy: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzbdp: void zzj(com.google.android.gms.internal.zzbdp)>[]--><com.google.android.gms.internal.zzbdp: void zzpV()>[]--><com.google.android.gms.internal.zzbdp: void zzpW()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
crashApis:35
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.Network[] getAllNetworks()> is checking!!!
The life time of api is [21,30]
9call roads:
1 Mainhead roads:
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MessageActivity dummyMainMethod_ar_rulosoft_mimanganu_MessageActivity(android.content.Intent)>[]--><ar.rulosoft.mimanganu.MessageActivity: void onCreate(android.os.Bundle)>[]--><ar.rulosoft.mimanganu.utils.AppUpdateUtil: void generateUpdateDialog(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver dummyMainMethod_ar_rulosoft_mimanganu_utils_NetworkUtilsAndReceiver(android.content.Intent)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
$i1 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainActivity dummyMainMethod_ar_rulosoft_mimanganu_MainActivity(android.content.Intent)>[]--><dummyMainClass: ar.rulosoft.mimanganu.MainFragment dummyMainMethod_ar_rulosoft_mimanganu_MainFragment(android.content.Intent,android.app.Activity)>[]--><ar.rulosoft.mimanganu.MainFragment: void onResume()>[]--><ar.rulosoft.mimanganu.MainFragment: void updateAtStartUp(long)>[]--><ar.rulosoft.mimanganu.MainFragment: void startUpdate()>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><ar.rulosoft.mimanganu.services.AutomaticUpdateTask: java.lang.Integer doInBackground(java.lang.Void[])>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnectedNonDestructive(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
8 Packageshead roads:
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment$GetPageTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$9: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.ReaderFragment: void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.adapters.ChapterAdapter$1: void onClick(android.view.View)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$GetPagesTask: void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$5: void onClick(android.content.DialogInterface,int)>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
try
Good road with try: <ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters: java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[])>[[try]]--><ar.rulosoft.mimanganu.services.DownloadPoolService: void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
$i1 >= 21
try
Good road with try: <ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isWifiConnected(android.content.Context)>[]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.content.Context,int)>[[$i1 >= 21]]--><ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver: boolean isConnected(android.net.ConnectivityManager,int)>[[try]]--><android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
One road protect good!
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.util.SizeF: void <init>(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: void <init>(float,float)>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)> to <android.util.SizeF: void <init>(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)> is checking!!!
The life time of api is [21,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><ar.rulosoft.mimanganu.MiMangaNuApplication: void onCreate()>[]--><ar.rulosoft.mimanganu.utils.Util: void createNotificationChannels(android.content.Context)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)> is checking!!!
The life time of api is [18,31]
389call roads:
1 Mainhead roads:
388 Packageshead roads:
containsStatic:true
containsTry:true
389call by main package
-----------------------------------------
crashApis numbers:36
crashApis numbers in main road:6
On Android Version 16 this app may have error api use(at least): 32 and error api roads: 65
On Android Version 17 this app may have error api use(at least): 29 and error api roads: 61
On Android Version 18 this app may have error api use(at least): 29 and error api roads: 61
On Android Version 19 this app may have error api use(at least): 28 and error api roads: 59
On Android Version 20 this app may have error api use(at least): 28 and error api roads: 59
On Android Version 21 this app may have error api use(at least): 8 and error api roads: 10
On Android Version 22 this app may have error api use(at least): 6 and error api roads: 7
On Android Version 23 this app may have error api use(at least): 5 and error api roads: 6
On Android Version 24 this app may have error api use(at least): 3 and error api roads: 3
On Android Version 25 this app may have error api use(at least): 3 and error api roads: 3
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 4 and error api roads: 6
