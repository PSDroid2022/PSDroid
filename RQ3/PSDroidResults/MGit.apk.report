/home/ys/桌面/CompactDroid（复件）/dataset2/MGit.apk
Entry Points[me.sheimi.sgit.MGitDebugApplication, me.sheimi.sgit.activities.BranchChooserActivity, me.sheimi.sgit.activities.explorer.ImportRepositoryActivity, com.manichord.mgit.repolist.RepoListActivity, me.sheimi.sgit.activities.RepoDetailActivity, me.sheimi.sgit.activities.explorer.ExploreFileActivity, me.sheimi.sgit.activities.UserSettingsActivity, me.sheimi.sgit.activities.explorer.PrivateKeyManageActivity, org.acra.sender.SenderService, me.sheimi.sgit.activities.ViewFileActivity, me.sheimi.sgit.activities.explorer.ExploreRootDirActivity, me.sheimi.sgit.activities.CommitDiffActivity, org.acra.dialog.CrashReportDialog]
FllowDroidcallgraph size:4582
Soot started on Mon Jul 11 06:59:11 CST 2022
leftOp<android.databinding.ViewDataBinding: int SDK_INT>
StaticCheck:<com.nostra13.universalimageloader.core.DefaultConfigurationFactory: boolean hasHoneycomb()>$yysi0 < 11
Soot finished on Mon Jul 11 07:00:24 CST 2022
Soot has run for 1 min. 13 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 16
Declared Target Sdk version is: 27
Declared Max Sdk version is: -1
Collected 958 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void highlightView(android.view.View,android.graphics.Rect,int)>[]--><android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>
#1.the call statck between class <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void highlightView(android.view.View,android.graphics.Rect,int)> to <android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getMinute()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setMinute(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: int getMinute()>
One road protect good!
-i0 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: int getMinute(android.widget.TimePicker)>[[-i0 < 23]]--><android.widget.TimePicker: int getMinute()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)> to <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getHour()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: int getHour(android.widget.TimePicker)>[[-i0 < 23]]--><android.widget.TimePicker: int getHour()>
One road protect good!
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setHour(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: int getHour()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)> is checking!!!
The life time of api is [23,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>[]--><org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)> to <org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)>[]--><org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setLinger(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#2.the call statck between class <org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#3.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#4.the call statck between class <org.apache.http.conn.params.ConnManagerParamBean: void setMaxTotalConnections(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#5.the call statck between class <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#6.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setConnectionTimeout(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#7.the call statck between class <org.apache.http.conn.params.ConnConnectionParamBean: void setMaxStatusLineGarbage(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#8.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>
#9.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.activities.delegate.actions.MergeAction$MergeDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <me.sheimi.sgit.activities.delegate.actions.MergeAction$MergeDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameKeyDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#2.the call statck between class <me.sheimi.sgit.dialogs.RenameKeyDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.CheckoutDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#3.the call statck between class <me.sheimi.sgit.dialogs.CheckoutDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.activities.delegate.actions.PullAction$PullDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#4.the call statck between class <me.sheimi.sgit.activities.delegate.actions.PullAction$PullDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RepoFileOperationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#5.the call statck between class <me.sheimi.sgit.dialogs.RepoFileOperationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.activities.delegate.actions.RemoveRemoteAction$RemoveRemoteDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#6.the call statck between class <me.sheimi.sgit.activities.delegate.actions.RemoveRemoteAction$RemoveRemoteDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameBranchDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#7.the call statck between class <me.sheimi.sgit.dialogs.RenameBranchDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.activities.delegate.actions.RebaseAction$RebaseDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#8.the call statck between class <me.sheimi.sgit.activities.delegate.actions.RebaseAction$RebaseDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.activities.delegate.actions.PushAction$PushDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#9.the call statck between class <me.sheimi.sgit.activities.delegate.actions.PushAction$PushDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#10.the call statck between class <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)> to <org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
8call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.dialog.CrashReportDialog dummyMainMethod_org_acra_dialog_CrashReportDialog(android.content.Intent)>[]--><org.acra.dialog.CrashReportDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.ViewFileActivity dummyMainMethod_me_sheimi_sgit_activities_ViewFileActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.ViewFileActivity: void onCreate(android.os.Bundle)>[]--><me.sheimi.sgit.fragments.CommitsFragment: me.sheimi.sgit.fragments.CommitsFragment newInstance(me.sheimi.sgit.database.models.Repo,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.BranchChooserActivity dummyMainMethod_me_sheimi_sgit_activities_BranchChooserActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.BranchChooserActivity: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.RepoDetailActivity dummyMainMethod_me_sheimi_sgit_activities_RepoDetailActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.RepoDetailActivity: void onCreate(android.os.Bundle)>[]--><me.sheimi.sgit.activities.RepoDetailActivity: void createFragments()>[]--><me.sheimi.sgit.fragments.CommitsFragment: me.sheimi.sgit.fragments.CommitsFragment newInstance(me.sheimi.sgit.database.models.Repo,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
$i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.explorer.PrivateKeyManageActivity dummyMainMethod_me_sheimi_sgit_activities_explorer_PrivateKeyManageActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.explorer.PrivateKeyManageActivity: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[[$i0 >= 18]]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.manichord.mgit.repolist.RepoListActivity dummyMainMethod_com_manichord_mgit_repolist_RepoListActivity(android.content.Intent)>[]--><com.manichord.mgit.repolist.RepoListActivity$2: void onClick(android.content.DialogInterface,int)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
7 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.CommitsFragment: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <me.sheimi.sgit.fragments.CommitsFragment: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.CheckoutDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#2.the call statck between class <me.sheimi.sgit.dialogs.CheckoutDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#3.the call statck between class <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.FilesFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#4.the call statck between class <me.sheimi.sgit.fragments.FilesFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameBranchDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#5.the call statck between class <me.sheimi.sgit.dialogs.RenameBranchDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.FilesFragment$3: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#6.the call statck between class <me.sheimi.sgit.fragments.FilesFragment$3: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameKeyDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#7.the call statck between class <me.sheimi.sgit.dialogs.RenameKeyDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:7
crashApisInMain:1
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.StatFs: long getBlockCountLong()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 18
Good road: <org.acra.collector.MemoryInfoCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[]--><org.acra.collector.MemoryInfoCollector: long getTotalInternalMemorySize()>[[-i1 < 18]]--><android.os.StatFs: long getBlockCountLong()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.app.Fragment: android.app.FragmentManager getChildFragmentManager()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <com.facebook.stetho.common.android.FragmentCompatFramework$FragmentAccessorFrameworkJellyBean: android.app.FragmentManager getChildFragmentManager(android.app.Fragment)>[]--><android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>
#1.the call statck between class <com.facebook.stetho.common.android.FragmentCompatFramework$FragmentAccessorFrameworkJellyBean: android.app.FragmentManager getChildFragmentManager(android.app.Fragment)> to <android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#1.the call statck between class <org.apache.http.conn.params.ConnManagerParams: void setTimeout(org.apache.http.params.HttpParams,long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>
#2.the call statck between class <org.apache.http.conn.params.ConnManagerParamBean: void setTimeout(long)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.util.SparseLongArray: long get(int)> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <android.databinding.ViewDataBinding: long getFromList(android.util.SparseLongArray,int)>[]--><android.util.SparseLongArray: long get(int)>
#1.the call statck between class <android.databinding.ViewDataBinding: long getFromList(android.util.SparseLongArray,int)> to <android.util.SparseLongArray: long get(int)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.MediaCodecListCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.MediaCodecListCollector: org.acra.model.Element collectMediaCodecList()>[[i0 >= 21]]--><android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void <init>()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.StrictHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[[]]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()>[]--><org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void <init>()>[]--><org.apache.http.conn.ssl.AbstractVerifier: void <init>()>
#1.the call statck between class <org.apache.http.conn.ssl.SSLSocketFactory: void <clinit>()> to <org.apache.http.conn.ssl.AbstractVerifier: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <me.sheimi.sgit.fragments.CommitsFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <me.sheimi.sgit.fragments.CommitsFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <me.sheimi.sgit.fragments.ViewFileFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#2.the call statck between class <me.sheimi.sgit.fragments.ViewFileFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.os.StatFs: long getBlockSizeLong()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 18
Good road: <org.acra.collector.MemoryInfoCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[]--><org.acra.collector.MemoryInfoCollector: long getAvailableInternalMemorySize()>[[-i1 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
-i1 < 18
Good road: <org.acra.collector.MemoryInfoCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[]--><org.acra.collector.MemoryInfoCollector: long getTotalInternalMemorySize()>[[-i1 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.view.View: void setPaddingRelative(int,int,int,int)> is checking!!!
The life time of api is [17,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 17
Good road: <android.databinding.adapters.ViewBindingAdapter: void setPaddingStart(android.view.View,float)>[[-$i1 < 17]]--><android.view.View: void setPaddingRelative(int,int,int,int)>
One road protect good!
-$i1 < 17
Good road: <android.databinding.adapters.ViewBindingAdapter: void setPaddingEnd(android.view.View,float)>[[-$i1 < 17]]--><android.view.View: void setPaddingRelative(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> is checking!!!
The life time of api is [23,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)> is checking!!!
The life time of api is [23,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractClientConnAdapter: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractClientConnAdapter: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractClientConnAdapter: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.AbstractHttpServerConnection: void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.AbstractHttpServerConnection: void sendResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>[]--><org.apache.http.impl.entity.EntitySerializer: java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
#4.the call statck between class <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)> to <org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractClientConnAdapter: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void receiveResponseEntity(org.apache.http.HttpResponse)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>[]--><org.apache.http.impl.entity.LaxContentLengthStrategy: long determineLength(org.apache.http.HttpMessage)>[]--><org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>
One road protect good!
crashApis:13
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> is checking!!!
The life time of api is [23,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.SingleClientConnManager: void <init>()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
#4.the call statck between class <org.apache.http.impl.conn.SingleClientConnManager: void <init>()> to <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpContext createHttpContext()>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager createClientConnectionManager()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()>[]--><org.apache.http.impl.conn.SchemeRegistryFactory: org.apache.http.conn.scheme.SchemeRegistry createDefault()>[]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
#6.the call statck between class <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>()> to <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectStrategyAdaptor: org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.DefaultRedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.CommitDiffActivity dummyMainMethod_me_sheimi_sgit_activities_CommitDiffActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.CommitDiffActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <me.sheimi.sgit.fragments.CommitsFragment: void onViewStateRestored(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <me.sheimi.sgit.fragments.CommitsFragment: void onViewStateRestored(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:15
crashApisInMain:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.CommitDiffActivity dummyMainMethod_me_sheimi_sgit_activities_CommitDiffActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.CommitDiffActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.ViewFileActivity dummyMainMethod_me_sheimi_sgit_activities_ViewFileActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.ViewFileActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.sheimi.sgit.activities.explorer.PrivateKeyManageActivity dummyMainMethod_me_sheimi_sgit_activities_explorer_PrivateKeyManageActivity(android.content.Intent)>[]--><me.sheimi.sgit.activities.explorer.PrivateKeyManageActivity: void onActivityResult(int,int,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.manichord.mgit.repolist.RepoListActivity dummyMainMethod_com_manichord_mgit_repolist_RepoListActivity(android.content.Intent)>[]--><com.manichord.mgit.repolist.RepoListActivity: void onActivityResult(int,int,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.CheckoutDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <me.sheimi.sgit.dialogs.CheckoutDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameKeyDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#2.the call statck between class <me.sheimi.sgit.dialogs.RenameKeyDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.ViewFileFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#3.the call statck between class <me.sheimi.sgit.fragments.ViewFileFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RepoFileOperationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#4.the call statck between class <me.sheimi.sgit.dialogs.RepoFileOperationDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.CommitsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#5.the call statck between class <me.sheimi.sgit.fragments.CommitsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <org.acra.dialog.CrashReportDialog: void init(android.os.Bundle)>[]--><org.acra.dialog.CrashReportDialog: void buildAndShowDialog(android.os.Bundle)>[]--><org.acra.dialog.CrashReportDialog: android.view.View buildCustomView(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#6.the call statck between class <org.acra.dialog.CrashReportDialog: void init(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.fragments.FilesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#7.the call statck between class <me.sheimi.sgit.fragments.FilesFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.RenameBranchDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#8.the call statck between class <me.sheimi.sgit.dialogs.RenameBranchDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#9.the call statck between class <me.sheimi.sgit.dialogs.EditKeyPasswordDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <org.acra.CrashReportDialog: void buildAndShowDialog(android.os.Bundle)>[]--><org.acra.dialog.CrashReportDialog: void buildAndShowDialog(android.os.Bundle)>[]--><org.acra.dialog.CrashReportDialog: android.view.View buildCustomView(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#10.the call statck between class <org.acra.CrashReportDialog: void buildAndShowDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:16
crashApisInMain:3
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)> is checking!!!
The life time of api is [5,29]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void run()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean tryCacheImageOnDisk()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean downloadImage()>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
One road protect good!
try
Good road with try: <com.nostra13.universalimageloader.core.ImageLoader: android.graphics.Bitmap loadImageSync(java.lang.String)>[]--><com.nostra13.universalimageloader.core.ImageLoader: android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void run()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean tryCacheImageOnDisk()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean downloadImage()>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
One road protect good!
!!!this api will crash on sdk 30 31 
Error road: <me.sheimi.android.avatar.AvatarDownloader: java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
#4.the call statck between class <me.sheimi.android.avatar.AvatarDownloader: java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object)> to <android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.nostra13.universalimageloader.core.ImageLoader: void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void loadImage(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void run()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean tryCacheImageOnDisk()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean downloadImage()>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
One road protect good!
try
Good road with try: <com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageSize)>[]--><com.nostra13.universalimageloader.core.ImageLoader: void displayImage(java.lang.String,com.nostra13.universalimageloader.core.imageaware.ImageAware,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.listener.ImageLoadingListener,com.nostra13.universalimageloader.core.listener.ImageLoadingProgressListener)>[]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: void run()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: android.graphics.Bitmap tryLoadBitmap()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean tryCacheImageOnDisk()>[[try]]--><com.nostra13.universalimageloader.core.LoadAndDisplayImageTask: boolean downloadImage()>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStream(java.lang.String,java.lang.Object)>[]--><com.nostra13.universalimageloader.core.download.BaseImageDownloader: java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
One road protect good!
crashApis:17
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.view.View: java.lang.String toString()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 
Error road: <com.facebook.stetho.inspector.elements.android.ViewDescriptor: void onGetStyles(java.lang.Object,java.lang.String,com.facebook.stetho.inspector.elements.StyleAccumulator)>[]--><com.facebook.stetho.inspector.elements.android.ViewDescriptor: void onGetStyles(android.view.View,java.lang.String,com.facebook.stetho.inspector.elements.StyleAccumulator)>[]--><android.view.View: java.lang.String toString()>
#1.the call statck between class <com.facebook.stetho.inspector.elements.android.ViewDescriptor: void onGetStyles(java.lang.Object,java.lang.String,com.facebook.stetho.inspector.elements.StyleAccumulator)> to <android.view.View: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.view.View: android.view.ViewOverlay getOverlay()> is checking!!!
The life time of api is [18,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void removeHighlight(android.view.View)>[]--><android.view.View: android.view.ViewOverlay getOverlay()>
#1.the call statck between class <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void removeHighlight(android.view.View)> to <android.view.View: android.view.ViewOverlay getOverlay()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 
Error road: <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void highlightView(android.view.View,android.graphics.Rect,int)>[]--><android.view.View: android.view.ViewOverlay getOverlay()>
#2.the call statck between class <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void highlightView(android.view.View,android.graphics.Rect,int)> to <android.view.View: android.view.ViewOverlay getOverlay()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <org.apache.http.conn.ConnectTimeoutException: void <init>()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>()>
#1.the call statck between class <org.apache.http.conn.ConnectionPoolTimeoutException: void <init>()> to <org.apache.http.conn.ConnectTimeoutException: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.util.SparseLongArray: void put(int,long)> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <android.databinding.ViewDataBinding: void setTo(android.util.SparseLongArray,int,long)>[]--><android.util.SparseLongArray: void put(int,long)>
#1.the call statck between class <android.databinding.ViewDataBinding: void setTo(android.util.SparseLongArray,int,long)> to <android.util.SparseLongArray: void put(int,long)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.os.StatFs: long getAvailableBlocksLong()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 18
Good road: <org.acra.collector.MemoryInfoCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[]--><org.acra.collector.MemoryInfoCollector: long getAvailableInternalMemorySize()>[[-i1 < 18]]--><android.os.StatFs: long getAvailableBlocksLong()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.view.Display: void getRealSize(android.graphics.Point)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectRealSize(android.view.Display,org.json.JSONObject)>[[-i0 < 17]]--><android.view.Display: void getRealSize(android.graphics.Point)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>
#2.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)> is checking!!!
The life time of api is [23,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#1.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#2.the call statck between class <org.apache.http.client.params.HttpClientParams: void setAuthenticating(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)>[]--><org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#3.the call statck between class <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#4.the call statck between class <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#5.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#6.the call statck between class <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#7.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setStaleCheckingEnabled(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.cookie.params.CookieSpecParamBean: void setSingleHeader(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#8.the call statck between class <org.apache.http.cookie.params.CookieSpecParamBean: void setSingleHeader(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#9.the call statck between class <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#10.the call statck between class <org.apache.http.client.params.ClientParamBean: void setRejectRelativeRedirect(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket createSocket(org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket createSocket(org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket createSocket(org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket createSocket(org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.ViewDataBinding: android.content.res.ColorStateList getColorStateListFromResource(android.view.View,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)> is checking!!!
The life time of api is [23,31]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>[]--><org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#1.the call statck between class <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#2.the call statck between class <org.apache.http.impl.client.DefaultProxyAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#4.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#5.the call statck between class <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#6.the call statck between class <org.apache.http.params.AbstractHttpParams: double getDoubleParameter(java.lang.String,double)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.DefaultedHttpParams: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.impl.client.ClientParamsStack: java.lang.Object getParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#7.the call statck between class <org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.HttpResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#9.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.AbstractHttpParams: int getIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>
#10.the call statck between class <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams copy()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>
#1.the call statck between class <org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams copy()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams copy()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)> is checking!!!
The life time of api is [23,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.conn.ssl.AbstractVerifier: boolean verify(java.lang.String,javax.net.ssl.SSLSession)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.security.cert.X509Certificate)>[]--><org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.view.View: int getPaddingEnd()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 17
Good road: <android.databinding.adapters.ViewBindingAdapter: void setPaddingStart(android.view.View,float)>[[-$i1 < 17]]--><android.view.View: int getPaddingEnd()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.util.SparseLongArray: int size()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <android.databinding.ViewDataBinding: void setTo(android.util.SparseLongArray,int,long)>[]--><android.util.SparseLongArray: int size()>
#1.the call statck between class <android.databinding.ViewDataBinding: void setTo(android.util.SparseLongArray,int,long)> to <android.util.SparseLongArray: int size()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.view.Display: int getFlags()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectFlags(android.view.Display,org.json.JSONObject)>[[-i0 < 17]]--><android.view.Display: int getFlags()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.content.Context: android.graphics.drawable.Drawable getDrawable(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <android.databinding.ViewDataBinding: android.graphics.drawable.Drawable getDrawableFromResource(android.view.View,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.view.Display: boolean isValid()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectIsValid(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: boolean isValid()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.text.InputFilter.LengthFilter: int getMax()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i2 < 21
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setMaxLength(android.widget.TextView,int)>[[-i2 < 21]]--><android.text.InputFilter.LengthFilter: int getMax()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.LayeredSchemeSocketFactoryAdaptor: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean)>[]--><org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.view.Display: java.lang.String getName()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectName(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: java.lang.String getName()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: int countDots(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()>[]--><org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
#1.the call statck between class <org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams createHttpParams()> to <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)>[]--><org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>
#2.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setTcpNoDelay(boolean)> to <org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.view.View: boolean isAttachedToWindow()> is checking!!!
The life time of api is [19,31]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
-$i0 < 19
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
-$i0 < 19
Good road: <com.facebook.stetho.common.android.HandlerUtil$2: java.lang.Void onRun()>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
-$i0 < 19
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <me.sheimi.sgit.fragments.ViewFileFragment: void onActivityCreated(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <me.sheimi.sgit.fragments.ViewFileFragment: void onActivityCreated(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.ViewDataBinding: int getColorFromResource(android.view.View,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void removeHighlight(android.view.View)>[]--><android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>
#1.the call statck between class <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2: void removeHighlight(android.view.View)> to <android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()> is checking!!!
The life time of api is [17,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
i0 >= 17
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setDrawableEnd(android.widget.TextView,android.graphics.drawable.Drawable)>[[i0 >= 17]]--><android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
One road protect good!
i0 >= 17
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setDrawableStart(android.widget.TextView,android.graphics.drawable.Drawable)>[[i0 >= 17]]--><android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
#5.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>
One road protect good!
crashApis:32
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.view.Display: void getRealMetrics(android.util.DisplayMetrics)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectRealMetrics(android.view.Display,org.json.JSONObject)>[[-i0 < 17]]--><android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setHour(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setHour(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: void setHour(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>
#1.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSoTimeout(int)> to <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.provider.Settings.Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<org.acra.collector.SettingsCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.SettingsCollector: org.acra.model.Element collectGlobalSettings()>[[try], [$i0 >= 17]]
###Multi invoking in one method, need manual check!!!<org.acra.collector.SettingsCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.SettingsCollector: org.acra.model.Element collectGlobalSettings()>[[try]][[$i0 >= 17]]
try
Good road with try: <org.acra.collector.SettingsCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.SettingsCollector: org.acra.model.Element collectGlobalSettings()>[[try], [$i0 >= 17]]--><android.provider.Settings.Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.media.MediaCodecList: void <init>(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.MediaCodecListCollector: org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder)>[[try]]--><org.acra.collector.MediaCodecListCollector: org.acra.model.Element collectMediaCodecList()>[[i0 >= 21]]--><android.media.MediaCodecList: void <init>(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [17,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
i0 >= 17
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setDrawableEnd(android.widget.TextView,android.graphics.drawable.Drawable)>[[i0 >= 17]]--><android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
i0 >= 17
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setDrawableStart(android.widget.TextView,android.graphics.drawable.Drawable)>[[i0 >= 17]]--><android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)> is checking!!!
The life time of api is [23,31]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2965SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
#5.the call statck between class <org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String)> to <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.client.protocol.RequestAddCookies: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.cookie.RFC2965SpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.RequestExpectContinue: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpProtocolParams: boolean useExpectContinue(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.RequestExpectContinue: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpProtocolParams: boolean useExpectContinue(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.protocol.HttpService: void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.protocol.ImmutableHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.BasicHttpProcessor: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.protocol.RequestExpectContinue: void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.params.HttpProtocolParams: boolean useExpectContinue(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
#8.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>
#1.the call statck between class <org.apache.http.conn.ssl.StrictHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])>[]--><org.apache.http.conn.ssl.AbstractVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean)>[]--><org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>
#2.the call statck between class <org.apache.http.conn.ssl.BrowserCompatHostnameVerifier: void verify(java.lang.String,java.lang.String[],java.lang.String[])> to <org.apache.http.conn.ssl.AbstractVerifier: boolean acceptableCountryWildcard(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.DefaultedHttpParams: boolean removeParameter(java.lang.String)>[]--><org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>
#1.the call statck between class <org.apache.http.params.DefaultedHttpParams: boolean removeParameter(java.lang.String)> to <org.apache.http.params.HttpParams: boolean removeParameter(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)> is checking!!!
The life time of api is [23,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.conn.tsccm.AbstractConnPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>[[try]]--><org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> is checking!!!
The life time of api is [23,31]
46call roads:
0 Mainhead roads:
46 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#1.the call statck between class <org.apache.http.client.params.HttpClientParams: void setRedirecting(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)>[]--><org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#2.the call statck between class <org.apache.http.params.HttpProtocolParamBean: void setUseExpectContinue(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#3.the call statck between class <org.apache.http.client.params.ClientParamBean: void setAllowCircularRedirects(boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#4.the call statck between class <org.apache.http.conn.params.ConnRouteParamBean: void setForcedRoute(org.apache.http.conn.routing.HttpRoute)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#5.the call statck between class <org.apache.http.params.HttpConnectionParams: void setSoReuseaddr(org.apache.http.params.HttpParams,boolean)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)>[]--><org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#6.the call statck between class <org.apache.http.auth.params.AuthParamBean: void setCredentialCharset(java.lang.String)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#7.the call statck between class <org.apache.http.client.params.ClientParamBean: void setMaxRedirects(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#8.the call statck between class <org.apache.http.client.params.ClientParamBean: void setConnectionManagerFactoryClassName(java.lang.String)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)>[]--><org.apache.http.params.DefaultedHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#9.the call statck between class <org.apache.http.conn.params.ConnRouteParamBean: void setDefaultProxy(org.apache.http.HttpHost)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)>[]--><org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>[]--><org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#10.the call statck between class <org.apache.http.params.HttpConnectionParamBean: void setSocketBufferSize(int)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.SocketOutputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractSessionOutputBuffer: void init(java.io.OutputStream,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#1.the call statck between class <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>[]--><org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams)>[]--><org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#2.the call statck between class <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: org.apache.http.io.SessionOutputBuffer createHttpDataTransmitter(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.SocketOutputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractSessionOutputBuffer: void init(java.io.OutputStream,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#5.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.SocketInputBuffer: void <init>(java.net.Socket,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractSessionInputBuffer: void init(java.io.InputStream,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#6.the call statck between class <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#7.the call statck between class <org.apache.http.impl.conn.DefaultClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.client.DefaultRequestDirector: void <init>(org.apache.commons.logging.Log,org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.HttpResponseParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.io.AbstractMessageParser: void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>
#10.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>
#6.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setMinute(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setMinute(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: void setMinute(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
#6.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
#3.the call statck between class <org.apache.http.impl.DefaultHttpServerConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
#5.the call statck between class <org.apache.http.impl.DefaultHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.impl.conn.DefaultClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.SocketHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>
One road protect good!
crashApis:41
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.view.View: int getPaddingStart()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 17
Good road: <android.databinding.adapters.ViewBindingAdapter: void setPaddingEnd(android.view.View,float)>[[-$i1 < 17]]--><android.view.View: int getPaddingStart()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try]][[$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><me.sheimi.sgit.MGitDebugApplication: void onCreate()>[]--><me.sheimi.sgit.SGitApplication: void onCreate()>[[try]]--><me.sheimi.android.utils.SecurePrefsHelper: void <init>(android.content.Context)>[[try], [$i0 >= 18]]--><me.sheimi.android.utils.SecurePrefsHelper: void generateKeyPair(android.content.Context)>[]--><android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>[]--><org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
try
Good road with try: <org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>[]--><org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>[[try]]--><org.apache.http.impl.conn.AbstractPooledConnAdapter: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.AbstractPoolEntry: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[]--><org.apache.http.impl.conn.DefaultClientConnectionOperator: void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
crashApis numbers:41
crashApis numbers in main road:3
On Android Version 16 this app may have error api use(at least): 40 and error api roads: 147
On Android Version 17 this app may have error api use(at least): 38 and error api roads: 145
On Android Version 18 this app may have error api use(at least): 32 and error api roads: 139
On Android Version 19 this app may have error api use(at least): 32 and error api roads: 139
On Android Version 20 this app may have error api use(at least): 32 and error api roads: 139
On Android Version 21 this app may have error api use(at least): 29 and error api roads: 102
On Android Version 22 this app may have error api use(at least): 26 and error api roads: 97
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 31 this app may have error api use(at least): 1 and error api roads: 1
