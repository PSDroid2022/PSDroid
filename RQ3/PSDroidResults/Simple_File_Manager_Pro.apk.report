/home/ys/桌面/CompactDroid（复件）/dataset2/Simple_File_Manager_Pro.apk
Entry Points[com.simplemobiletools.filemanager.activities.MainActivity, com.simplemobiletools.filemanager.activities.AboutActivity, com.simplemobiletools.filemanager.activities.LicenseActivity, com.simplemobiletools.filemanager.activities.SettingsActivity]
FllowDroidcallgraph size:402
Soot started on Mon Jul 11 12:12:56 CST 2022
StaticCheck:<com.bumptech.glide.load.resource.bitmap.Downsampler: boolean shouldUsePool(java.io.InputStream)>19 > $yysi0
StaticCheck:<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>$yysi0 < 19
Soot finished on Mon Jul 11 12:13:20 CST 2022
Soot has run for 0 min. 24 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 19
Declared Target Sdk version is: 23
Declared Max Sdk version is: -1
Collected 413 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 >= 23
Good road: <butterknife.internal.Utils: int getColor(android.content.res.Resources,android.content.res.Resources$Theme,int)>[[$i1 >= 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 >= 23
Good road: <butterknife.internal.Utils: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,android.content.res.Resources$Theme,int)>[[$i1 >= 23]]--><android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
$i0 >= 11
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[[$i0 >= 11]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#2.the call statck between class <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#3.the call statck between class <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#4.the call statck between class <com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.ListPreloader: void onScroll(android.widget.AbsListView,int,int,int)>[]--><com.bumptech.glide.ListPreloader: void preload(int,boolean)>[]--><com.bumptech.glide.ListPreloader: void preload(int,int)>[]--><com.bumptech.glide.ListPreloader: void preloadAdapterPosition(java.util.List,int,boolean)>[]--><com.bumptech.glide.ListPreloader: void preloadItem(java.lang.Object,int,int)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#5.the call statck between class <com.bumptech.glide.ListPreloader: void onScroll(android.widget.AbsListView,int,int,int)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#6.the call statck between class <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#8.the call statck between class <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifDrawable: boolean setVisible(boolean,boolean)>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void startRunning()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#9.the call statck between class <com.bumptech.glide.load.resource.gif.GifDrawable: boolean setVisible(boolean,boolean)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifDrawable: void start()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void startRunning()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#10.the call statck between class <com.bumptech.glide.load.resource.gif.GifDrawable: void start()> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
19call roads:
0 Mainhead roads:
19 Packageshead roads:
$i0 >= 11
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[[$i0 >= 11]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#2.the call statck between class <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#3.the call statck between class <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#4.the call statck between class <com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.ListPreloader: void onScroll(android.widget.AbsListView,int,int,int)>[]--><com.bumptech.glide.ListPreloader: void preload(int,boolean)>[]--><com.bumptech.glide.ListPreloader: void preload(int,int)>[]--><com.bumptech.glide.ListPreloader: void preloadAdapterPosition(java.util.List,int,boolean)>[]--><com.bumptech.glide.ListPreloader: void preloadItem(java.lang.Object,int,int)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#5.the call statck between class <com.bumptech.glide.ListPreloader: void onScroll(android.widget.AbsListView,int,int,int)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#6.the call statck between class <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.DrawableRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#8.the call statck between class <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifDrawable: boolean setVisible(boolean,boolean)>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void startRunning()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#9.the call statck between class <com.bumptech.glide.load.resource.gif.GifDrawable: boolean setVisible(boolean,boolean)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.load.resource.gif.GifDrawable: void start()>[]--><com.bumptech.glide.load.resource.gif.GifDrawable: void startRunning()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#10.the call statck between class <com.bumptech.glide.load.resource.gif.GifDrawable: void start()> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
4call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.simplemobiletools.filemanager.activities.MainActivity dummyMainMethod_com_simplemobiletools_filemanager_activities_MainActivity(android.content.Intent)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void onBackPressed()>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.activities.MainActivity$breadcrumbClicked$1: void onPick(java.lang.String)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void changePath(java.lang.String)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <com.simplemobiletools.filemanager.activities.MainActivity$breadcrumbClicked$1: void onPick(java.lang.String)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.activities.MainActivity: void breadcrumbClicked(int)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#2.the call statck between class <com.simplemobiletools.filemanager.activities.MainActivity: void breadcrumbClicked(int)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.activities.MainActivity: void itemClicked(com.simplemobiletools.filepicker.models.FileDirItem)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#3.the call statck between class <com.simplemobiletools.filemanager.activities.MainActivity: void itemClicked(com.simplemobiletools.filepicker.models.FileDirItem)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
crashApisInMain:1
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 >= 21
Good road: <butterknife.internal.Utils: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,android.content.res.Resources$Theme,int)>[[$i1 >= 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
33call roads:
0 Mainhead roads:
33 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamResourceLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.CenterCrop: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
$i0 >= 11
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[[$i0 >= 11]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(android.content.Context,com.bumptech.glide.load.DecodeFormat)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FitCenter: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Integer)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromResource()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromString()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromString()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Integer)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromResource()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifResourceDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.io.File)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromFile()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context,com.bumptech.glide.load.DecodeFormat)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.net.URL)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromUrl()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(byte[],java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(byte[])>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromBytes()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromMediaStore()>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Object)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamStringLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context,com.bumptech.glide.load.model.ModelCache)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void <init>(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamUriLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamFileLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Object,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Object,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(android.net.Uri)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromUri()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest 'from'(java.lang.Class)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Object,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Object,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
$i0 >= 17
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Fragment)>[[$i0 >= 17]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
34call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: void access$000(com.simplemobiletools.filemanager.fragments.ItemsFragment)>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: void access$000(com.simplemobiletools.filemanager.fragments.ItemsFragment)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onRefresh()>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#2.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onRefresh()> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#3.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onResume()>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#4.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: void onResume()> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: void copySucceeded(java.io.File)>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#5.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: void copySucceeded(java.io.File)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.simplemobiletools.filemanager.fragments.ItemsFragment: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void prepareForDeleting()>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void notifyDeletion(int)>[]--><com.simplemobiletools.filemanager.fragments.ItemsFragment: void fillItems()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#6.the call statck between class <com.simplemobiletools.filemanager.fragments.ItemsFragment: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
33call roads:
0 Mainhead roads:
33 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamResourceLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.CenterCrop: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
$i0 >= 11
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[[$i0 >= 11]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(android.content.Context,com.bumptech.glide.load.DecodeFormat)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FitCenter: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Integer)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromResource()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.simplemobiletools.filepicker.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromString()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromString()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.simplemobiletools.filemanager.adapters.ItemsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Integer)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromResource()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifResourceDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.io.File)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromFile()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context,com.bumptech.glide.load.DecodeFormat)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.net.URL)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromUrl()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(byte[],java.lang.String)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(byte[])>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromBytes()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromMediaStore()>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(java.lang.Object)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamStringLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context,com.bumptech.glide.load.model.ModelCache)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.transcode.BitmapToGlideDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void <init>(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamUriLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.StreamFileLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Object,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Object,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest load(android.net.Uri)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest fromUri()>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest 'from'(java.lang.Class)>[]--><com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Object,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Object,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
$i0 >= 17
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Fragment)>[[$i0 >= 17]]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode)>[]--><com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
containsStatic:false
containsTry:true
34call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.os.Environment: boolean isExternalStorageRemovable(java.io.File)> is checking!!!
The life time of api is [21,31]
10call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.simplemobiletools.filemanager.activities.MainActivity dummyMainMethod_com_simplemobiletools_filemanager_activities_MainActivity(android.content.Intent)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void onBackPressed()>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.StoragePickerDialog: void <init>(android.app.Activity,java.lang.String,com.simplemobiletools.filepicker.dialogs.StoragePickerDialog$OnStoragePickerListener)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.StoragePickerDialog: void <init>(android.app.Activity,java.lang.String,com.simplemobiletools.filepicker.dialogs.StoragePickerDialog$OnStoragePickerListener)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void access$updateItems(com.simplemobiletools.filepicker.dialogs.FilePickerDialog)>[]--><com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void updateItems()>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filemanager.activities.MainActivity$breadcrumbClicked$1: void onPick(java.lang.String)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void changePath(java.lang.String)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filemanager.activities.MainActivity: void breadcrumbClicked(int)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.StoragePickerDialog: void access$sdPicked(com.simplemobiletools.filepicker.dialogs.StoragePickerDialog)>[]--><com.simplemobiletools.filepicker.dialogs.StoragePickerDialog: void sdPicked()>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filemanager.dialogs.RenameItemDialog$$special$$inlined$apply$lambda$1: void onClick(android.view.View)>[]--><com.simplemobiletools.filemanager.Utils: android.support.v4.provider.DocumentFile getFileDocument(android.content.Context,java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filemanager.dialogs.RenameItemDialog$$special$$inlined$apply$lambda$1: void onClick(android.view.View)>[]--><com.simplemobiletools.filemanager.Utils: boolean needsStupidWritePermissions(android.content.Context,java.lang.String)>[]--><com.simplemobiletools.filemanager.Utils: boolean isPathOnSD(android.content.Context,java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void breadcrumbClicked(int)>[]--><com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void updateItems()>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void <init>(android.app.Activity,java.lang.String,boolean,boolean,boolean,com.simplemobiletools.filepicker.dialogs.FilePickerDialog$OnFilePickerListener)>[]--><com.simplemobiletools.filepicker.dialogs.FilePickerDialog: void updateItems()>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]
###Multi invoking in one method, need manual check!!!--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21]][[try]]
$i0 >= 21
try
Good road with try: <com.simplemobiletools.filemanager.activities.MainActivity: void itemClicked(com.simplemobiletools.filepicker.models.FileDirItem)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void openPath(java.lang.String)>[]--><com.simplemobiletools.filepicker.views.Breadcrumbs: void setBreadcrumb(java.lang.String)>[]--><com.simplemobiletools.filepicker.extensions.StringKt: java.lang.String getBasePath(java.lang.String,android.content.Context)>[]--><com.simplemobiletools.filepicker.extensions.ContextKt: java.lang.String getSDCardPath(android.content.Context)>[[$i0 >= 21], [try]]--><android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
One road protect good!
containsStatic:false
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.simplemobiletools.filemanager.activities.MainActivity dummyMainMethod_com_simplemobiletools_filemanager_activities_MainActivity(android.content.Intent)>[]--><com.simplemobiletools.filemanager.activities.MainActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[[]]--><android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void onRequestPermissionsResult(int,java.lang.String[],int[])>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:5
crashApisInMain:2
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
crashApis numbers:5
crashApis numbers in main road:2
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 3 and error api roads: 11
On Android Version 20 this app may have error api use(at least): 3 and error api roads: 11
On Android Version 21 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 22 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 2 and error api roads: 16
