/home/ys/桌面/CompactDroid（复件）/dataset2/MBE_Style.apk
Entry Points[me.iacn.mbestyle.ui.activity.IconViewActivity, me.iacn.mbestyle.ui.activity.MainActivity, me.iacn.mbestyle.ui.activity.WallpaperActivity, me.iacn.mbestyle.ui.activity.LicenseActivity]
FllowDroidcallgraph size:1130
Soot started on Mon Jul 11 06:56:09 CST 2022
StaticCheck:<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayBarcode(android.content.Context)>$yysi0 < 24
StaticCheck:<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayScan(android.content.Context)>$yysi0 < 24
Soot finished on Mon Jul 11 06:56:56 CST 2022
Soot has run for 0 min. 46 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 17
Declared Target Sdk version is: 28
Declared Max Sdk version is: -1
Collected 550 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getAlpha()> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 17 18 
Error road: <com.bumptech.glide.request.target.FixedSizeDrawable: int getAlpha()>[]--><android.graphics.drawable.Drawable: int getAlpha()>
#1.the call statck between class <com.bumptech.glide.request.target.FixedSizeDrawable: int getAlpha()> to <android.graphics.drawable.Drawable: int getAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)> is checking!!!
The life time of api is [19,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 17 18 
Error road: <com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>[]--><android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>
#1.the call statck between class <com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)> to <android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 17 18 
Error road: <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>[]--><android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>
#2.the call statck between class <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)> to <android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.graphics.Bitmap: void setPremultiplied(boolean)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void normalize(android.graphics.Bitmap)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void maybeSetPreMultiplied(android.graphics.Bitmap)>[[-$i0 < 19]]--><android.graphics.Bitmap: void setPremultiplied(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.graphics.Bitmap: int getAllocationByteCount()> is checking!!!
The life time of api is [19,31]
2206call roads:
1 Mainhead roads:
2205 Packageshead roads:
Roads number exceed, exit!2205
#################################################
N 4 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 17 18 19 20 
Error road: <me.iacn.mbestyle.ui.fragment.IconShowFragment: void initData()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <me.iacn.mbestyle.ui.fragment.IconShowFragment: void initData()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
2194call roads:
1 Mainhead roads:
2193 Packageshead roads:
Roads number exceed, exit!2193
#################################################
N 6 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
2194call roads:
1 Mainhead roads:
2193 Packageshead roads:
Roads number exceed, exit!2193
#################################################
N 7 Potential Issue API: SDKCheck of <android.app.ActivityManager: boolean isLowRamDevice()> is checking!!!
The life time of api is [19,31]
19call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.iacn.mbestyle.ui.activity.WallpaperActivity dummyMainMethod_me_iacn_mbestyle_ui_activity_WallpaperActivity(android.content.Intent)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity: void onCreate(android.os.Bundle)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Activity)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Activity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
18 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$6: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <me.iacn.mbestyle.ui.fragment.ApplyFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: void <init>(android.content.Context,com.bumptech.glide.load.ResourceDecoder)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.MultiTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$1: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <me.iacn.mbestyle.ui.fragment.AboutFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$3: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0]][[$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions,float,float,int,float,float)>[[-$z0 == 0], [$yysi0 < 19]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
containsStatic:true
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setHotspot(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 17 18 19 20 
Error road: <com.wang.avi.AVLoadingIndicatorView: void drawableHotspotChanged(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#1.the call statck between class <com.wang.avi.AVLoadingIndicatorView: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.service.quicksettings.TileService: void startActivityAndCollapse(android.content.Intent)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayBarcode(android.content.Context)>[[-$i0 < 24], [try]]
###Multi invoking in one method, need manual check!!!<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayBarcode(android.content.Context)>[[-$i0 < 24]][[try]]
-$i0 < 24
try
Good road with try: <moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayBarcode(android.content.Context)>[[-$i0 < 24], [try]]--><android.service.quicksettings.TileService: void startActivityAndCollapse(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayScan(android.content.Context)>[[-$i0 < 24], [try]]
###Multi invoking in one method, need manual check!!!<moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayScan(android.content.Context)>[[-$i0 < 24]][[try]]
-$i0 < 24
try
Good road with try: <moe.feng.alipay.zerosdk.AlipayZeroSdk: boolean openAlipayScan(android.content.Context)>[[-$i0 < 24], [try]]--><android.service.quicksettings.TileService: void startActivityAndCollapse(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)> is checking!!!
The life time of api is [19,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <me.iacn.mbestyle.ui.adapter.ApplyHolder: void onClick(android.view.View)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity$1: void onItemClick(android.view.View,int)>[[try]]--><android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.adapter.RequestHolder: void onClick(android.view.View)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity$1: void onItemClick(android.view.View,int)>[[try]]--><android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.adapter.IconHolder: void onClick(android.view.View)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity$1: void onItemClick(android.view.View,int)>[[try]]--><android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.adapter.WallpaperHolder: void onClick(android.view.View)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity$1: void onItemClick(android.view.View,int)>[[try]]--><android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.view.View: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 17 18 19 20 
Error road: <com.wang.avi.AVLoadingIndicatorView: void drawableHotspotChanged(float,float)>[]--><android.view.View: void drawableHotspotChanged(float,float)>
#1.the call statck between class <com.wang.avi.AVLoadingIndicatorView: void drawableHotspotChanged(float,float)> to <android.view.View: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
19call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.iacn.mbestyle.ui.activity.WallpaperActivity dummyMainMethod_me_iacn_mbestyle_ui_activity_WallpaperActivity(android.content.Intent)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity: void onCreate(android.os.Bundle)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Activity)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Activity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
18 Packageshead roads:
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$6: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.fragment.ApplyFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: void <init>(android.content.Context,com.bumptech.glide.load.ResourceDecoder)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.MultiTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$1: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.fragment.AboutFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$3: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.iacn.mbestyle.ui.activity.MainActivity dummyMainMethod_me_iacn_mbestyle_ui_activity_MainActivity(android.content.Intent)>[]--><me.iacn.mbestyle.ui.activity.MainActivity: void onCreate(android.os.Bundle)>[]--><me.iacn.mbestyle.ui.activity.MainActivity: void setBottomIconOriColor(android.support.design.widget.BottomNavigationView)>[[try]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
i1 < 17
Good road: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: android.app.Fragment findFragment(android.view.View,android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: void findAllFragmentsWithViews(android.app.FragmentManager,android.support.v4.util.ArrayMap)>[[i1 < 17]]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 17 18 19 20 
Error road: <me.iacn.mbestyle.ui.fragment.IconFragment: void initData()>[]--><me.iacn.mbestyle.ui.fragment.IconFragment: me.iacn.mbestyle.ui.fragment.IconShowFragment makeIconShowFragment(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#2.the call statck between class <me.iacn.mbestyle.ui.fragment.IconFragment: void initData()> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 17 18 19 20 
Error road: <com.wang.avi.AVLoadingIndicatorView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <com.wang.avi.AVLoadingIndicatorView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
19call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: me.iacn.mbestyle.ui.activity.WallpaperActivity dummyMainMethod_me_iacn_mbestyle_ui_activity_WallpaperActivity(android.content.Intent)>[]--><me.iacn.mbestyle.ui.activity.WallpaperActivity: void onCreate(android.os.Bundle)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Activity)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Activity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
18 Packageshead roads:
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.view.View)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.view.View)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$6: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.fragment.ApplyFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: void <init>(android.content.Context,com.bumptech.glide.load.ResourceDecoder)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.MultiTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$1: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.ui.fragment.AboutFragment: void initData()>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <me.iacn.mbestyle.presenter.IconShowPresenter$3: void accept(java.util.List)>[]--><me.iacn.mbestyle.ui.fragment.IconShowFragment: void onLoadData(java.util.List)>[]--><me.iacn.mbestyle.util.GlideUtils: me.iacn.mbestyle.util.GlideUtils 'with'(android.app.Fragment)>[]--><me.iacn.mbestyle.util.GlideUtils: void <init>(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
crashApis numbers:7
crashApis numbers in main road:0
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 7 and error api roads: 8
On Android Version 18 this app may have error api use(at least): 7 and error api roads: 8
On Android Version 19 this app may have error api use(at least): 5 and error api roads: 5
On Android Version 20 this app may have error api use(at least): 5 and error api roads: 5
On Android Version 21 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 22 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 0 and error api roads: 0
