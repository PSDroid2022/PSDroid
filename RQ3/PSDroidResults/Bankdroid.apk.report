/home/ys/桌面/CompactDroid（复件）/dataset2/Bankdroid.apk
Entry Points[com.liato.bankdroid.PairApplicationsActivity, com.liato.bankdroid.appwidget.WidgetConfigureActivity, com.liato.bankdroid.liveview.LiveViewService, com.liato.bankdroid.AboutActivity, com.liato.bankdroid.TransactionsActivity, com.liato.bankdroid.MainActivity, com.liato.bankdroid.liveview.PluginReceiver, com.liato.bankdroid.StartupReceiver, com.liato.bankdroid.appwidget.AutoRefreshService, com.liato.bankdroid.SettingsActivity, com.liato.bankdroid.appwidget.BankdroidWidgetProvider_4x1, com.liato.bankdroid.WebViewActivity, com.liato.bankdroid.provider.BankTransactionsProvider, com.liato.bankdroid.lockpattern.ConfirmLockPattern, com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService, com.liato.bankdroid.BankdroidApplication, com.liato.bankdroid.BankEditActivity, com.liato.bankdroid.lockpattern.ChooseLockPatternExample, com.liato.bankdroid.appwidget.BankdroidWidgetProvider_2x1, com.liato.bankdroid.lockpattern.ChooseLockPattern, com.liato.bankdroid.lockpattern.ChooseLockPatternTutorial]
FllowDroidcallgraph size:26193
Soot started on Mon Jul 11 01:33:43 CST 2022
Soot finished on Mon Jul 11 01:34:22 CST 2022
Soot has run for 0 min. 38 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 19
Declared Target Sdk version is: 22
Declared Max Sdk version is: -1
Collected 737 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.net.wifi.WifiInfo: java.lang.String getMacAddress()> is checking!!!
The life time of api is [1,30]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$700(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
One road protect good!
try
Good road with try: <com.crashlytics.android.beta.Beta: java.lang.Object doInBackground()>[]--><com.crashlytics.android.beta.Beta: java.lang.Boolean doInBackground()>[]--><com.crashlytics.android.beta.Beta: void checkForUpdates(android.content.Context,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties)>[]--><com.crashlytics.android.beta.CheckForUpdatesController: void checkForUpdates()>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>[]--><io.fabric.sdk.android.services.common.IdManager: void addDeviceIdentifiersTo(org.json.JSONObject)>[]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.Onboarding: java.lang.Object doInBackground()>[]--><io.fabric.sdk.android.Onboarding: java.lang.Boolean doInBackground()>[[try]]--><io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings initialize(io.fabric.sdk.android.Kit,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.network.HttpRequestFactory,java.lang.String,java.lang.String,java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>[]--><io.fabric.sdk.android.services.common.IdManager: void addDeviceIdentifiersTo(org.json.JSONObject)>[]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
One road protect good!
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$200(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler,java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void handleUncaughtException(java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
One road protect good!
try
Good road with try: <com.crashlytics.android.answers.Answers: java.lang.Object doInBackground()>[]--><com.crashlytics.android.answers.Answers: java.lang.Boolean doInBackground()>[]--><com.crashlytics.android.answers.Answers: void initializeSessionAnalytics(android.content.Context)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)> is checking!!!
The life time of api is [23,31]
13call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider$WidgetService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: void update()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
12 Packageshead roads:
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void update()>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Handelsbanken: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.BankEditActivity$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.avanza.Avanza: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: void update()>[]--><com.liato.bankdroid.banking.banks.seb.SEB: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void updateTransactions(com.liato.bankdroid.banking.Account,eu.nullbyte.android.urllib.Urllib)>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.sebkort.SEBKortBase: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Steam: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>
One road protect good!
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ChooseLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ChooseLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ChooseLockPattern: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ConfirmLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ConfirmLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ConfirmLockPattern: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:1
crashApisInMain:1
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
#1.the call statck between class <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.crashlytics.android.Crashlytics: boolean onPreExecute()>[]--><com.crashlytics.android.Crashlytics: boolean onPreExecute(android.content.Context)>[[try]]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
crashApis:2
crashApisInMain:2
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: int onStartCommand(android.content.Intent,int,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:3
crashApisInMain:3
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.PairApplicationsActivity dummyMainMethod_com_liato_bankdroid_PairApplicationsActivity(android.content.Intent)>[]--><com.liato.bankdroid.PairApplicationsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:4
crashApisInMain:4
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.BankEditActivity dummyMainMethod_com_liato_bankdroid_BankEditActivity(android.content.Intent)>[]--><com.liato.bankdroid.BankEditActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String,long)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String,long)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: long getLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:5
crashApisInMain:5
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ChooseLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ChooseLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ChooseLockPattern: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:6
crashApisInMain:6
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.MainActivity dummyMainMethod_com_liato_bankdroid_MainActivity(android.content.Intent)>[]--><com.liato.bankdroid.MainActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.TransactionsActivity dummyMainMethod_com_liato_bankdroid_TransactionsActivity(android.content.Intent)>[]--><com.liato.bankdroid.TransactionsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: long getLong(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:7
crashApisInMain:7
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()> is checking!!!
The life time of api is [23,31]
13call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider$WidgetService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: void update()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
12 Packageshead roads:
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void update()>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Handelsbanken: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.BankEditActivity$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.avanza.Avanza: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: void update()>[]--><com.liato.bankdroid.banking.banks.seb.SEB: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void updateTransactions(com.liato.bankdroid.banking.Account,eu.nullbyte.android.urllib.Urllib)>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.sebkort.SEBKortBase: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Steam: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
try
Good road with try: <com.liato.bankdroid.DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
One road protect good!
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
8call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.liveview.PluginReceiver dummyMainMethod_com_liato_bankdroid_liveview_PluginReceiver(android.content.Intent)>[]--><com.liato.bankdroid.liveview.PluginReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.MainActivity dummyMainMethod_com_liato_bankdroid_MainActivity(android.content.Intent)>[]--><com.liato.bankdroid.MainActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.TransactionsActivity dummyMainMethod_com_liato_bankdroid_TransactionsActivity(android.content.Intent)>[]--><com.liato.bankdroid.TransactionsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.liveview.LiveViewService dummyMainMethod_com_liato_bankdroid_liveview_LiveViewService(android.content.Intent)>[]--><com.liato.bankdroid.liveview.LiveViewService: void onStart(android.content.Intent,int)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ChooseLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ChooseLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ChooseLockPattern: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.PairApplicationsActivity dummyMainMethod_com_liato_bankdroid_PairApplicationsActivity(android.content.Intent)>[]--><com.liato.bankdroid.PairApplicationsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
7 Packageshead roads:
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$700(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionApp(java.lang.String)>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: int getSessionAppOrgSize()>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.crashlytics.android.beta.Beta: java.lang.Object doInBackground()>[]--><com.crashlytics.android.beta.Beta: java.lang.Boolean doInBackground()>[]--><com.crashlytics.android.beta.Beta: void checkForUpdates(android.content.Context,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties)>[]--><com.crashlytics.android.beta.CheckForUpdatesController: void checkForUpdates()>[[try]]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.crashlytics.android.ReportUploader$Worker: void attemptUploadWithRetry()>[]--><com.crashlytics.android.ReportUploader: boolean forceUpload(com.crashlytics.android.Report)>[[try]]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><com.crashlytics.android.ReportUploader: boolean forceUpload(com.crashlytics.android.Report)>[[try]]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><com.crashlytics.android.ReportUploader: boolean forceUpload(com.crashlytics.android.Report)>[[try]]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.answers.SessionAnalyticsManager$2: void run()>[[try]]--><com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData,java.lang.String)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.answers.SessionAnalyticsManager$2: void run()>[[try]]--><com.crashlytics.android.answers.EnabledSessionAnalyticsManagerStrategy: void setAnalyticsSettingsData(io.fabric.sdk.android.services.settings.AnalyticsSettingsData,java.lang.String)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.Onboarding: java.lang.Object doInBackground()>[]--><io.fabric.sdk.android.Onboarding: java.lang.Boolean doInBackground()>[[try]]--><io.fabric.sdk.android.Onboarding: boolean performAutoConfigure(java.lang.String,io.fabric.sdk.android.services.settings.AppSettingsData,java.util.Collection)>[]--><io.fabric.sdk.android.Onboarding: boolean performUpdateApp(java.lang.String,io.fabric.sdk.android.services.settings.AppSettingsData,java.util.Collection)>[]--><io.fabric.sdk.android.Onboarding: boolean performUpdateApp(io.fabric.sdk.android.services.settings.AppSettingsData,io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>[]--><io.fabric.sdk.android.Onboarding: io.fabric.sdk.android.services.settings.AppRequestData buildAppRequest(io.fabric.sdk.android.services.settings.IconRequest,java.util.Collection)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.crashlytics.android.Crashlytics: boolean onPreExecute()>[]--><com.crashlytics.android.Crashlytics: boolean onPreExecute(android.content.Context)>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$200(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler,java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void handleUncaughtException(java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionApp(java.lang.String)>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: int getSessionAppOrgSize()>[]--><io.fabric.sdk.android.services.common.ApiKey: java.lang.String getApiKey(android.content.Context,boolean)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
crashApis:8
crashApisInMain:8
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[[try]]--><org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)> is checking!!!
The life time of api is [23,31]
13call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider$WidgetService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: void update()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
12 Packageshead roads:
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void update()>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Handelsbanken: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.BankEditActivity$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.avanza.Avanza: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.seb.SEB: void update()>[]--><com.liato.bankdroid.banking.banks.seb.SEB: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Skandiabanken: void updateTransactions(com.liato.bankdroid.banking.Account,eu.nullbyte.android.urllib.Urllib)>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.sebkort.SEBKortBase: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.banking.banks.Steam: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[[try]]--><eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: void <init>(eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>
One road protect good!
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ChooseLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ChooseLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ChooseLockPattern: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.lockpattern.ConfirmLockPattern dummyMainMethod_com_liato_bankdroid_lockpattern_ConfirmLockPattern(android.content.Intent)>[]--><com.liato.bankdroid.lockpattern.ConfirmLockPattern: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:9
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> is checking!!!
The life time of api is [1,30]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$700(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
try
Good road with try: <com.crashlytics.android.beta.Beta: java.lang.Object doInBackground()>[]--><com.crashlytics.android.beta.Beta: java.lang.Boolean doInBackground()>[]--><com.crashlytics.android.beta.Beta: void checkForUpdates(android.content.Context,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.settings.BetaSettingsData,com.crashlytics.android.beta.BuildProperties)>[]--><com.crashlytics.android.beta.CheckForUpdatesController: void checkForUpdates()>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>[]--><io.fabric.sdk.android.services.common.IdManager: void addDeviceIdentifiersTo(org.json.JSONObject)>[]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.Onboarding: java.lang.Object doInBackground()>[]--><io.fabric.sdk.android.Onboarding: java.lang.Boolean doInBackground()>[[try]]--><io.fabric.sdk.android.services.settings.Settings: io.fabric.sdk.android.services.settings.Settings initialize(io.fabric.sdk.android.Kit,io.fabric.sdk.android.services.common.IdManager,io.fabric.sdk.android.services.network.HttpRequestFactory,java.lang.String,java.lang.String,java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String createIdHeaderValue(java.lang.String,java.lang.String)>[]--><io.fabric.sdk.android.services.common.IdManager: void addDeviceIdentifiersTo(org.json.JSONObject)>[]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
try
Good road with try: <com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void access$200(com.crashlytics.android.CrashlyticsUncaughtExceptionHandler,java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void handleUncaughtException(java.util.Date,java.lang.Thread,java.lang.Throwable)>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void doOpenSession()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler: void writeSessionDevice(java.lang.String)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
try
Good road with try: <com.crashlytics.android.answers.Answers: java.lang.Object doInBackground()>[]--><com.crashlytics.android.answers.Answers: java.lang.Boolean doInBackground()>[]--><com.crashlytics.android.answers.Answers: void initializeSessionAnalytics(android.content.Context)>[[try]]--><io.fabric.sdk.android.services.common.IdManager: java.util.Map getDeviceIdentifiers()>[]--><io.fabric.sdk.android.services.common.IdManager: java.lang.String getWifiMacAddress()>[]--><android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.webkit.CookieSyncManager: void sync()> is checking!!!
The life time of api is [21,31]
4call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.webkit.CookieSyncManager: void sync()>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
#1.the call statck between class <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()> to <android.webkit.CookieSyncManager: void sync()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.liato.bankdroid.liveview.LiveViewService$LiveViewCallback: void openInPhone(java.lang.String)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
#2.the call statck between class <com.liato.bankdroid.liveview.LiveViewService$LiveViewCallback: void openInPhone(java.lang.String)> to <android.webkit.CookieSyncManager: void sync()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <io.fabric.sdk.android.services.common.SafeToast: void show()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><com.liato.bankdroid.WebViewActivity$2$1: void run()>[]--><android.webkit.CookieSyncManager: void sync()>
#3.the call statck between class <io.fabric.sdk.android.services.common.SafeToast: void show()> to <android.webkit.CookieSyncManager: void sync()>has compatibility isssues！
-----------------------------------------
crashApis:10
crashApisInMain:10
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider_2x1 dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider__2x1(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider_4x1 dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider__4x1(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.WidgetConfigureActivity dummyMainMethod_com_liato_bankdroid_appwidget_WidgetConfigureActivity(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.WidgetConfigureActivity: void onResume()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:11
crashApisInMain:11
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$20: void run()>[]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
#1.the call statck between class <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()> to <android.net.NetworkInfo: boolean isConnectedOrConnecting()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.crashlytics.android.Crashlytics: boolean onPreExecute()>[]--><com.crashlytics.android.Crashlytics: boolean onPreExecute(android.content.Context)>[[try]]--><io.fabric.sdk.android.services.common.CommonUtils: boolean canTryConnection(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
crashApis:12
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)> is checking!!!
The life time of api is [23,31]
13call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider$WidgetService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: void update()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.Vasttrafik: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
12 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.Skandiabanken: void update()>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#1.the call statck between class <com.liato.bankdroid.banking.banks.Skandiabanken: void update()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.Handelsbanken: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#2.the call statck between class <com.liato.bankdroid.banking.banks.Handelsbanken: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.seb.SEB: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#3.the call statck between class <com.liato.bankdroid.banking.banks.seb.SEB: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
One road protect good!
#4.the call statck between class <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void setAllowCircularRedirects(boolean)>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#5.the call statck between class <com.liato.bankdroid.banking.banks.lansforsakringar.Lansforsakringar: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.liato.bankdroid.BankEditActivity$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.ForexBank: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.ForexBank: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.avanza.Avanza: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#7.the call statck between class <com.liato.bankdroid.banking.banks.avanza.Avanza: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.seb.SEB: void update()>[]--><com.liato.bankdroid.banking.banks.seb.SEB: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#8.the call statck between class <com.liato.bankdroid.banking.banks.seb.SEB: void update()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.Skandiabanken: void updateTransactions(com.liato.bankdroid.banking.Account,eu.nullbyte.android.urllib.Urllib)>[]--><com.liato.bankdroid.banking.banks.Skandiabanken: eu.nullbyte.android.urllib.Urllib login()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#9.the call statck between class <com.liato.bankdroid.banking.banks.Skandiabanken: void updateTransactions(com.liato.bankdroid.banking.Account,eu.nullbyte.android.urllib.Urllib)> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.liato.bankdroid.banking.banks.sebkort.SEBKortBase: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,java.security.cert.Certificate[])>[]--><eu.nullbyte.android.urllib.Urllib: void <init>(android.content.Context,eu.nullbyte.android.urllib.ClientCertificate,java.security.cert.Certificate[])>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>
#10.the call statck between class <com.liato.bankdroid.banking.banks.sebkort.SEBKortBase: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:13
crashApisInMain:12
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isRoaming()> is checking!!!
The life time of api is [3,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: int onStartCommand(android.content.Intent,int,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: boolean shouldUpdateOnRoaming(android.net.NetworkInfo)>[]--><android.net.NetworkInfo: boolean isRoaming()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isRoaming()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:14
crashApisInMain:13
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)> is checking!!!
The life time of api is [23,31]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.AutoRefreshService dummyMainMethod_com_liato_bankdroid_appwidget_AutoRefreshService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.AutoRefreshService$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService dummyMainMethod_com_liato_bankdroid_appwidget_BankdroidWidgetProvider$WidgetService(android.content.Intent)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void onStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService: void handleStart(android.content.Intent,int)>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.appwidget.BankdroidWidgetProvider$WidgetService$WidgetUpdateTask: java.lang.Void doInBackground(java.lang.Void[])>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: void update()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.liato.bankdroid.WebViewActivity dummyMainMethod_com_liato_bankdroid_WebViewActivity(android.content.Intent)>[]--><com.liato.bankdroid.WebViewActivity: void onCreate(android.os.Bundle)>[]--><java.lang.Thread: void run()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor$1: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
One road protect good!
try
Good road with try: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.crashlytics.android.CrashlyticsUncaughtExceptionHandler$12: void run()>[[try]]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()>[]--><com.liato.bankdroid.WebViewActivity$2: void run()>[]--><com.liato.bankdroid.banking.Bank: com.liato.bankdroid.banking.Bank$SessionPackage getSessionPackage(android.content.Context)>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
#1.the call statck between class <io.fabric.sdk.android.services.common.ExecutorUtils$1$1: void onRun()> to <org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.liato.bankdroid.BankEditActivity$DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
One road protect good!
try
Good road with try: <com.liato.bankdroid.DataRetrieverTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.liato.bankdroid.DataRetrieverTask: java.lang.Void doInBackground(java.lang.String[])>[[try]]--><com.liato.bankdroid.banking.Bank: void updateAllTransactions()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: eu.nullbyte.android.urllib.Urllib login()>[]--><com.liato.bankdroid.banking.banks.SveaDirekt: com.liato.bankdroid.banking.Bank$LoginPackage preLogin()>[]--><org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>
One road protect good!
crashApis:15
crashApisInMain:14
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>
#1.the call statck between class <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>[]--><org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>
#1.the call statck between class <eu.nullbyte.android.urllib.CertPinningSSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)> to <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
crashApis numbers:17
crashApis numbers in main road:14
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 13 and error api roads: 40
On Android Version 20 this app may have error api use(at least): 13 and error api roads: 40
On Android Version 21 this app may have error api use(at least): 4 and error api roads: 17
On Android Version 22 this app may have error api use(at least): 4 and error api roads: 17
On Android Version 23 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 24 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 25 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 4 and error api roads: 5
