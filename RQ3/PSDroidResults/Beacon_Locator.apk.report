/home/ys/桌面/CompactDroid（复件）/dataset2/Beacon_Locator.apk
Entry Points[com.samebits.beacon.locator.ui.activity.BeaconActionActivity, org.altbeacon.beacon.service.ScanJob, com.samebits.beacon.locator.receiver.LocationReceiver, org.altbeacon.beacon.service.BeaconService, org.altbeacon.bluetooth.BluetoothTestJob, com.samebits.beacon.locator.receiver.BeaconAlertReceiver, com.samebits.beacon.locator.action.TaskerAction$1, org.altbeacon.beacon.startup.StartupBroadcastReceiver, com.samebits.beacon.locator.ui.activity.SettingsActivity, com.samebits.beacon.locator.receiver.BeaconRegionReceiver, org.altbeacon.beacon.BeaconIntentProcessor, com.samebits.beacon.locator.BeaconLocatorApp, com.samebits.beacon.locator.ui.activity.MainNavigationActivity]
FllowDroidcallgraph size:3459
Soot started on Mon Jul 11 01:36:03 CST 2022
leftOp<android.databinding.ViewDataBinding: int SDK_INT>
StaticCheck:<com.samebits.beacon.locator.util.PreferencesUtil: boolean isForegroundScan(android.content.Context)>$yysi0 < 26
Soot finished on Mon Jul 11 01:36:13 CST 2022
Soot has run for 0 min. 10 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 18
Declared Target Sdk version is: 27
Declared Max Sdk version is: -1
Collected 668 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeDeviceName(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeDeviceName(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getMinute()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setMinute(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: int getMinute()>
One road protect good!
-i0 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: int getMinute(android.widget.TimePicker)>[[-i0 < 23]]--><android.widget.TimePicker: int getMinute()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
#1.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)> to <android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
#2.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>has compatibility isssues！
-----------------------------------------
crashApis:1
crashApisInMain:1
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.widget.TimePicker: int getHour()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: int getHour(android.widget.TimePicker)>[[-i0 < 23]]--><android.widget.TimePicker: int getHour()>
One road protect good!
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setHour(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: int getHour()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
i0 < 27
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity$2: void onDismiss(android.content.DialogInterface)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:2
crashApisInMain:2
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
41call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
40 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.ui.fragment.PageBeaconFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.PageBeaconFragment: void readArguments()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#10.the call statck between class <com.samebits.beacon.locator.ui.fragment.PageBeaconFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
crashApisInMain:3
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: void cancel(int)> is checking!!!
The life time of api is [21,31]
39call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
38 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: void cancel(int)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobScheduler: void cancel(int)>has compatibility isssues！
-----------------------------------------
crashApis:4
crashApisInMain:4
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.content.Context: android.graphics.drawable.Drawable getDrawable(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void executeBindings()>[]--><android.databinding.ViewDataBinding: android.graphics.drawable.Drawable getDrawableFromResource(android.view.View,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceUuid(android.os.ParcelUuid)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceUuid(android.os.ParcelUuid)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)>[]--><org.altbeacon.bluetooth.BluetoothMedic: void scheduleRegularTests(android.content.Context)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
crashApis:6
crashApisInMain:5
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLockscreenVisibility(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setLockscreenVisibility(int)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setLockscreenVisibility(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:7
crashApisInMain:6
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
21 Packageshead roads:
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$3: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.bluetooth.BluetoothMedic$2: void onScanResult(int,android.bluetooth.le.ScanResult)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$3: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$3: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
i0 < 27
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
One road protect good!
containsStatic:false
containsTry:true
22call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$2: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$2: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$2: void run()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
20 Packageshead roads:
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
i0 < 27
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: int startScan(java.util.List,android.bluetooth.le.ScanSettings,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
#1.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)> to <android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
#2.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>has compatibility isssues！
-----------------------------------------
crashApis:8
crashApisInMain:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addParameter(java.lang.String)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addParameter(java.lang.String)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.StartRMData: org.altbeacon.beacon.service.StartRMData fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#2.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
i0 >= 18
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
37 Packageshead roads:
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void access$000(com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment)>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScanTimeout()>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager: void setUseTrackingCache(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><org.altbeacon.beacon.startup.RegionBootstrap$InternalBeaconConsumer: void onBeaconServiceConnect()>[[try]]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void removeRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)>[]--><org.altbeacon.bluetooth.BluetoothMedic: void scheduleRegularTests(android.content.Context)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
#28.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)> is checking!!!
The life time of api is [24,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
i0 >= 18
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
36 Packageshead roads:
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void access$000(com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment)>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScanTimeout()>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager: void setUseTrackingCache(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><org.altbeacon.beacon.startup.RegionBootstrap$InternalBeaconConsumer: void onBeaconServiceConnect()>[[try]]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void removeRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.activity.MainNavigationActivity_ViewBinding$1: void doClick(android.view.View)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity: void navAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
i0 < 27
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconLocalBroadcastProcessor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
-$i0 < 24
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[-$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long,long)>
One road protect good!
containsStatic:true
containsTry:true
37call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
20call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void initBeaconManager()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityPaused(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
19 Packageshead roads:
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager: void setUseTrackingCache(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><org.altbeacon.beacon.startup.RegionBootstrap$InternalBeaconConsumer: void onBeaconServiceConnect()>[[try]]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void removeRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.activity.MainNavigationActivity_ViewBinding$1: void doClick(android.view.View)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity: void navAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void access$000(com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment)>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScanTimeout()>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconLocalBroadcastProcessor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#17.the call statck between class <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(java.lang.String)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:true
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.text.InputFilter.LengthFilter: int getMax()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i2 < 21
Good road: <android.databinding.adapters.TextViewBindingAdapter: void setMaxLength(android.widget.TextView,int)>[[-i2 < 21]]--><android.text.InputFilter.LengthFilter: int getMax()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
i0 >= 18
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
One road protect good!
$i0 < 24
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[[$i0 < 24]]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>has compatibility isssues！
-----------------------------------------
crashApis:12
crashApisInMain:8
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.app.job.JobParameters: int getJobId()> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStopJob(android.app.job.JobParameters)>[]--><android.app.job.JobParameters: int getJobId()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobParameters: int getJobId()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:13
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.view.View: boolean isAttachedToWindow()> is checking!!!
The life time of api is [19,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 19
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
-$i0 < 19
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
-$i0 < 19
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[[-$i0 < 19]]--><android.view.View: boolean isAttachedToWindow()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanRecord: byte[] getBytes()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.bluetooth.le.ScanRecord: byte[] getBytes()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.ScanRecord: byte[] getBytes()>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)>[]--><android.bluetooth.le.ScanRecord: byte[] getBytes()>
#1.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)> to <android.bluetooth.le.ScanRecord: byte[] getBytes()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanRecord: byte[] getBytes()>
#2.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanRecord: byte[] getBytes()>has compatibility isssues！
-----------------------------------------
crashApis:14
crashApisInMain:10
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
21 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
crashApis:15
crashApisInMain:11
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()> is checking!!!
The life time of api is [21,31]
23call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
22 Packageshead roads:
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><org.altbeacon.bluetooth.BluetoothMedic: android.bluetooth.le.BluetoothLeAdvertiser getAdvertiserSafely(android.bluetooth.BluetoothAdapter)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconTransmitter: void <init>(android.content.Context,org.altbeacon.beacon.BeaconParser)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
#14.the call statck between class <org.altbeacon.beacon.BeaconTransmitter: void <init>(android.content.Context,org.altbeacon.beacon.BeaconParser)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLightColor(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setVibrationPattern(long[])> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void setVibrationPattern(long[])>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
26call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityPaused(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
25 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
One road protect good!
!!!this api will crash on sdk 18 19 20 21 
Error road: <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(boolean)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#10.the call statck between class <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(boolean)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.ViewDataBinding: int getColorFromResource(android.view.View,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableLights(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void enableLights(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$2: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$2: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
20 Packageshead roads:
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
-$i0 < 26
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
-$i0 < 26
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[[try]]--><android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
One road protect good!
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>has compatibility isssues！
-----------------------------------------
crashApis:19
crashApisInMain:12
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeTxPowerLevel(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeTxPowerLevel(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>[]--><android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)> to <android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconTransmitter$1: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>[]--><android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>
#2.the call statck between class <org.altbeacon.beacon.BeaconTransmitter$1: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)> to <android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setHour(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setHour(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: void setHour(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
20 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#4.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:21
crashApisInMain:13
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)> is checking!!!
The life time of api is [21,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
36 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>has compatibility isssues！
-----------------------------------------
crashApis:22
crashApisInMain:14
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
40call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.BeaconService dummyMainMethod_org_altbeacon_beacon_service_BeaconService(android.content.Intent)>[]--><org.altbeacon.beacon.service.BeaconService: void onCreate()>[]--><org.altbeacon.beacon.service.BeaconService: java.lang.String getManifestMetadataValue(java.lang.String)>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21]][[try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]
-$i0 < 21
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[]--><org.altbeacon.beacon.BeaconManager: void unbind(org.altbeacon.beacon.BeaconConsumer)>[[-$i0 < 21], [try]]--><org.altbeacon.beacon.service.ScanJobScheduler: void cancelSchedule(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getImmediateScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
39 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: org.altbeacon.beacon.service.SettingsData fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.StartRMData: org.altbeacon.beacon.service.StartRMData fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><org.altbeacon.beacon.service.ScanJob: int getPeriodicScanJobId(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJob: int getJobIdFromManifest(android.content.Context,java.lang.String)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:23
crashApisInMain:15
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceData(android.os.ParcelUuid,byte[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceData(android.os.ParcelUuid,byte[])>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
18call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void initBeaconManager()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityPaused(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
17 Packageshead roads:
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager: void setUseTrackingCache(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onStop()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[[try]]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconManager$BeaconServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>[[try]]--><org.altbeacon.beacon.startup.RegionBootstrap$InternalBeaconConsumer: void onBeaconServiceConnect()>[[try]]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void removeRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.activity.MainNavigationActivity_ViewBinding$1: void doClick(android.view.View)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity: void navAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void access$000(com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment)>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScanTimeout()>[]--><com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void stopScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void stopScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onBeaconServiceConnect()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void scanStartStopAction()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.BeaconLocalBroadcastProcessor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void startScan()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void startScan()>[[try]]--><org.altbeacon.beacon.BeaconManager: void startRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[$i0 != 7]]--><org.altbeacon.beacon.service.StartRMData: android.os.Bundle toBundle()>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
One road protect good!
containsStatic:true
containsTry:true
18call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>has compatibility isssues！
-----------------------------------------
crashApis:24
crashApisInMain:16
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
4call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.service.MonitoringData: org.altbeacon.beacon.service.MonitoringData fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
3 Packageshead roads:
!!!this api will crash on sdk 18 19 20 21 
Error road: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 21 
Error road: <org.altbeacon.beacon.BeaconLocalBroadcastProcessor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><org.altbeacon.beacon.service.MonitoringData: org.altbeacon.beacon.service.MonitoringData fromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <org.altbeacon.beacon.BeaconLocalBroadcastProcessor$1: void onReceive(android.content.Context,android.content.Intent)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 21 
Error road: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#3.the call statck between class <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:25
crashApisInMain:17
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanCallback: void onScanFailed(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$2: void onScanFailed(int)>[]--><android.bluetooth.le.ScanCallback: void onScanFailed(int)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$2: void onScanFailed(int)> to <android.bluetooth.le.ScanCallback: void onScanFailed(int)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setConnectable(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setConnectable(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-i0 < 27
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[-i0 < 27]]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createWildcardScanFilters()>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>has compatibility isssues！
-----------------------------------------
crashApis:27
crashApisInMain:18
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
4call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStart()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,java.util.List)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void <init>(org.altbeacon.beacon.startup.BootstrapNotifier,org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.DetectedBeaconsFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try]][[-$i0 < 26]]
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onCreate(android.os.Bundle)>[]--><org.altbeacon.beacon.BeaconManager: void bind(org.altbeacon.beacon.BeaconConsumer)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
21 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>has compatibility isssues！
-----------------------------------------
crashApis:28
crashApisInMain:19
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconTransmitter$1: void onStartFailure(int)>[]--><android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>
#1.the call statck between class <org.altbeacon.beacon.BeaconTransmitter$1: void onStartFailure(int)> to <android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartFailure(int)>[]--><android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>
#2.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartFailure(int)> to <android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void stopAdvertising()>[[try]]--><android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>[]--><android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>
#2.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$3: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)> to <android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
21 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>has compatibility isssues！
-----------------------------------------
crashApis:31
crashApisInMain:20
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanResult: int getRssi()> is checking!!!
The life time of api is [21,31]
3call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.bluetooth.le.ScanResult: int getRssi()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.ScanResult: int getRssi()>has compatibility isssues！
-----------------------------------------
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)>[]--><android.bluetooth.le.ScanResult: int getRssi()>
#1.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onBatchScanResults(java.util.List)> to <android.bluetooth.le.ScanResult: int getRssi()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanResult: int getRssi()>
#2.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanResult: int getRssi()>has compatibility isssues！
-----------------------------------------
crashApis:32
crashApisInMain:21
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
i0 < 27
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
21 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>has compatibility isssues！
-----------------------------------------
crashApis:33
crashApisInMain:22
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
20 Packageshead roads:
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
i0 < 27
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
try
Good road with try: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runScanTest(android.content.Context)>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)>[]--><org.altbeacon.bluetooth.BluetoothMedic: void scheduleRegularTests(android.content.Context)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#2.the call statck between class <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addArg(int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addAction(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#3.the call statck between class <net.dinglisch.android.tasker.TaskerIntent: net.dinglisch.android.tasker.TaskerIntent addAction(int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.ui.adapter.DetailFragmentPagerAdapter: android.support.v4.app.Fragment getItem(int)>[]--><com.samebits.beacon.locator.ui.adapter.DetailFragmentPagerAdapter: com.samebits.beacon.locator.ui.fragment.PageBeaconFragment getItem(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#4.the call statck between class <com.samebits.beacon.locator.ui.adapter.DetailFragmentPagerAdapter: android.support.v4.app.Fragment getItem(int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<org.altbeacon.beacon.BeaconTransmitter: int checkTransmissionSupported(android.content.Context)>[[try], [i1 >= 21]]
###Multi invoking in one method, need manual check!!!<org.altbeacon.beacon.BeaconTransmitter: int checkTransmissionSupported(android.content.Context)>[[try]][[i1 >= 21]]
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: int checkTransmissionSupported(android.content.Context)>[[try], [i1 >= 21]]--><android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)>[]--><android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>
#1.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop$4: void onScanResult(int,android.bluetooth.le.ScanResult)> to <android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>has compatibility isssues！
-----------------------------------------
crashApis:35
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic$2: void onBatchScanResults(java.util.List)>[]--><android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic$2: void onBatchScanResults(java.util.List)> to <android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
i0 < 27
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void onRefresh()>[]--><com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void loadBeacons()>[]--><com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void getExtras()>[]--><android.os.BaseBundle: boolean isEmpty()>
#1.the call statck between class <com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void onRefresh()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void onStart()>[]--><com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void loadBeacons()>[]--><com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void getExtras()>[]--><android.os.BaseBundle: boolean isEmpty()>
#2.the call statck between class <com.samebits.beacon.locator.ui.fragment.TrackedBeaconsFragment: void onStart()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
20 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:38
crashApisInMain:23
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTxPowerLevel(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising(org.altbeacon.beacon.Beacon,android.bluetooth.le.AdvertiseCallback)>[]--><org.altbeacon.beacon.BeaconTransmitter: void startAdvertising()>[[try]]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTxPowerLevel(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)>[]--><org.altbeacon.bluetooth.BluetoothMedic: void scheduleRegularTests(android.content.Context)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>
#1.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: void enablePeriodicTests(android.content.Context,int)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.os.PersistableBundle: void <init>()> is checking!!!
The life time of api is [21,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.os.PersistableBundle: void <init>()>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.os.PersistableBundle: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:40
crashApisInMain:24
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)> is checking!!!
The life time of api is [21,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
i0 >= 18
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.startup.StartupBroadcastReceiver dummyMainMethod_org_altbeacon_beacon_startup_StartupBroadcastReceiver(android.content.Intent)>[]--><org.altbeacon.beacon.startup.StartupBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>[[i0 >= 18]]--><org.altbeacon.beacon.service.ScanJobScheduler: void scheduleAfterBackgroundWakeup(android.content.Context,java.util.List)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.BeaconActionActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_BeaconActionActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.BaseActivity: void onStop()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.BeaconIntentProcessor dummyMainMethod_org_altbeacon_beacon_BeaconIntentProcessor(android.content.Intent)>[]--><org.altbeacon.beacon.BeaconIntentProcessor: void onHandleIntent(android.content.Intent)>[]--><org.altbeacon.beacon.IntentHandler: void convertIntentsToCallbacks(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void didExitRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopRangingBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onCreate()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void onLowMemory()>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void enableBackgroundScan(boolean)>[]--><com.samebits.beacon.locator.BeaconLocatorApp: void disableRegions()>[]--><org.altbeacon.beacon.startup.RegionBootstrap: void disable()>[[try]]--><org.altbeacon.beacon.BeaconManager: void stopMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><org.altbeacon.beacon.powersave.BackgroundPowerSaver: void onActivityResumed(android.app.Activity)>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
36 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#1.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <org.altbeacon.beacon.startup.RegionBootstrap: void addRegion(org.altbeacon.beacon.Region)>[[try]]--><org.altbeacon.beacon.BeaconManager: void startMonitoringBeaconsInRegion(org.altbeacon.beacon.Region)>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)>[]--><org.altbeacon.beacon.service.SettingsData: void apply(org.altbeacon.beacon.service.BeaconService)>[]--><org.altbeacon.beacon.BeaconManager: void setAndroidLScanningDisabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#4.the call statck between class <org.altbeacon.beacon.service.BeaconService$IncomingHandler: void handleMessage(android.os.Message)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#6.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void setRegionStatePersistenceEnabled(boolean)>[]--><org.altbeacon.beacon.BeaconManager: void applySettings()>[]--><org.altbeacon.beacon.BeaconManager: void syncSettingsToService()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#7.the call statck between class <org.altbeacon.beacon.BeaconManager: void setRegionStatePeristenceEnabled(boolean)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#8.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: boolean deferScanIfNeeded()> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><com.samebits.beacon.locator.ui.fragment.ScanFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
try
Good road with try: <com.samebits.beacon.locator.ui.fragment.ScanRadarFragment: void onResume()>[]--><org.altbeacon.beacon.BeaconManager: void setBackgroundMode(boolean)>[[try]]--><org.altbeacon.beacon.BeaconManager: void updateScanPeriods()>[]--><org.altbeacon.beacon.BeaconManager: void applyChangesToServices(int,org.altbeacon.beacon.Region)>[[-$i0 < 21]]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void applySettingsToScheduledJob(android.content.Context,org.altbeacon.beacon.BeaconManager,org.altbeacon.beacon.service.ScanState)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
One road protect good!
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean cycleBluetoothIfNotTooSoon()>[]--><org.altbeacon.bluetooth.BluetoothMedic: void cycleBluetooth()>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><org.altbeacon.beacon.service.ScanJob$1: void run()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void forceScheduleNextScan(android.content.Context)>[]--><org.altbeacon.beacon.service.ScanJobScheduler: void schedule(android.content.Context,org.altbeacon.beacon.service.ScanState,boolean)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
#10.the call statck between class <org.altbeacon.bluetooth.BluetoothMedic: boolean access$200(org.altbeacon.bluetooth.BluetoothMedic)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>has compatibility isssues！
-----------------------------------------
crashApis:41
crashApisInMain:25
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.SettingsActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_SettingsActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.SettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:42
crashApisInMain:26
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.bluetooth.le.BluetoothLeScanner: void stopScan(android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.beacon.service.ScanJob dummyMainMethod_org_altbeacon_beacon_service_ScanJob(android.content.Intent)>[]--><org.altbeacon.beacon.service.ScanJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.beacon.service.ScanJob: boolean restartScanning()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void stopAndroidOBackgroundScan()>[[try]]--><android.bluetooth.le.BluetoothLeScanner: void stopScan(android.app.PendingIntent)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)> is checking!!!
The life time of api is [21,31]
22call roads:
1 Mainhead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
21 Packageshead roads:
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#1.the call statck between class <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#2.the call statck between class <android.databinding.ViewDataBinding$OnStartListener: void onStart()> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#3.the call statck between class <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#4.the call statck between class <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#5.the call statck between class <android.databinding.ViewDataBinding$8: void doFrame(long)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#8.the call statck between class <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
!!!this api will crash on sdk 18 19 20 
Error road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.bluetooth.BluetoothTestJob$1: void run()>[]--><org.altbeacon.bluetooth.BluetoothMedic: boolean runTransmitterTest(android.content.Context)>[]--><android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
#10.the call statck between class <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)> to <android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>has compatibility isssues！
-----------------------------------------
crashApis:43
crashApisInMain:27
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.ui.activity.MainNavigationActivity dummyMainMethod_com_samebits_beacon_locator_ui_activity_MainNavigationActivity(android.content.Intent)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity: void onCreate(android.os.Bundle)>[]--><com.samebits.beacon.locator.ui.activity.MainNavigationActivity: void checkPermissions()>[[-i0 < 23]]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
i0 < 27
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.ViewDataBinding: android.content.res.ColorStateList getColorStateListFromResource(android.view.View,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])> is checking!!!
The life time of api is [21,31]
21call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.altbeacon.bluetooth.BluetoothTestJob dummyMainMethod_org_altbeacon_bluetooth_BluetoothTestJob(android.content.Intent)>[]--><org.altbeacon.bluetooth.BluetoothTestJob: boolean onStartJob(android.app.job.JobParameters)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
20 Packageshead roads:
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$6: void onViewAttachedToWindow(android.view.View)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$OnStartListener: void onStart()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void executeBindingsOn(android.databinding.ViewDataBinding)>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding$8: void doFrame(long)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.TrackedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><android.databinding.ViewDataBinding$7: void run()>[]--><android.databinding.ViewDataBinding: void executePendingBindings()>[]--><android.databinding.ViewDataBinding: void executeBindingsInternal()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.TaskExecutor: void executeOnMainThread(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.Beacon: void requestData(org.altbeacon.beacon.BeaconDataNotifier)>[]--><org.altbeacon.beacon.client.NullBeaconDataFactory: void requestBeaconData(org.altbeacon.beacon.Beacon,org.altbeacon.beacon.BeaconDataNotifier)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void startScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStartLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void finishScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForJellyBeanMr2: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
i0 < 27
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void startScan()>[[i0 < 27]]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStartLeScan(java.util.List,android.bluetooth.le.ScanSettings)>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: boolean deferScanIfNeeded()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void stopScan()>[]--><org.altbeacon.beacon.service.scanner.CycledLeScannerForLollipop: void postStopLeScan()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.ActionBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemActionBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.DataBinderMapperImpl: android.databinding.ViewDataBinding getDataBinder(android.databinding.DataBindingComponent,android.view.View,int)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View)>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void <init>(android.databinding.DataBindingComponent,android.view.View,java.lang.Object[])>[]--><com.samebits.beacon.locator.databinding.ItemTrackedBeaconBindingImpl: void invalidateAll()>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: boolean setVariable(int,java.lang.Object)>[]--><com.samebits.beacon.locator.databinding.ItemDetectedBeaconBindingImpl: void setViewModel(com.samebits.beacon.locator.viewModel.DetectedBeaconViewModel)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
-$i0 < 26
Good road: <android.databinding.ViewDataBinding: void access$800(android.databinding.ViewDataBinding,int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void handleFieldChange(int,java.lang.Object,int)>[]--><android.databinding.ViewDataBinding: void requestRebind()>[]--><android.os.Handler: boolean post(java.lang.Runnable)>[]--><org.altbeacon.beacon.service.ScanJob$1$1: void run()>[]--><org.altbeacon.beacon.service.ScanJob: void access$300(org.altbeacon.beacon.service.ScanJob)>[]--><org.altbeacon.beacon.service.ScanJob: void scheduleNextScan()>[]--><org.altbeacon.beacon.service.ScanJob: void startPassiveScanIfNeeded()>[[-$i0 < 26]]--><org.altbeacon.beacon.service.ScanHelper: void startAndroidOBackgroundScan(java.util.Set)>[]--><org.altbeacon.beacon.service.scanner.ScanFilterUtils: java.util.List createScanFiltersForBeaconParsers(java.util.List)>[]--><android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
One road protect good!
containsStatic:false
containsTry:true
21call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.widget.TimePicker: void setMinute(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <android.databinding.adapters.TimePickerBindingAdapter: void setMinute(android.widget.TimePicker,int)>[[-$i1 < 23]]--><android.widget.TimePicker: void setMinute(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void enableVibration(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.BeaconAlertReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_BeaconAlertReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.BeaconAlertReceiver: void createNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void enableVibration(boolean)>
One road protect good!
-i1 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.samebits.beacon.locator.receiver.LocationReceiver dummyMainMethod_com_samebits_beacon_locator_receiver_LocationReceiver(android.content.Intent)>[]--><com.samebits.beacon.locator.receiver.LocationReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.samebits.beacon.locator.util.NotificationBuilder: com.samebits.beacon.locator.util.NotificationBuilder createNotification(int,java.lang.String,boolean,android.app.PendingIntent)>[[-i1 < 26]]--><android.app.NotificationChannel: void enableVibration(boolean)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
crashApis numbers:43
crashApis numbers in main road:27
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 43 and error api roads: 276
On Android Version 19 this app may have error api use(at least): 43 and error api roads: 276
On Android Version 20 this app may have error api use(at least): 43 and error api roads: 276
On Android Version 21 this app may have error api use(at least): 4 and error api roads: 7
On Android Version 22 this app may have error api use(at least): 2 and error api roads: 2
On Android Version 23 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 24 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 25 this app may have error api use(at least): 1 and error api roads: 1
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 0 and error api roads: 0
