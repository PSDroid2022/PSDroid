/home/ys/桌面/CompactDroid（复件）/dataset2/GeoPaparazzi.apk
Entry Points[eu.geopaparazzi.map.MapsSupportService, eu.geopaparazzi.core.GeopaparazziCoreActivity, eu.geopaparazzi.core.ui.activities.ProjectMetadataActivity, eu.geopaparazzi.map.gui.FeaturePagerActivity, eu.geopaparazzi.core.GeopaparazziApplication, eu.hydrologis.geopaparazzi.GeopaparazziActivity, eu.geopaparazzi.core.ui.activities.ProfileChartActivity, eu.geopaparazzi.library.core.activities.DatabaseListActivity, eu.geopaparazzi.core.ui.activities.GpsLogPropertiesActivity, eu.geopaparazzi.core.ui.activities.ImportActivity, eu.geopaparazzi.core.ui.activities.GpsDataListActivity, eu.geopaparazzi.plugins.pdfexport.ProjectPdfExportsMenuProvider, eu.geopaparazzi.library.network.upload.UploadFileIntentService, eu.geopaparazzi.core.profiles.ProfilesActivity, eu.geopaparazzi.plugins.defaultexports.DefaultExportsMenuProvider, eu.geopaparazzi.map.gui.MapLayerListActivity, eu.geopaparazzi.core.providers.AvailableDataContentProvider, eu.geopaparazzi.core.mapview.MapviewActivity, org.acra.dialog.CrashReportDialog, org.acra.sender.SenderService, eu.geopaparazzi.library.core.activities.LogAnalysisActivity, eu.geopaparazzi.library.core.activities.GeocodeActivity, eu.geopaparazzi.plugins.projectexport.ProjectExportsMenuProvider, anupam.acrylic.EasyPaint, eu.geopaparazzi.library.camera.CameraNoteActivity, eu.geopaparazzi.core.ui.activities.NotesPropertiesActivity, eu.geopaparazzi.core.ui.activities.ExportActivity, eu.geopaparazzi.core.ui.activities.ImportMapsforgeActivity, eu.geopaparazzi.library.network.download.DownloadFileIntentService, eu.geopaparazzi.library.nfc.NfcIdReaderActivity, eu.geopaparazzi.plugins.projectimport.ProjectImportsMenuProvider, eu.geopaparazzi.core.ui.activities.SettingsActivity, eu.geopaparazzi.library.core.activities.DirectoryBrowserActivity, eu.geopaparazzi.core.ui.activities.AddNotesActivity, eu.geopaparazzi.core.ui.activities.AdvancedSettingsActivity, eu.geopaparazzi.map.gui.ResourceBrowserActivity, eu.geopaparazzi.core.ui.activities.AboutActivity, eu.geopaparazzi.core.providers.ProfilesContentProvider, eu.geopaparazzi.core.ui.activities.SqlViewActivity, eu.geopaparazzi.plugins.profileimport.ProfileImportsMenuProvider, eu.geopaparazzi.plugins.pdfexport.PdfExportNotesListActivity, eu.geopaparazzi.core.ui.activities.PanicActivity, eu.geopaparazzi.plugins.profileexport.ProfileExportsMenuProvider, eu.geopaparazzi.core.profiles.gui.ProfileSettingsActivity, eu.geopaparazzi.library.forms.FormActivity, eu.geopaparazzi.map.gui.CameraDbActivity, eu.geopaparazzi.library.gps.GpsService, eu.geopaparazzi.plugins.defaultexports.DefaultImportsMenuProvider, eu.geopaparazzi.library.webprofile.WebProfilesListActivity, eu.geopaparazzi.core.ui.activities.NotesListActivity, eu.geopaparazzi.core.ui.activities.BookmarksListActivity, eu.geopaparazzi.library.webprofile.WebProfilesUploadListActivity, eu.geopaparazzi.library.webproject.WebProjectsListActivity]
FllowDroidcallgraph size:10913
Soot started on Mon Jul 11 04:28:25 CST 2022
Soot finished on Mon Jul 11 04:29:27 CST 2022
Soot has run for 1 min. 2 sec.
Found 2 additional DEX files. Now visiting them one by one.
Soot started on Mon Jul 11 04:29:27 CST 2022
StaticCheck:<eu.geopaparazzi.library.gps.GpsServiceUtilities: boolean isMockSettingsON(android.content.Context)>i0 < 23
Soot finished on Mon Jul 11 04:29:39 CST 2022
Soot has run for 0 min. 11 sec.
Soot started on Mon Jul 11 04:29:39 CST 2022
Soot finished on Mon Jul 11 04:30:01 CST 2022
Soot has run for 0 min. 21 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 21
Declared Target Sdk version is: 28
Declared Max Sdk version is: -1
Collected 614 Android APIs in the primary DEX file
Collected 1319 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: boolean isDone()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: boolean isDone()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: boolean isDone()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.IIOImage: void <init>(java.awt.image.RenderedImage,java.util.List,javax.imageio.metadata.IIOMetadata)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
10call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.hydrologis.geopaparazzi.GeopaparazziActivity dummyMainMethod_eu_hydrologis_geopaparazzi_GeopaparazziActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.GeopaparazziCoreActivity dummyMainMethod_eu_geopaparazzi_core_GeopaparazziCoreActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
9 Packageshead roads:
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.library.permissions.PermissionSendSms$1: void onClick(android.content.DialogInterface,int)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#3.the call statck between class <eu.geopaparazzi.library.permissions.PermissionSendSms$1: void onClick(android.content.DialogInterface,int)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts$1: void onClick(android.content.DialogInterface,int)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#4.the call statck between class <eu.geopaparazzi.library.permissions.PermissionGetAccounts$1: void onClick(android.content.DialogInterface,int)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.library.permissions.PermissionFineLocation$1: void onClick(android.content.DialogInterface,int)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#5.the call statck between class <eu.geopaparazzi.library.permissions.PermissionFineLocation$1: void onClick(android.content.DialogInterface,int)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.library.permissions.PermissionWriteStorage$1: void onClick(android.content.DialogInterface,int)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#6.the call statck between class <eu.geopaparazzi.library.permissions.PermissionWriteStorage$1: void onClick(android.content.DialogInterface,int)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionSendSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
-$i0 < 28
Good road: <eu.geopaparazzi.library.permissions.PermissionForegroundService$1: void onClick(android.content.DialogInterface,int)>[[-$i0 < 28]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms$1: void onClick(android.content.DialogInterface,int)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#9.the call statck between class <eu.geopaparazzi.library.permissions.PermissionRecieveSms$1: void onClick(android.content.DialogInterface,int)> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void <init>(int)> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>[]--><java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)> to <java.awt.RenderingHints: java.lang.Object remove(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:3
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <java.awt.Font: boolean isBold()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isBold()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isBold()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isBold()>
One road protect good!
crashApis:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.Color getColor2()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor2()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor2()>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <java.awt.geom.Ellipse2D.Double: void <init>(double,double,double,double)> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage,java.awt.image.ColorModel)>has compatibility isssues！
-----------------------------------------
crashApis:7
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
-i5 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.gps.GpsService dummyMainMethod_eu_geopaparazzi_library_gps_GpsService(android.content.Intent)>[]--><eu.geopaparazzi.library.gps.GpsService: int onStartCommand(android.content.Intent,int,int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
4 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void registerForLocationUpdates()>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onGpsStatusChanged(int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderDisabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onLocationChanged(android.location.Location)>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
8call roads:
1 Mainhead roads:
-$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.hydrologis.geopaparazzi.GeopaparazziActivity dummyMainMethod_eu_hydrologis_geopaparazzi_GeopaparazziActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.GeopaparazziCoreActivity dummyMainMethod_eu_geopaparazzi_core_GeopaparazziCoreActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
7 Packageshead roads:
-$i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionSendSms: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <eu.geopaparazzi.core.GeopaparazziCoreActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><eu.geopaparazzi.library.permissions.AChainedPermissionHelper: eu.geopaparazzi.library.permissions.AChainedPermissionHelper getNextWithoutPermission(android.content.Context)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionSendSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
-$i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms: boolean hasPermission(android.content.Context)>[[-$i0 < 23]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getDashPhase()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getDashPhase()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getDashPhase()>has compatibility isssues！
-----------------------------------------
crashApis:8
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Stroke: java.awt.Shape createStrokedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <java.awt.BasicStroke: int getEndCap()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getEndCap()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: int getEndCap()>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <java.awt.Font: float getSize2D()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getSize2D()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><java.awt.Font: float getSize2D()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Font: float getSize2D()>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Shape getClip()>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>
One road protect good!
containsStatic:false
containsTry:true
32call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><org.locationtech.jts.awt.PolygonShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>
#1.the call statck between class <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()> to <java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: java.lang.Object getPixels()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: java.lang.Object getPixels()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void rotate(double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void rotate(double,double,double)>[]--><java.awt.geom.AffineTransform: void rotate(double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void rotate(double,double,double)> to <java.awt.geom.AffineTransform: void rotate(double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void rotate(double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void rotate(double)>[]--><java.awt.geom.AffineTransform: void rotate(double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void rotate(double)> to <java.awt.geom.AffineTransform: void rotate(double)>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <java.awt.geom.Area: boolean intersects(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)>[]--><java.awt.geom.Area: boolean intersects(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean hit(java.awt.Rectangle,java.awt.Shape,boolean)> to <java.awt.geom.Area: boolean intersects(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <java.awt.Color: java.awt.color.ColorSpace getColorSpace()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: java.awt.color.ColorSpace getColorSpace()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: java.awt.color.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <java.awt.BasicStroke: void <init>(float)> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.BasicStroke: void <init>(float)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: void <init>(float)>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)> is checking!!!
The life time of api is [1,8]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeQRCode: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#1.the call statck between class <com.itextpdf.text.pdf.BarcodeQRCode: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.Barcode39: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.Barcode39: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodePDF417: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#3.the call statck between class <com.itextpdf.text.pdf.BarcodePDF417: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeCodabar: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#5.the call statck between class <com.itextpdf.text.pdf.BarcodeCodabar: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodePostnet: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#6.the call statck between class <com.itextpdf.text.pdf.BarcodePostnet: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#7.the call statck between class <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.Barcode128: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#8.the call statck between class <com.itextpdf.text.pdf.Barcode128: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeInter25: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.BarcodeInter25: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.image.MemoryImageSource: void <init>(int,int,int[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>
#18.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.image.PixelGrabber: void <init>(java.awt.Image,int,int,int,int,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.font.FontRenderContext getFontRenderContext()>[]--><java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.font.FontRenderContext getFontRenderContext()>[]--><java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>
#3.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.font.FontRenderContext: void <init>(java.awt.geom.AffineTransform,boolean,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getType()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: int getType()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()> is checking!!!
The life time of api is [1,8]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>
One road protect good!
crashApis:21
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <java.awt.RenderingHints.Key: void <init>(int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <clinit>()>[[]]--><java.awt.RenderingHints.Key: void <init>(int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <clinit>()> to <java.awt.RenderingHints.Key: void <init>(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <init>(int)>[]--><java.awt.RenderingHints.Key: void <init>(int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D$HyperLinkKey: void <init>(int)> to <java.awt.RenderingHints.Key: void <init>(int)>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(java.util.Map)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: java.awt.Font deriveFont(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: int getWidth()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: int getWidth()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: int getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object get(java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)>[]--><java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.lang.Object getRenderingHint(java.awt.RenderingHints$Key)> to <java.awt.RenderingHints: java.lang.Object get(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <java.awt.Polygon: void <init>(int[],int[],int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><java.awt.Polygon: void <init>(int[],int[],int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Polygon: void <init>(int[],int[],int)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <java.awt.Color: int getAlpha()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getAlpha()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.Color: int getAlpha()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: int getAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)> is checking!!!
The life time of api is [1,8]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#3.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Line2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <java.awt.Polygon: void addPoint(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><java.awt.Polygon: void addPoint(int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)> to <java.awt.Polygon: void addPoint(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <java.awt.geom.Point2D: void setLocation(double,double)> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.core.ui.fragments.GeopaparazziActivityFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><eu.geopaparazzi.library.gps.GpsServiceUtilities: void startGpsService(android.app.Activity)>[[-$i0 < 26]]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void closePath()> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <java.awt.geom.Area: void intersect(java.awt.geom.Area)> is checking!!!
The life time of api is [1,8]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.Area: void intersect(java.awt.geom.Area)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void intersect(java.awt.geom.Area)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.network.NetworkUtilities: boolean isConnectionMobile(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <eu.geopaparazzi.library.network.NetworkUtilities: boolean isConnectionMobile(android.content.Context)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <java.awt.Graphics: void dispose()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Graphics: void dispose()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Graphics: void dispose()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void getMatrix(double[])> is checking!!!
The life time of api is [1,8]
39call roads:
0 Mainhead roads:
39 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void transform(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void transform(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void concatCTM(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void concatCTM(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: void addTemplate(com.itextpdf.text.pdf.PdfTemplate,java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: void addTemplate(com.itextpdf.text.pdf.PdfTemplate,java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void getMatrix(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void getMatrix(double[])>
One road protect good!
crashApis:34
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <java.awt.Color: int getRed()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getRed()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getRed()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getRed()>
One road protect good!
crashApis:35
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <java.awt.BasicStroke: int getLineJoin()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: int getLineJoin()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: int getLineJoin()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <javax.imageio.ImageWriteParam: void setCompressionMode(int)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionMode(int)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getHeight()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getHeight()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><java.awt.image.PixelGrabber: int getHeight()>
#18.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.image.PixelGrabber: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:38
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: int getHeight()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: int getHeight()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <java.awt.Font: boolean isTransformed()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isTransformed()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isTransformed()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isTransformed()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: boolean isTransformed()>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float[] getDashArray()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float[] getDashArray()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float[] getDashArray()>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <java.awt.Color: int getBlue()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getBlue()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getBlue()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getBlue()>
One road protect good!
crashApis:42
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: boolean isAlphaPremultiplied()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.ColorModel: boolean isAlphaPremultiplied()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.ColorModel: boolean isAlphaPremultiplied()>has compatibility isssues！
-----------------------------------------
crashApis:43
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>[]--><java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)> to <java.awt.RenderingHints: java.lang.Object put(java.lang.Object,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)> is checking!!!
The life time of api is [1,8]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.ShapeReader: void <clinit>()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#1.the call statck between class <org.locationtech.jts.awt.ShapeReader: void <clinit>()> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#7.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>has compatibility isssues！
-----------------------------------------
crashApis:45
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.core.ui.activities.AddNotesActivity$4: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[[try]]--><eu.geopaparazzi.library.util.Compat: void addTooltip(android.widget.Button,java.lang.String)>[[-$i0 < 26]]--><android.view.View: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <java.awt.geom.Line2D: void setLine(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D: void setLine(double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D: void setLine(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:46
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void setOutput(java.lang.Object)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void setOutput(java.lang.Object)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <java.awt.geom.Point2D: double getY()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getY()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.Point2D: double getY()>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.core.activities.DirectoryBrowserActivity dummyMainMethod_eu_geopaparazzi_library_core_activities_DirectoryBrowserActivity(android.content.Intent)>[]--><eu.geopaparazzi.library.core.activities.DirectoryBrowserActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:48
crashApisInMain:1
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
-i5 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.gps.GpsService dummyMainMethod_eu_geopaparazzi_library_gps_GpsService(android.content.Intent)>[]--><eu.geopaparazzi.library.gps.GpsService: int onStartCommand(android.content.Intent,int,int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
4 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void registerForLocationUpdates()>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onGpsStatusChanged(int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderDisabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onLocationChanged(android.location.Location)>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:49
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)> to <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)> to <java.awt.geom.Arc2D.Double: void <init>(double,double,double,double,double,double,int)>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <java.awt.Font: void <init>(java.lang.String,int,int)> is checking!!!
The life time of api is [1,8]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.DefaultFontMapper: java.awt.Font pdfToAwt(com.itextpdf.text.pdf.BaseFont,int)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#7.the call statck between class <com.itextpdf.awt.DefaultFontMapper: java.awt.Font pdfToAwt(com.itextpdf.text.pdf.BaseFont,int)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.Font: void <init>(java.lang.String,int,int)>
#10.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.Font: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <java.awt.Graphics: void fillRect(int,int,int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Graphics: void fillRect(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Graphics: void fillRect(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.Graphics getGraphics()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: java.awt.Graphics getGraphics()>
One road protect good!
crashApis:53
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Shape getClip()>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(float[])>[]--><java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(float[])> to <java.awt.geom.AffineTransform: void transform(float[],int,float[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:55
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.geom.AffineTransform getTransform()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.AffineTransform getTransform()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.geom.AffineTransform getTransform()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.AffineTransform getTransform()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.geom.AffineTransform getTransform()>has compatibility isssues！
-----------------------------------------
crashApis:56
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>
One road protect good!
crashApis:57
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void setPaint(java.awt.Paint)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void setPaint(java.awt.Paint)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.renderable.RenderableImage: java.awt.image.RenderedImage createDefaultRendering()>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: void next()> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: void next()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: void next()>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint2()>has compatibility isssues！
-----------------------------------------
crashApis:61
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void clear()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void clear()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void clear()>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.ShapeReader: org.locationtech.jts.geom.Geometry read(java.awt.Shape,double,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>has compatibility isssues！
-----------------------------------------
crashApis:63
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void <init>(java.util.Map)> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.RenderingHints: void <init>(java.util.Map)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.RenderingHints: void <init>(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:64
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void flush()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void flush()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getLineWidth()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getLineWidth()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getLineWidth()>has compatibility isssues！
-----------------------------------------
crashApis:65
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void setTransform(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:66
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: int currentSegment(double[])> is checking!!!
The life time of api is [1,8]
31call roads:
0 Mainhead roads:
31 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int currentSegment(double[])>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: int currentSegment(double[])>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <java.awt.font.GlyphVector: int getNumGlyphs()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.font.GlyphVector: int getNumGlyphs()>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.font.GlyphVector: int getNumGlyphs()>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.ShapeReader: org.locationtech.jts.geom.Geometry read(java.awt.Shape,double,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>[]--><org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>[]--><org.locationtech.jts.awt.ShapeCollectionPathIterator: void <init>(java.util.Collection,java.awt.geom.AffineTransform)>[]--><org.locationtech.jts.awt.ShapeCollectionPathIterator: void next()>[]--><org.locationtech.jts.awt.PolygonShape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>[]--><java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void <init>()> is checking!!!
The life time of api is [1,8]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
-i5 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.gps.GpsService dummyMainMethod_eu_geopaparazzi_library_gps_GpsService(android.content.Intent)>[]--><eu.geopaparazzi.library.gps.GpsService: int onStartCommand(android.content.Intent,int,int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
4 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void registerForLocationUpdates()>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderEnabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onGpsStatusChanged(int)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i5 < 26
Good road: <eu.geopaparazzi.library.gps.GpsService: void onProviderDisabled(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.library.gps.GpsService: void onLocationChanged(android.location.Location)>[[try]]--><eu.geopaparazzi.library.gps.GpsService: void broadcast(java.lang.String)>[]--><eu.geopaparazzi.library.gps.GpsService: void handleForegroundNotification(java.lang.String,android.content.Intent,int,double,double,double,float,float,float,long,int,int,int)>[[-i5 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)> to <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Ellipse2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:71
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void scale(double,double)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void scale(double,double)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void scale(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void scale(double,double)>
One road protect good!
crashApis:72
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <java.awt.Component: void <init>()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>()>[]--><java.awt.Component: void <init>()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>()> to <java.awt.Component: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>(com.itextpdf.awt.PdfGraphics2D$1)>[[]]--><java.awt.Component: void <init>()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D$FakeComponent: void <init>(com.itextpdf.awt.PdfGraphics2D$1)> to <java.awt.Component: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <java.awt.Color: float[] getColorComponents(float[])> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: float[] getColorComponents(float[])>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.Color: float[] getColorComponents(float[])>has compatibility isssues！
-----------------------------------------
crashApis:74
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <java.awt.Font: java.lang.String getFontName()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.lang.String getFontName()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.lang.String getFontName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.AsianFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getFontName()>
One road protect good!
crashApis:75
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.BufferedImage: void <init>(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)>has compatibility isssues！
-----------------------------------------
crashApis:76
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <java.awt.Font: java.util.Map getAttributes()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.util.Map getAttributes()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.util.Map getAttributes()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.util.Map getAttributes()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.util.Map getAttributes()>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <java.awt.BasicStroke: float getMiterLimit()> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStroke(java.awt.Stroke)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokeDiff(java.awt.Stroke,java.awt.Stroke)>[]--><java.awt.BasicStroke: float getMiterLimit()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.BasicStroke: float getMiterLimit()>has compatibility isssues！
-----------------------------------------
crashApis:78
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <javax.imageio.ImageWriteParam: void setCompressionQuality(float)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriteParam: void setCompressionQuality(float)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.plugins.jpeg.JPEGImageWriteParam: void <init>(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileexport.ExportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectimport.ImportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectexport.ExportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileimport.ImportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.defaultexports.ImportWmsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileexport.ExportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectimport.ImportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectexport.ExportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.defaultexports.ImportWmsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileimport.ImportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#2.the call statck between class <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void onLookupLocationClick(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#3.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void onLookupLocationClick(android.view.View)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <eu.geopaparazzi.core.mapview.MapviewActivity: boolean onContextItemSelected(android.view.MenuItem)>[[try]]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void routeTo(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#5.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void routeTo(android.view.View)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void goTo(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#6.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void goTo(android.view.View)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean contains(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean contains(java.awt.geom.Rectangle2D)> to <java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)>has compatibility isssues！
-----------------------------------------
crashApis:80
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <java.awt.Font: java.lang.String getName()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.lang.String getName()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.lang.String getName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: java.lang.String getName()>
One road protect good!
crashApis:81
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <java.awt.Polygon: void <init>()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><java.awt.Polygon: void <init>()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)> to <java.awt.Polygon: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:82
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <java.awt.geom.Point2D.Double: void <init>()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.ShapeWriter: void <init>(org.locationtech.jts.awt.PointTransformation)>[]--><org.locationtech.jts.awt.ShapeWriter: void <init>(org.locationtech.jts.awt.PointTransformation,org.locationtech.jts.awt.PointShapeFactory)>[]--><java.awt.geom.Point2D.Double: void <init>()>
#1.the call statck between class <org.locationtech.jts.awt.ShapeWriter: void <init>(org.locationtech.jts.awt.PointTransformation)> to <java.awt.geom.Point2D.Double: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.ShapeWriter: void <init>()>[]--><java.awt.geom.Point2D.Double: void <init>()>
#2.the call statck between class <org.locationtech.jts.awt.ShapeWriter: void <init>()> to <java.awt.geom.Point2D.Double: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:83
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <java.awt.Color: void <init>(int,int,int,int)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.Color: void <init>(int,int,int,int)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.Color: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:84
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>[]--><java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()> to <java.awt.Graphics2D: java.awt.GraphicsConfiguration getDeviceConfiguration()>has compatibility isssues！
-----------------------------------------
crashApis:85
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void <init>()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.AffineTransform: void <init>()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.AffineTransform: void <init>()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.AffineTransform: void <init>()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void <init>()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.AffineTransform: void <init>()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:86
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean contains(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean contains(double,double,double,double)>[]--><java.awt.geom.GeneralPath: boolean contains(double,double,double,double)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean contains(double,double,double,double)> to <java.awt.geom.GeneralPath: boolean contains(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)> is checking!!!
The life time of api is [1,8]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><com.itextpdf.awt.geom.PolylineShape: java.awt.Rectangle getBounds()>[]--><com.itextpdf.awt.geom.PolylineShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()> to <java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.Rectangle2D.Double: void <init>(double,double,double,double)>
One road protect good!
crashApis:88
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void <init>(double[])> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void <init>(double[])>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: void <init>(double[])>
One road protect good!
crashApis:89
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(int,float)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: java.awt.Font deriveFont(int,float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(int,float)>has compatibility isssues！
-----------------------------------------
crashApis:90
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)> is checking!!!
The life time of api is [1,29]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: anupam.acrylic.EasyPaint dummyMainMethod_anupam_acrylic_EasyPaint(android.content.Intent)>[]--><anupam.acrylic.EasyPaint: void onCreate(android.os.Bundle)>[]--><anupam.acrylic.EasyPaint: void loadFromIntents()>[]--><anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)>[[try]]--><android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
One road protect good!
1 Packageshead roads:
try
Good road with try: <anupam.acrylic.EasyPaint: void onActivityResult(int,int,android.content.Intent)>[]--><anupam.acrylic.EasyPaint: void setBackgroundUri(android.net.Uri)>[[try]]--><android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImageOp: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>has compatibility isssues！
-----------------------------------------
crashApis:91
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <java.awt.geom.Point2D: double getX()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.geom.Point2D: double getX()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.Point2D: double getX()>has compatibility isssues！
-----------------------------------------
crashApis:92
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <java.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int)>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.font.GlyphVector: java.awt.Shape getGlyphOutline(int)>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <java.awt.Font: int getStyle()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><java.awt.Font: int getStyle()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: int getStyle()>has compatibility isssues！
-----------------------------------------
crashApis:94
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <java.awt.Image: int getHeight(java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#4.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getHeight(java.awt.image.ImageObserver)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getHeight(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.ui.activities.NotesListActivity dummyMainMethod_eu_geopaparazzi_core_ui_activities_NotesListActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.ui.activities.NotesListActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
!!!this api will crash on sdk 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.map.gui.FeaturePagerActivity dummyMainMethod_eu_geopaparazzi_map_gui_FeaturePagerActivity(android.content.Intent)>[]--><eu.geopaparazzi.map.gui.FeaturePagerActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:96
crashApisInMain:2
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean intersects(double,double,double,double)>[]--><java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean intersects(double,double,double,double)> to <java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <java.awt.Rectangle: void <init>(int,int,int,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><java.awt.Rectangle: void <init>(int,int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)> to <java.awt.Rectangle: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><java.awt.Rectangle: void <init>(int,int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.Rectangle: void <init>(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,double,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,char[])>has compatibility isssues！
-----------------------------------------
crashApis:99
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean intersects(java.awt.geom.Rectangle2D)> to <java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <java.awt.color.ColorSpace: int getType()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.color.ColorSpace: int getType()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.color.ColorSpace: int getType()>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.awt.PdfGraphics2D: java.awt.geom.AffineTransform normalizeMatrix()>[]--><java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>
One road protect good!
crashApis:102
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.FontMetrics: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.Graphics)>has compatibility isssues！
-----------------------------------------
crashApis:103
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void <init>(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)>[]--><org.locationtech.jts.awt.PolygonShape: java.awt.geom.GeneralPath toPath(org.locationtech.jts.geom.Coordinate[])>[]--><java.awt.geom.GeneralPath: void <init>(int,int)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)> to <java.awt.geom.GeneralPath: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:104
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.geom.Point2D getPoint1()>has compatibility isssues！
-----------------------------------------
crashApis:105
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <java.awt.RenderingHints: void putAll(java.util.Map)> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void addRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)>[]--><java.awt.RenderingHints: void putAll(java.util.Map)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setRenderingHints(java.util.Map)> to <java.awt.RenderingHints: void putAll(java.util.Map)>has compatibility isssues！
-----------------------------------------
crashApis:106
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <java.awt.AlphaComposite: int getRule()> is checking!!!
The life time of api is [1,8]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.AlphaComposite: int getRule()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.AlphaComposite: int getRule()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.AlphaComposite: int getRule()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.AlphaComposite: int getRule()>has compatibility isssues！
-----------------------------------------
crashApis:107
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.font.GlyphVector layoutGlyphVector(java.awt.font.FontRenderContext,char[],int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:108
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getWidth()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getWidth()>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getWidth()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getWidth()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><java.awt.image.PixelGrabber: int getWidth()>
#18.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.image.PixelGrabber: int getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:109
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>
#1.the call statck between class <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()> to <java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>has compatibility isssues！
-----------------------------------------
crashApis:110
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.forms.FormActivity dummyMainMethod_eu_geopaparazzi_library_forms_FormActivity(android.content.Intent)>[]--><eu.geopaparazzi.library.forms.FormActivity: void onCreate(android.os.Bundle)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addTextView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GTextView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: void setTextAppearance(android.content.Context,android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
3 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.library.forms.FormDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addTextView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GTextView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: void setTextAppearance(android.content.Context,android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.plugin.style.StyleHelper: android.widget.LinearLayout$LayoutParams styleButton(android.content.Context,android.widget.Button)>[]--><eu.geopaparazzi.library.util.Compat: void setButtonTextAppearance(android.content.Context,android.widget.Button,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.library.forms.FormActivity: void onListItemSelected(java.lang.String)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addTextView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GTextView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,boolean,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: void setTextAppearance(android.content.Context,android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>has compatibility isssues！
-----------------------------------------
crashApis:111
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void translate(double,double)> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void translate(double,double)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void translate(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void translate(double,double)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void translate(double,double)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.geom.AffineTransform: void translate(double,double)>
One road protect good!
crashApis:112
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: java.awt.Font deriveFont(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:113
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void dispose()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void dispose()>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <java.awt.GradientPaint: java.awt.Color getColor1()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><java.awt.GradientPaint: java.awt.Color getColor1()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.GradientPaint: java.awt.Color getColor1()>has compatibility isssues！
-----------------------------------------
crashApis:114
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean contains(java.awt.geom.Point2D)>[]--><java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean contains(java.awt.geom.Point2D)> to <java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)>has compatibility isssues！
-----------------------------------------
crashApis:115
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <java.awt.Color: int getGreen()> is checking!!!
The life time of api is [1,8]
35call roads:
0 Mainhead roads:
35 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setColor(java.awt.Color)>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(java.awt.Paint)>[]--><java.awt.Color: int getGreen()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getGreen()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.Color: int getGreen()>
One road protect good!
crashApis:116
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void shear(double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void shear(double,double)>[]--><java.awt.geom.AffineTransform: void shear(double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void shear(double,double)> to <java.awt.geom.AffineTransform: void shear(double,double)>has compatibility isssues！
-----------------------------------------
crashApis:117
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <java.awt.Color: int getRGB()> is checking!!!
The life time of api is [1,8]
39call roads:
0 Mainhead roads:
39 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#4.the call statck between class <com.itextpdf.text.pdf.BarcodeDatamatrix: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#6.the call statck between class <com.itextpdf.text.pdf.BarcodeEAN: java.awt.Image createAwtImage(java.awt.Color,java.awt.Color)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#9.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.BaseColor prepareColor(java.awt.Color)>[]--><java.awt.Color: int getRGB()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Color: int getRGB()>has compatibility isssues！
-----------------------------------------
crashApis:118
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: double getDeterminant()> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.geom.AffineTransform: double getDeterminant()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.geom.AffineTransform: double getDeterminant()>has compatibility isssues！
-----------------------------------------
crashApis:119
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <java.awt.Shape: java.awt.Rectangle getBounds()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()>[]--><java.awt.Shape: java.awt.Rectangle getBounds()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Rectangle getClipBounds()> to <java.awt.Shape: java.awt.Rectangle getBounds()>has compatibility isssues！
-----------------------------------------
crashApis:120
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileexport.ExportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectimport.ImportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectexport.ExportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileimport.ImportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.defaultexports.ImportWmsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <eu.geopaparazzi.core.ui.activities.ImportActivity$2: void onClick(android.view.View)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileexport.ExportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectimport.ImportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.projectexport.ExportProjectsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.defaultexports.ImportWmsMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)>[]--><eu.geopaparazzi.plugins.profileimport.ImportProfilesMenuEntry: void onClick(eu.geopaparazzi.library.util.IActivitySupporter)>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#2.the call statck between class <eu.geopaparazzi.core.ui.activities.ExportActivity$2: void onClick(android.view.View)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void onLookupLocationClick(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#3.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void onLookupLocationClick(android.view.View)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.network.NetworkUtilities: boolean isConnectionMobile(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#4.the call statck between class <eu.geopaparazzi.library.network.NetworkUtilities: boolean isConnectionMobile(android.content.Context)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <eu.geopaparazzi.core.mapview.MapviewActivity: boolean onContextItemSelected(android.view.MenuItem)>[[try]]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void routeTo(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#6.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void routeTo(android.view.View)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <eu.geopaparazzi.library.core.activities.GeocodeActivity: void goTo(android.view.View)>[]--><eu.geopaparazzi.library.core.activities.GeocodeActivity: boolean checkNetwork()>[]--><eu.geopaparazzi.library.network.NetworkUtilities: boolean isNetworkAvailable(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#7.the call statck between class <eu.geopaparazzi.library.core.activities.GeocodeActivity: void goTo(android.view.View)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:121
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.ColorModel: java.awt.image.WritableRaster createCompatibleWritableRaster(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:122
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)> to <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)> to <java.awt.geom.RoundRectangle2D.Double: void <init>(double,double,double,double,double,double)>has compatibility isssues！
-----------------------------------------
crashApis:123
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: int getStatus()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.PixelGrabber: int getStatus()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: boolean contains(double,double)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: boolean contains(double,double)>[]--><java.awt.geom.GeneralPath: boolean contains(double,double)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: boolean contains(double,double)> to <java.awt.geom.GeneralPath: boolean contains(double,double)>has compatibility isssues！
-----------------------------------------
crashApis:124
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void moveTo(float,float)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)>[]--><org.locationtech.jts.awt.PolygonShape: java.awt.geom.GeneralPath toPath(org.locationtech.jts.geom.Coordinate[])>[]--><java.awt.geom.GeneralPath: void moveTo(float,float)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)> to <java.awt.geom.GeneralPath: void moveTo(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:125
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageIO: java.util.Iterator getImageWritersByFormatName(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void <init>()> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.Graphics2D: void <init>()>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.Graphics2D: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:126
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)> is checking!!!
The life time of api is [1,8]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>
#10.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Rectangle2D.Float: void <init>(float,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:127
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <java.awt.AlphaComposite: float getAlpha()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)>[]--><java.awt.AlphaComposite: float getAlpha()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setComposite(java.awt.Composite)> to <java.awt.AlphaComposite: float getAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:128
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><javax.imageio.ImageWriter: void write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
23call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.ui.activities.ProfileChartActivity dummyMainMethod_eu_geopaparazzi_core_ui_activities_ProfileChartActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.ui.activities.ProfileChartActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.library.forms.FormActivity dummyMainMethod_eu_geopaparazzi_library_forms_FormActivity(android.content.Intent)>[]--><eu.geopaparazzi.library.forms.FormActivity: void onCreate(android.os.Bundle)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addOneToManyConnectedComboView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GOneToManyConnectedComboView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.ui.activities.AddNotesActivity dummyMainMethod_eu_geopaparazzi_core_ui_activities_AddNotesActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.ui.activities.AddNotesActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
22 Packageshead roads:
try
Good road with try: <eu.geopaparazzi.library.forms.FormDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addOneToManyConnectedComboView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GOneToManyConnectedComboView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.plugin.style.StyleHelper: android.widget.LinearLayout$LayoutParams styleButton(android.content.Context,android.widget.Button)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.forms.FormListFragment: void onActivityCreated(android.os.Bundle)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.PolygonOnSelectionToolGroup: void onClick(android.view.View)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.PolygonMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.LineMainEditingToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.LineCreateFeatureToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,eu.geopaparazzi.map.features.Feature)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.core.dialogs.ColorStrokeDialogFragment$4: void onProgressChanged(android.widget.SeekBar,int,boolean)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.LineOnSelectionToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.LineCreateFeatureToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,eu.geopaparazzi.map.features.Feature)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.LineOnSelectionToolGroup: void onClick(android.view.View)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.LineMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.PointOnSelectionToolGroup: void onClick(android.view.View)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.PointMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.PolygonMainEditingToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.PolygonCreateFeatureToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.core.mapview.MapviewActivity: void onClick(android.view.View)>[]--><eu.geopaparazzi.core.mapview.MapviewActivity: void toggleEditing()>[]--><eu.geopaparazzi.map.features.tools.impl.LineMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addNfcUIDView(android.app.Activity,int,android.widget.LinearLayout,java.lang.String,java.lang.String,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GNfcUidView: void <init>(android.app.Activity,android.util.AttributeSet,int,android.widget.LinearLayout,java.lang.String,java.lang.String,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GNfcUidView: void handleView(android.app.Activity,int,android.widget.LinearLayout,java.lang.String,java.lang.String,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.PolygonCreateFeatureToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.PolygonMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.core.ui.fragments.GeopaparazziActivityFragment: void onResume()>[]--><eu.geopaparazzi.core.ui.fragments.GeopaparazziActivityFragment: void checkProfileColor(eu.geopaparazzi.library.profiles.Profile)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.library.database.DbCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.gui.FeaturePageAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.library.forms.FormActivity: void onListItemSelected(java.lang.String)>[[try]]--><eu.geopaparazzi.library.forms.FormDetailFragment: void refreshView(eu.geopaparazzi.library.forms.FormInfoHolder)>[]--><eu.geopaparazzi.library.forms.FormUtilities: eu.geopaparazzi.library.forms.views.GView addOneToManyConnectedComboView(android.content.Context,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.forms.views.GOneToManyConnectedComboView: void <init>(android.content.Context,android.util.AttributeSet,android.widget.LinearLayout,java.lang.String,java.lang.String,java.util.LinkedHashMap,java.lang.String)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.PointMainEditingToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.PointCreateFeatureToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,eu.geopaparazzi.map.features.Feature)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.PointCreateFeatureToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.PointMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.features.tools.impl.LineCreateFeatureToolGroup: void onClick(android.view.View)>[]--><eu.geopaparazzi.map.features.tools.impl.LineMainEditingToolGroup: void <init>(eu.geopaparazzi.map.GPMapView)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.SelectionTool$1: void onPostExecute(java.lang.String)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.PointOnSelectionToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,java.util.List)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.SelectionTool$1: void onPostExecute(java.lang.String)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.PolygonOnSelectionToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,java.util.List)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
try
Good road with try: <eu.geopaparazzi.map.features.tools.impl.SelectionTool$1: void onPostExecute(java.lang.String)>[[try]]--><eu.geopaparazzi.map.features.tools.impl.LineOnSelectionToolGroup: void <init>(eu.geopaparazzi.map.GPMapView,java.util.List)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <eu.geopaparazzi.map.layers.utils.SpatialiteColorStrokeDialogFragment$4: void onProgressChanged(android.widget.SeekBar,int,boolean)>[]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i0 < 23
-$i1 < 23
Good road: <eu.geopaparazzi.map.gui.MapLayerAdapter: void updateEditingColor(eu.geopaparazzi.map.gui.MapLayerAdapter$ViewHolder,boolean)>[[-$i0 < 23]]--><eu.geopaparazzi.library.util.Compat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:false
containsTry:true
23call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void scale(double,double)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void transform(java.awt.geom.AffineTransform)> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Stroke transformStroke(java.awt.Stroke)>[]--><java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>has compatibility isssues！
-----------------------------------------
crashApis:129
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: int currentSegment(float[])> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.ShapeCollectionPathIterator: int currentSegment(float[])>[]--><java.awt.geom.PathIterator: int currentSegment(float[])>
#1.the call statck between class <org.locationtech.jts.awt.ShapeCollectionPathIterator: int currentSegment(float[])> to <java.awt.geom.PathIterator: int currentSegment(float[])>has compatibility isssues！
-----------------------------------------
crashApis:130
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <java.awt.Image: int getWidth(java.awt.image.ImageObserver)> is checking!!!
The life time of api is [1,8]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#4.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.Image: int getWidth(java.awt.image.ImageObserver)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.Image: int getWidth(java.awt.image.ImageObserver)>has compatibility isssues！
-----------------------------------------
crashApis:131
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)>[]--><com.itextpdf.awt.geom.PolylineShape: boolean intersects(java.awt.geom.Rectangle2D)>[]--><java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)>
#1.the call statck between class <com.itextpdf.awt.geom.PolylineShape: boolean intersects(double,double,double,double)> to <java.awt.geom.Line2D: boolean intersects(java.awt.geom.Rectangle2D)>has compatibility isssues！
-----------------------------------------
crashApis:132
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.BufferedImage: java.awt.image.ColorModel getColorModel()>
One road protect good!
crashApis:133
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)>[]--><java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)> to <java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:134
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.geom.PolylineShapeIterator: int currentSegment(double[])>[]--><java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.AffineTransform: void transform(double[],int,double[],int,int)>has compatibility isssues！
-----------------------------------------
crashApis:135
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <java.awt.Font: int getSize()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)>[]--><org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.awt.Font,org.locationtech.jts.geom.GeometryFactory)>[]--><java.awt.Font: int getSize()>
#1.the call statck between class <org.locationtech.jts.awt.FontGlyphReader: org.locationtech.jts.geom.Geometry read(java.lang.String,java.lang.String,int,org.locationtech.jts.geom.GeometryFactory)> to <java.awt.Font: int getSize()>has compatibility isssues！
-----------------------------------------
crashApis:136
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <java.awt.geom.PathIterator: int getWindingRule()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><java.awt.geom.PathIterator: int getWindingRule()>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)> to <java.awt.geom.PathIterator: int getWindingRule()>has compatibility isssues！
-----------------------------------------
crashApis:137
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: java.awt.Rectangle getBounds()>[]--><java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: java.awt.Rectangle getBounds()> to <java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>has compatibility isssues！
-----------------------------------------
crashApis:138
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <java.awt.geom.GeneralPath: void lineTo(float,float)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)>[]--><org.locationtech.jts.awt.PolygonShape: java.awt.geom.GeneralPath toPath(org.locationtech.jts.geom.Coordinate[])>[]--><java.awt.geom.GeneralPath: void lineTo(float,float)>
#1.the call statck between class <org.locationtech.jts.awt.PolygonShape: void <init>(org.locationtech.jts.geom.Coordinate[],java.util.Collection)> to <java.awt.geom.GeneralPath: void lineTo(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:139
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: void <init>(int,int,int)> is checking!!!
The life time of api is [1,8]
36call roads:
0 Mainhead roads:
36 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics2D getDG2()>[]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)> to <java.awt.image.BufferedImage: void <init>(int,int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: void <init>(int,int,int)>
One road protect good!
crashApis:140
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <java.awt.geom.Area: void <init>(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#1.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#2.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#3.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#4.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#5.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#6.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#7.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#8.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#9.the call statck between class <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><java.awt.geom.Area: void <init>(java.awt.Shape)>
#10.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)> to <java.awt.geom.Area: void <init>(java.awt.Shape)>has compatibility isssues！
-----------------------------------------
crashApis:141
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.pdf.parser.PdfImageObject: java.awt.image.BufferedImage getBufferedImage()>[]--><javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>
#1.the call statck between class <com.itextpdf.text.pdf.parser.PdfImageObject: java.awt.image.BufferedImage getBufferedImage()> to <javax.imageio.ImageIO: java.awt.image.BufferedImage read(java.io.InputStream)>has compatibility isssues！
-----------------------------------------
crashApis:142
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <java.awt.image.ColorModel: int getPixelSize()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[]--><java.awt.image.ColorModel: int getPixelSize()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <java.awt.Font: boolean isItalic()> is checking!!!
The life time of api is [1,8]
16call roads:
0 Mainhead roads:
16 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: boolean isItalic()>
#7.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: boolean isItalic()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void doAttributes(java.text.AttributedCharacterIterator)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setFont(java.awt.Font)>[]--><com.itextpdf.awt.PdfGraphics2D: com.itextpdf.text.pdf.BaseFont getCachedBaseFont(java.awt.Font)>[[try]]--><com.itextpdf.awt.DefaultFontMapper: com.itextpdf.text.pdf.BaseFont awtToPdf(java.awt.Font)>[[try]]--><java.awt.Font: boolean isItalic()>
One road protect good!
crashApis:143
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <java.awt.Font: float getItalicAngle()> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getItalicAngle()>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.Font: float getItalicAngle()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><java.awt.Font: float getItalicAngle()>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.Font: float getItalicAngle()>has compatibility isssues！
-----------------------------------------
crashApis:144
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <java.awt.Graphics2D: void fill(java.awt.Shape)> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.Graphics2D: void fill(java.awt.Shape)>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
4call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.hydrologis.geopaparazzi.GeopaparazziActivity dummyMainMethod_eu_hydrologis_geopaparazzi_GeopaparazziActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.GeopaparazziCoreActivity dummyMainMethod_eu_geopaparazzi_core_GeopaparazziCoreActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
3 Packageshead roads:
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionSendSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
5call roads:
1 Mainhead roads:
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.hydrologis.geopaparazzi.GeopaparazziActivity dummyMainMethod_eu_hydrologis_geopaparazzi_GeopaparazziActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: eu.geopaparazzi.core.GeopaparazziCoreActivity dummyMainMethod_eu_geopaparazzi_core_GeopaparazziCoreActivity(android.content.Intent)>[]--><eu.geopaparazzi.core.GeopaparazziCoreActivity: void onCreate(android.os.Bundle)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
4 Packageshead roads:
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionGetAccounts: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionRecieveSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 21 22 
Error road: <eu.geopaparazzi.core.GeopaparazziCoreActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><eu.geopaparazzi.library.permissions.AChainedPermissionHelper: eu.geopaparazzi.library.permissions.AChainedPermissionHelper getNextWithoutPermission(android.content.Context)>[]--><eu.geopaparazzi.library.permissions.PermissionFineLocation: boolean hasPermission(android.content.Context)>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#3.the call statck between class <eu.geopaparazzi.core.GeopaparazziCoreActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <eu.geopaparazzi.library.permissions.PermissionSendSms: void requestPermission(android.app.Activity)>[[-i0 < 23]]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
One road protect good!
crashApis:145
crashApisInMain:3
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <java.awt.image.PixelGrabber: boolean grabPixels()> is checking!!!
The life time of api is [1,8]
34call roads:
0 Mainhead roads:
34 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(java.awt.Image,java.awt.Color,boolean)>[[try]]--><java.awt.image.PixelGrabber: boolean grabPixels()>
One road protect good!
containsStatic:false
containsTry:true
35call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <java.awt.image.BufferedImage: int getHeight()> is checking!!!
The life time of api is [1,8]
30call roads:
0 Mainhead roads:
30 Packageshead roads:
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawLine(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphics(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawPolyline(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clipRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillOval(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawArc(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void clearRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fillRect(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphicsShapes(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void fillPolygon(int[],int[],int)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void fill(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void setClip(int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setClip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.awt.PdfGraphics2D: void drawRoundRect(int,int,int,int,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void draw(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createPrinterGraphics(float,float,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfPrinterGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float,java.awt.print.PrinterJob)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
try
Good road with try: <com.itextpdf.text.pdf.PdfContentByte: java.awt.Graphics2D createGraphicsShapes(float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,boolean)>[]--><com.itextpdf.awt.PdfGraphics2D: void <init>(com.itextpdf.text.pdf.PdfContentByte,float,float,com.itextpdf.awt.FontMapper,boolean,boolean,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void clip(java.awt.Shape)>[]--><com.itextpdf.awt.PdfGraphics2D: void followPath(java.awt.Shape,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void setStrokePaint()>[]--><com.itextpdf.awt.PdfGraphics2D: void setPaint(boolean,double,double,boolean)>[[try]]--><java.awt.image.BufferedImage: int getHeight()>
One road protect good!
containsStatic:false
containsTry:true
31call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>has compatibility isssues！
-----------------------------------------
crashApis:146
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)> is checking!!!
The life time of api is [1,8]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawGlyphVector(java.awt.font.GlyphVector,float,float)>[]--><java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.font.GlyphVector: java.awt.Shape getOutline(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:147
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)> is checking!!!
The life time of api is [1,8]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()>[]--><java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>
#1.the call statck between class <org.locationtech.jts.awt.GeometryCollectionShape: java.awt.geom.Rectangle2D getBounds2D()> to <java.awt.geom.Rectangle2D: void add(java.awt.geom.Rectangle2D)>has compatibility isssues！
-----------------------------------------
crashApis:148
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)> is checking!!!
The life time of api is [1,8]
8call roads:
0 Mainhead roads:
8 Packageshead roads:
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#1.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,int,int)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#2.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawString(java.lang.String,float,float)>[]--><com.itextpdf.awt.PdfGraphics2D: void setTransform(java.awt.geom.AffineTransform)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#3.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawString(java.text.AttributedCharacterIterator,int,int)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#4.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#5.the call statck between class <com.itextpdf.awt.PdfGraphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#6.the call statck between class <com.itextpdf.awt.PdfGraphics2D: java.awt.Graphics create()> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)>[]--><com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfContentByte,java.awt.Image,float)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#7.the call statck between class <com.itextpdf.text.Image: com.itextpdf.text.Image getInstance(com.itextpdf.text.pdf.PdfWriter,java.awt.Image,float)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 21 22 23 24 25 26 27 28 29 30 31 
Error road: <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)>[]--><com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,java.awt.Image,java.awt.geom.AffineTransform,java.awt.Color,java.awt.image.ImageObserver)>[]--><java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>
#8.the call statck between class <com.itextpdf.awt.PdfGraphics2D: boolean drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)> to <java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>has compatibility isssues！
-----------------------------------------
crashApis:149
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
crashApis numbers:149
crashApis numbers in main road:3
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 20 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 21 this app may have error api use(at least): 146 and error api roads: 533
On Android Version 22 this app may have error api use(at least): 144 and error api roads: 530
On Android Version 23 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 24 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 25 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 26 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 27 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 28 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 29 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 30 this app may have error api use(at least): 142 and error api roads: 522
On Android Version 31 this app may have error api use(at least): 145 and error api roads: 550
