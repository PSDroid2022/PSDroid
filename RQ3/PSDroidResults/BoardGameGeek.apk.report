/home/ys/桌面/CompactDroid（复件）/dataset2/BoardGameGeek.apk
Entry Points[com.boardgamegeek.ui.SearchResultsActivity, com.boardgamegeek.ui.PersonActivity, com.boardgamegeek.provider.BggProvider, com.boardgamegeek.ui.BuddyCollectionActivity, com.boardgamegeek.ui.GameColorsActivity, com.boardgamegeek.ui.PlayerPlaysActivity, com.boardgamegeek.BggApplication, com.boardgamegeek.auth.AuthenticationService, leakcanary.internal.NotificationReceiver, com.boardgamegeek.ui.GamePlaysActivity, com.boardgamegeek.ui.GameActivity, com.boardgamegeek.ui.ForumsActivity, com.boardgamegeek.ui.PlaysSummaryActivity, com.boardgamegeek.ui.CategoriesActivity, com.boardgamegeek.ui.NewPlayActivity, com.boardgamegeek.service.CancelReceiver, com.boardgamegeek.ui.GeekListActivity, com.mikepenz.iconics.IconicsContentProvider, com.boardgamegeek.ui.PlayActivity, leakcanary.internal.LeakCanaryFileProvider, com.boardgamegeek.ui.LocationActivity, com.boardgamegeek.ui.HotnessActivity, com.boardgamegeek.ui.LogPlayerActivity, com.boardgamegeek.ui.ThreadActivity, com.boardgamegeek.ui.CollectionActivity, com.boardgamegeek.ui.GeekListItemActivity, com.boardgamegeek.ui.DataActivity, com.boardgamegeek.ui.HomeActivity, com.boardgamegeek.ui.LoginActivity, com.boardgamegeek.ui.LogPlayActivity, com.boardgamegeek.ui.GamePlayStatsActivity, com.boardgamegeek.ui.CommentsActivity, com.boardgamegeek.ui.ImageActivity, com.boardgamegeek.ui.CategoryActivity, com.boardgamegeek.ui.PlayerColorsActivity, com.boardgamegeek.ui.DesignersActivity, com.boardgamegeek.ui.PlayStatsActivity, com.boardgamegeek.ui.MechanicActivity, com.boardgamegeek.ui.ArtistsActivity, com.boardgamegeek.ui.PlayersActivity, com.boardgamegeek.ui.PlaysActivity, leakcanary.internal.AppWatcherInstaller$MainProcess, com.boardgamegeek.firebase.BggFirebaseMessagingService, com.boardgamegeek.ui.BuddyActivity, com.boardgamegeek.pref.SettingsActivity, com.boardgamegeek.ui.ArticleActivity, com.boardgamegeek.ui.CollectionDetailsActivity, leakcanary.internal.RequestStoragePermissionActivity, com.boardgamegeek.ui.LocationsActivity, com.boardgamegeek.ui.ForumActivity, com.boardgamegeek.ui.TopGamesActivity, leakcanary.internal.activity.LeakActivity, com.mikepenz.aboutlibraries.ui.LibsActivity, com.boardgamegeek.service.SyncService, leakcanary.internal.HeapAnalyzerService, com.boardgamegeek.ui.BuddyPlaysActivity, com.boardgamegeek.ui.GameDetailActivity, com.boardgamegeek.ui.GameCollectionItemActivity, com.boardgamegeek.ui.PublishersActivity, com.boardgamegeek.ui.GeekListsActivity, com.boardgamegeek.ui.MechanicsActivity, com.boardgamegeek.ui.BuddiesActivity]
FllowDroidcallgraph size:20963
Soot started on Sat Aug 27 19:49:04 CST 2022
StaticCheck:<com.google.firebase.iid.FirebaseInstanceId: boolean isDebugLogEnabled()>$yysi0 != 23
Soot finished on Sat Aug 27 19:49:22 CST 2022
Soot has run for 0 min. 17 sec.
Found 2 additional DEX files. Now visiting them one by one.
Soot started on Sat Aug 27 19:49:22 CST 2022
StaticCheck:<okhttp3.internal.platform.Android10Platform: boolean isSupported>$yysi0 < 29
StaticCheck:<com.google.firebase.messaging.CommonNotificationBuilder: boolean isValidIcon(android.content.res.Resources,int)>$yysi1 == 26
StaticCheck:<org.greenrobot.eventbus.util.ErrorDialogManager: boolean isSupportActivity(android.app.Activity)>$yysi0 < 11
StaticCheck:<com.google.firebase.messaging.TopicsSyncTask: boolean isLoggable()>$yysi0 != 23
StaticCheck:<com.google.android.material.textfield.DropdownMenuEndIconDelegate: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<com.google.firebase.messaging.TopicsSubscriber: boolean isDebugLogEnabled()>$yysi0 != 23
Soot finished on Sat Aug 27 19:51:34 CST 2022
Soot has run for 2 min. 12 sec.
Soot started on Sat Aug 27 19:51:34 CST 2022
StaticCheck:<com.google.android.gms.internal.common.zzl: boolean zzam()>$yysi0 < 24
StaticCheck:<androidx.slidingpanelayout.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>i0 < 18
StaticCheck:<androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)>$yysi0 < 19
StaticCheck:<androidx.core.text.util.LinkifyCompat: boolean shouldAddLinksFallbackToFramework()>$yysi0 < 28
StaticCheck:<androidx.drawerlayout.widget.DrawerLayout: boolean CAN_HIDE_DESCENDANTS>$yysi0 < 19
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>$yysi0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>i0 < 26
StaticCheck:<androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>i0 < 25
StaticCheck:<androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>i0 < 16
StaticCheck:<androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>$yysi0 < 28
StaticCheck:<androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()>$yysi0 > 20
StaticCheck:<androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>$yysi0 < 24
StaticCheck:<androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>i0 < 23
StaticCheck:<androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>i0 < 29
StaticCheck:<androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)>i0 < 21
StaticCheck:<androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)>i0 < 16
StaticCheck:<com.google.android.gms.measurement.internal.zzkw: boolean zza(android.content.Context,boolean)>$yysi0 < 24
StaticCheck:<com.google.android.material.button.MaterialButtonHelper: boolean IS_LOLLIPOP>$yysi0 < 21
StaticCheck:<androidx.transition.TransitionUtils: boolean HAS_IS_ATTACHED_TO_WINDOW>$yysi0 < 19
StaticCheck:<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>i0 < 22
StaticCheck:<androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean isDeviceProtectedStorage(android.content.Context)>$yysi0 < 24
StaticCheck:<androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)>$yysi0 < 16
StaticCheck:<androidx.transition.ChangeTransform: boolean SUPPORTS_VIEW_REMOVAL_SUPPRESSION>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)>i0 < 21
StaticCheck:<androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>$yysi1 < 21
StaticCheck:<androidx.core.graphics.BitmapCompat: boolean hasMipMap(android.graphics.Bitmap)>$yysi0 < 18
StaticCheck:<androidx.documentfile.provider.DocumentFile: boolean isDocumentUri(android.content.Context,android.net.Uri)>$yysi0 < 19
StaticCheck:<androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR>$yysi0 >= 21
StaticCheck:<androidx.core.widget.ListViewCompat: boolean canScrollList(android.widget.ListView,int)>i1 < 19
StaticCheck:<androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)>$yysi0 >= 15
StaticCheck:<androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>$yysi0 < 23
StaticCheck:<androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)>$yysi0 < 21
StaticCheck:<com.google.android.material.ripple.RippleUtils: boolean USE_FRAMEWORK_RIPPLE>$yysi0 < 21
StaticCheck:<androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>i0 < 23
StaticCheck:<androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST>$yysi0 == 18
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastNMR1()>$yysi0 < 25
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastOMR1()>$yysi0 < 27
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastQ()>$yysi0 < 29
StaticCheck:<androidx.core.os.BuildCompat: boolean isAtLeastR()>$yysi0 >= 30
StaticCheck:<androidx.core.view.MarginLayoutParamsCompat: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)>$yysi0 < 17
StaticCheck:<androidx.print.PrintHelper: boolean PRINT_ACTIVITY_RESPECTS_ORIENTATION>$yysi0 < 20
StaticCheck:<androidx.print.PrintHelper: boolean systemSupportsPrint()>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.accessibility.AccessibilityManagerCompat: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener)>$yysi0 < 19
StaticCheck:<androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(android.view.ScaleGestureDetector)>$yysi0 < 19
StaticCheck:<com.google.android.material.internal.CollapsingTextHelper: boolean USE_SCALING_TEXTURE>$yysi0 >= 18
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastIceCreamSandwichMR1()>$yysi0 < 15
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBean()>$yysi0 < 16
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR1()>$yysi0 < 17
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastJellyBeanMR2()>$yysi0 < 18
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKat()>$yysi0 < 19
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastKitKatWatch()>$yysi0 < 20
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipop()>$yysi0 < 21
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastLollipopMR1()>$yysi0 < 22
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastM()>$yysi0 < 23
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastN()>$yysi0 < 24
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastO()>$yysi0 < 26
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastP()>$yysi0 < 28
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastQ()>$yysi0 < 29
StaticCheck:<com.google.android.gms.common.util.PlatformVersion: boolean isAtLeastR()>$yysi0 >= 30
StaticCheck:<androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>i1 < 21
StaticCheck:<androidx.core.app.ActivityManagerCompat: boolean isLowRamDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>$yysi0 < 29
StaticCheck:<androidx.core.app.NotificationCompat: boolean getLocalOnly(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.core.app.NotificationCompat: boolean isGroupSummary(android.app.Notification)>$yysi0 < 20
StaticCheck:<androidx.legacy.app.ActionBarDrawerToggle: boolean assumeMaterial(android.content.Context)>$yysi0 < 21
StaticCheck:<androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP>i0 >= 21
StaticCheck:<com.google.android.material.badge.BadgeUtils: boolean USE_COMPAT_PARENT>$yysi0 >= 18
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>$yysi2 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>$yysi4 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)>$yysi0 < 28
StaticCheck:<androidx.core.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)>$yysi0 < 15
StaticCheck:<androidx.core.view.ViewCompat: boolean hasOverlappingRendering(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)>$yysi0 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isInLayout(android.view.View)>$yysi0 < 18
StaticCheck:<androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isLayoutDirectionResolved(android.view.View)>$yysi0 < 19
StaticCheck:<androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>$yysi0 < 21
StaticCheck:<androidx.core.view.ViewCompat: boolean isPaddingRelative(android.view.View)>$yysi0 < 17
StaticCheck:<androidx.core.view.ViewCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>$yysi1 < 16
StaticCheck:<androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>$yysi0 < 26
StaticCheck:<androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>$yysi1 < 24
StaticCheck:<androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>$yysi1 < 21
StaticCheck:<androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()>$yysi0 == 26
StaticCheck:<androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)>i0 < 28
StaticCheck:<androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>i0 < 28
StaticCheck:<com.google.android.material.snackbar.BaseTransientBottomBar: boolean USE_OFFSET_API>$yysi0 < 16
StaticCheck:<androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>i1 < 25
StaticCheck:<androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>i1 < 28
StaticCheck:<com.boardgamegeek.util.FileUtils: boolean shouldUseDefaultFolders()>$yysi0 >= 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>$yysi0 < 21
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)>$yysi0 < 19
StaticCheck:<androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>i1 < 23
StaticCheck:<androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE>$yysi0 < 27
StaticCheck:<com.google.android.gms.internal.measurement.zzcr: boolean zza()>$yysi0 < 24
StaticCheck:<androidx.core.os.TraceCompat: boolean isEnabled()>i0 < 29
Soot finished on Sat Aug 27 19:53:08 CST 2022
Soot has run for 1 min. 33 sec.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 19
Declared Target Sdk version is: 29
Declared Max Sdk version is: -1
Collected 456 Android APIs in the primary DEX file
Collected 4548 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()> is checking!!!
The life time of api is [23,31]
38call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onResume()>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void displayEditMode()>[]--><com.boardgamegeek.ui.HeroActivity: void setFabImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
37 Packageshead roads:
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundColor(int)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundColor(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
One road protect good!
-$yysi0 < 21
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)>[]--><com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>[]--><com.google.android.material.button.MaterialButtonHelper: void setBackgroundOverwritten()>[]--><com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#4.the call statck between class <com.google.android.material.button.MaterialButton: void setBackgroundResource(int)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#5.the call statck between class <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$toggleEditMode(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void toggleEditMode()>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void displayEditMode()>[]--><com.boardgamegeek.ui.HeroActivity: void setFabImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#6.the call statck between class <com.boardgamegeek.ui.GameCollectionItemActivity: void access$toggleEditMode(com.boardgamegeek.ui.GameCollectionItemActivity)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateEditTextBackground()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#7.the call statck between class <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
i0 < 21
-$yysi0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$PlayAdapter$AddPlayerViewHolder: void bind()>[]--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[i0 < 21]]--><com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable()>[]--><com.google.android.material.button.MaterialButtonHelper: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeDrawable(boolean)>[[-$yysi0 < 21]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21]][[i0 < 23]]
-i0 < 21
i0 < 23
!!!this api will crash on sdk 21 22 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)>[]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void onApplySupportImageTint()>[]--><androidx.core.graphics.drawable.DrawableCompat: void clearColorFilter(android.graphics.drawable.Drawable)>[[-i0 < 21], [i0 < 23]]--><android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>
#10.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)> to <android.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getDrawable()>has compatibility isssues！
-----------------------------------------
crashApis:1
crashApisInMain:1
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: void setTouchDelegateInfo(android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean addDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller: java.util.List getAllSessions()> is checking!!!
The life time of api is [21,31]
4999call roads:
1 Mainhead roads:
4998 Packageshead roads:
Roads number exceed, exit!4998
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()> is checking!!!
The life time of api is [21,31]
4999call roads:
1 Mainhead roads:
4998 Packageshead roads:
Roads number exceed, exit!4998
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:2
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void tagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void tagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>[[-$i1 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setScreenReaderFocusable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean getClipToPadding()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i6 < 21
Good road: <androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)>[[-i6 < 21]]--><android.view.ViewGroup: boolean getClipToPadding()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setFontVariationSettings(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: int getColor(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getNoBackupFilesDir()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)>[]--><com.google.firebase.iid.FirebaseInstanceId: void <init>(com.google.firebase.FirebaseApp,com.google.firebase.events.Subscriber,com.google.firebase.platforminfo.UserAgentPublisher,com.google.firebase.heartbeatinfo.HeartBeatInfo,com.google.firebase.installations.FirebaseInstallationsApi)>[]--><com.google.firebase.iid.FirebaseInstanceId: void <init>(com.google.firebase.FirebaseApp,com.google.firebase.iid.Metadata,java.util.concurrent.Executor,java.util.concurrent.Executor,com.google.firebase.events.Subscriber,com.google.firebase.platforminfo.UserAgentPublisher,com.google.firebase.heartbeatinfo.HeartBeatInfo,com.google.firebase.installations.FirebaseInstallationsApi)>[[try]]--><com.google.firebase.iid.Store: void <init>(android.content.Context)>[]--><com.google.firebase.iid.Store: void checkForRestore(java.lang.String)>[]--><androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)>[[-i0 < 21]]--><android.content.Context: java.io.File getNoBackupFilesDir()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.RequestStoragePermissionActivity dummyMainMethod_leakcanary_internal_RequestStoragePermissionActivity(android.content.Intent)>[]--><leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <androidx.fragment.app.FragmentActivity$HostCallbacks: void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)>[]--><androidx.fragment.app.FragmentActivity: void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int)>[[try]]--><androidx.core.app.ActivityCompat: void requestPermissions(android.app.Activity,java.lang.String[],int)>[[-i1 < 23]]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
One road protect good!
crashApis:3
crashApisInMain:2
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTint(int)> is checking!!!
The life time of api is [21,31]
23call roads:
0 Mainhead roads:
23 Packageshead roads:
$i1 != 21
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)>[[$i1 != 21]]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void draw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
$i1 < 21
Good road: <com.google.android.material.button.MaterialButton: void <init>(android.content.Context)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>[[-$yysi0 < 21]]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#3.the call statck between class <com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#5.the call statck between class <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void showError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#6.the call statck between class <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[[-$yysi0 < 21]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.appyvet.materialrangebar.RangeBar: void onDraw(android.graphics.Canvas)>[]--><com.appyvet.materialrangebar.PinView: void draw(android.graphics.Canvas)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#8.the call statck between class <com.appyvet.materialrangebar.RangeBar: void onDraw(android.graphics.Canvas)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#9.the call statck between class <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
$i1 < 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateTextInputBoxState()>[]--><com.google.android.material.textfield.TextInputLayout: void tintEndIconOnError(boolean)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)>[[$i1 < 21]]--><androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)>[]--><android.graphics.drawable.Drawable: void setTint(int)>
#10.the call statck between class <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)> to <android.graphics.drawable.Drawable: void setTint(int)>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:true
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.widget.TextView: int getBreakStrategy()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getBreakStrategy()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setTouchModal(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontVariationSettings()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21]][[$i0 < 17]][[-$i0 < 26]][[$i0 < 24]]
$i0 < 21
$i0 < 17
-$i0 < 26
$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[$i0 < 21], [$i0 < 17], [-$i0 < 26], [$i0 < 24]]--><android.graphics.Paint: java.lang.String getFontVariationSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalBefore()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.os.Trace: boolean isEnabled()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.core.os.TraceCompat: boolean isEnabled()>[[-i0 < 29]]--><android.os.Trace: boolean isEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getLinkUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getLinkUri()>has compatibility isssues！
-----------------------------------------
crashApis:5
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean shouldShowIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[[-$i0 < 28]]--><android.app.RemoteAction: boolean shouldShowIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)>[]--><android.graphics.Color: android.graphics.Color valueOf(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color toColor(long)> to <android.graphics.Color: android.graphics.Color valueOf(long)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.view.ViewGroup: boolean isTransitionGroup()> is checking!!!
The life time of api is [21,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)> is checking!!!
The life time of api is [22,31]
3call roads:
1 Mainhead roads:
-$i0 < 22
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HomeActivity dummyMainMethod_com_boardgamegeek_ui_HomeActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.HomeActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.auth.Authenticator: void signOut(android.content.Context)>[]--><com.boardgamegeek.auth.Authenticator: void removeAccountCompat(android.accounts.AccountManager,android.accounts.Account,boolean)>[[-$i0 < 22]]--><com.boardgamegeek.auth.Authenticator: void removeAccountWithActivity(android.accounts.AccountManager,android.accounts.Account,boolean)>[]--><android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
One road protect good!
2 Packageshead roads:
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.boardgamegeek.auth.Authenticator: void removeAccounts(android.content.Context)>[]--><com.boardgamegeek.auth.Authenticator: void removeAccountCompat(android.accounts.AccountManager,android.accounts.Account,boolean)>[[-$i0 < 22]]--><com.boardgamegeek.auth.Authenticator: void removeAccountWithActivity(android.accounts.AccountManager,android.accounts.Account,boolean)>[]--><android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
One road protect good!
-$i0 < 22
Good road: <com.boardgamegeek.pref.SignOutDialogFragment: void onDialogClosed(boolean)>[]--><com.boardgamegeek.auth.Authenticator: void signOut(android.content.Context)>[]--><com.boardgamegeek.auth.Authenticator: void removeAccountCompat(android.accounts.AccountManager,android.accounts.Account,boolean)>[[-$i0 < 22]]--><com.boardgamegeek.auth.Authenticator: void removeAccountWithActivity(android.accounts.AccountManager,android.accounts.Account,boolean)>[]--><android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityHeading(boolean)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setAccessibilityHeading(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$5: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setAccessibilityHeading(boolean)>has compatibility isssues！
-----------------------------------------
-i0 < 28
Good road: <androidx.preference.PreferenceCategory: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>[[-i0 < 28]]--><android.view.View: void setAccessibilityHeading(boolean)>
One road protect good!
crashApis:7
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void removeOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.view.ViewGroup: int getNestedScrollAxes()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewGroupCompat: int getNestedScrollAxes(android.view.ViewGroup)>[[-$i0 < 21]]--><android.view.ViewGroup: int getNestedScrollAxes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: void <init>(java.util.Map)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: void <init>(java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getResultsSource(android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]
-i1 < 20
i0 < 26
-i0 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: int getResultsSource(android.content.Intent)>[[-i0 < 28]]--><android.app.RemoteInput: int getResultsSource(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.app.NotificationManager: int getImportance()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: int getImportance()>[[-$i0 < 24]]--><android.app.NotificationManager: int getImportance()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: void <init>()>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:8
crashApisInMain:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[[-$i0 < 26]]--><com.boardgamegeek.util.NotificationUtils: void createNotificationChannels(android.content.Context)>[]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.view.View: android.content.res.ColorStateList getBackgroundTintList()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$PlayAdapter$AddPlayerViewHolder: void bind()>[]--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createColorAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: int getBackgroundTint(android.view.View)>[]--><androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)>[[-$i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setMandatorySystemGestureInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.util.Range: android.util.Range extend(java.lang.Comparable)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)>[]--><android.util.Range: android.util.Range extend(java.lang.Comparable)>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,java.lang.Comparable)> to <android.util.Range: android.util.Range extend(java.lang.Comparable)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean isElegantTextHeight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 21]]--><android.graphics.Paint: boolean isElegantTextHeight()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetLeft()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()>[]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()> to <android.view.WindowInsets: int getSystemWindowInsetLeft()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetLeft()>
One road protect good!
crashApis:11
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[$i0 < 21]][[-$i0 < 26]]
i2 < 21
$i0 < 21
-$i0 < 26
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]--><android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface build()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface build()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)>[[-$i0 < 24]]--><android.widget.TextView: android.graphics.PorterDuff.Mode getCompoundDrawableTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#1.the call statck between class <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
-i0 < 21
!!!this api will crash on sdk 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.WindowInsets: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String)> is checking!!!
The life time of api is [21,31]
4992call roads:
1 Mainhead roads:
4991 Packageshead roads:
Roads number exceed, exit!4991
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMinTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMinTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMinTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setColorized(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.os.Message: void setAsynchronous(boolean)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: void setAsynchronous(android.os.Message,boolean)>[[try], [-i0 < 16]]--><android.os.Message: void setAsynchronous(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int getFlags()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)>[]--><androidx.media.AudioAttributesCompat: int getFlags()>[]--><androidx.media.AudioAttributesImplApi21: int getFlags()>[]--><android.media.AudioAttributes: int getFlags()>
#1.the call statck between class <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)> to <android.media.AudioAttributes: int getFlags()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)>[]--><androidx.media.AudioAttributesCompat: int getFlags()>[]--><androidx.media.AudioAttributesImplApi21: int getFlags()>[]--><android.media.AudioAttributes: int getFlags()>
#2.the call statck between class <androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)> to <android.media.AudioAttributes: int getFlags()>has compatibility isssues！
-----------------------------------------
$i0 < 26
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat: int getVolumeControlStream()>[]--><androidx.media.AudioAttributesImplApi21: int getVolumeControlStream()>[[$i0 < 26]]--><androidx.media.AudioAttributesImplApi21: int getFlags()>[]--><android.media.AudioAttributes: int getFlags()>
#3.the call statck between class <androidx.media.AudioAttributesCompat: int getVolumeControlStream()> to <android.media.AudioAttributes: int getFlags()>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)> is checking!!!
The life time of api is [23,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
37 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23]][[i0 < 29]][[try]]
-i0 < 23
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)>
One road protect good!
containsStatic:true
containsTry:true
38call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.os.BaseBundle: double getDouble(java.lang.String)> is checking!!!
The life time of api is [21,31]
4983call roads:
1 Mainhead roads:
4982 Packageshead roads:
Roads number exceed, exit!4982
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.util.SizeF: float getHeight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.SizeKt: float component2(android.util.SizeF)>[]--><android.util.SizeF: float getHeight()>
#1.the call statck between class <androidx.core.util.SizeKt: float component2(android.util.SizeF)> to <android.util.SizeF: float getHeight()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: float getHeight()>
#2.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)> to <android.util.SizeF: float getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:14
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setOverlapAnchor(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)>[[-i0 < 23]]--><android.widget.PopupWindow: void setOverlapAnchor(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: int getSelectionMode()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.view.View: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.widget.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[]--><android.view.View: void drawableHotspotChanged(float,float)>
#1.the call statck between class <com.boardgamegeek.ui.widget.ForegroundLinearLayout: void drawableHotspotChanged(float,float)> to <android.view.View: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.widget.ForegroundImageView: void drawableHotspotChanged(float,float)>[[]]--><android.view.View: void drawableHotspotChanged(float,float)>
#2.the call statck between class <com.boardgamegeek.ui.widget.ForegroundImageView: void drawableHotspotChanged(float,float)> to <android.view.View: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[]--><android.view.View: void drawableHotspotChanged(float,float)>
#3.the call statck between class <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)> to <android.view.View: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:15
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.widget.TextView: void setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.view.View: void setElevation(float)> is checking!!!
The life time of api is [21,31]
35call roads:
1 Mainhead roads:
-i0 < 21
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.ItemTouchHelper$Callback: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.ItemTouchUIUtilImpl: void clearView(android.view.View)>[[-i0 < 21]]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-i0 < 21
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.ItemTouchHelper$Callback: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><androidx.recyclerview.widget.ItemTouchUIUtilImpl: void clearView(android.view.View)>[[-i0 < 21]]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
34 Packageshead roads:
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignView$NAVIGATION_VIEW$1: com.google.android.material.navigation.NavigationView invoke(android.content.Context)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.navigation.NavigationView: void setElevation(float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.helper.widget.Layer: void setElevation(float)>[]--><android.view.View: void setElevation(float)>
#2.the call statck between class <androidx.constraintlayout.helper.widget.Layer: void setElevation(float)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)>[]--><android.view.View: void setElevation(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip: void setElevation(float)>[]--><android.view.View: void setElevation(float)>
#4.the call statck between class <com.google.android.material.chip.Chip: void setElevation(float)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout$StateCache: void apply()>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void setState(int,int,int)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout: void onAttachedToWindow()>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.widget.Group: void setElevation(float)>[]--><android.view.View: void setElevation(float)>
#7.the call statck between class <androidx.constraintlayout.widget.Group: void setElevation(float)> to <android.view.View: void setElevation(float)>has compatibility isssues！
-----------------------------------------
-$i1 < 21
Good road: <androidx.constraintlayout.motion.widget.TimeCycleSplineSet$ElevationSet: boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache)>[[-$i1 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setElevation(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void setState(int,int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayoutStates: void updateConstraints(int,float,float)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setElevation(float)>
One road protect good!
crashApis:16
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri)>[[-$i0 < 21]]--><android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeStepGranularity()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeStepGranularity(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeStepGranularity()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: int getDesiredHeightResId()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: int getDesiredHeightResId()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: int getDesiredHeightResId()>has compatibility isssues！
-----------------------------------------
crashApis:17
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.graphics.Paint: java.lang.String getFontFeatureSettings()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.Paint: java.lang.String getFontFeatureSettings()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><android.app.RemoteInput: void addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
5077call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void preProcess()>[]--><com.google.android.gms.measurement.internal.zzif: void run()>[]--><com.google.android.gms.measurement.internal.zzic: void zza(int,java.lang.Exception,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfu: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfv: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[[try]]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)>[]--><com.google.android.gms.measurement.internal.zzij: void zza(android.os.Bundle,long)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
5076 Packageshead roads:
Roads number exceed, exit!5076
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.String getId()> is checking!!!
The life time of api is [25,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.graphics.Paint: void setBlendMode(android.graphics.BlendMode)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.core.graphics.PaintKt: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>[]--><androidx.core.graphics.PaintCompat: boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat)>[[-i0 < 29]]--><android.graphics.Paint: void setBlendMode(android.graphics.BlendMode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.widget.PopupWindow: boolean getOverlapAnchor()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: boolean getOverlapAnchor(android.widget.PopupWindow)>[[-i0 < 23]]--><android.widget.PopupWindow: boolean getOverlapAnchor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.view.ViewGroup: void suppressLayout(boolean)> is checking!!!
The life time of api is [29,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.ChangeBounds$9: void onTransitionResume(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.Visibility$DisappearListener: void suppressLayout(boolean)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.ChangeBounds$9: void onTransitionCancel(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.ChangeBounds$9: void onTransitionEnd(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18]][[$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]
-$i0 < 18
$i0 < 29
try
Good road with try: <androidx.transition.ChangeBounds$9: void onTransitionPause(androidx.transition.Transition)>[]--><androidx.transition.ViewGroupUtils: void suppressLayout(android.view.ViewGroup,boolean)>[[-$i0 < 18], [$i0 < 29]]--><androidx.transition.ViewGroupUtils: void hiddenSuppressLayout(android.view.ViewGroup,boolean)>[[try]]--><android.view.ViewGroup: void suppressLayout(boolean)>
One road protect good!
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.view.View: boolean dispatchNestedPreFling(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: boolean dispatchNestedPreFling(android.view.View,float,float)>[[-$i0 < 21]]--><android.view.View: boolean dispatchNestedPreFling(float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)>[]--><androidx.core.app.ActivityCompat: void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>[[-i0 < 21]]--><android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.app.Person: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.graphics.Color: float red(long)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float getRed(long)>[]--><android.graphics.Color: float red(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getRed(long)> to <android.graphics.Color: float red(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component1(long)>[]--><android.graphics.Color: float red(long)>
#2.the call statck between class <androidx.core.graphics.ColorKt: float component1(long)> to <android.graphics.Color: float red(long)>has compatibility isssues！
-----------------------------------------
crashApis:18
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])> is checking!!!
The life time of api is [29,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setPersons(android.app.Person[])>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.view.Window: android.transition.Transition getSharedElementReturnTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void setUpReturnTransform(android.app.Activity,android.view.Window)>[]--><android.view.Window: android.transition.Transition getSharedElementReturnTransition()>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)> to <android.view.Window: android.transition.Transition getSharedElementReturnTransition()>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setUri(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)>[[-i0 < 28]]--><android.view.ViewConfiguration: boolean shouldShowMenuShortcutsWhenKeyboardPresent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>[[-$i0 < 24]]--><android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)>[]--><android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>
#2.the call statck between class <okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)> to <android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.view.View: void setTransitionName(java.lang.String)> is checking!!!
The life time of api is [21,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: boolean renameTo(java.lang.String)>[[try]]--><android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.view.ViewParent: void onStopNestedScroll(android.view.View)> is checking!!!
The life time of api is [21,31]
5006call roads:
1 Mainhead roads:
5005 Packageshead roads:
Roads number exceed, exit!5005
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.view.Window: void setStatusBarColor(int)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.mikepenz.aboutlibraries.ui.LibsActivity dummyMainMethod_com_mikepenz_aboutlibraries_ui_LibsActivity(android.content.Intent)>[]--><com.mikepenz.aboutlibraries.ui.LibsActivity: void onCreate(android.os.Bundle)>[[-$i0 < 21]]--><android.view.Window: void setStatusBarColor(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)> is checking!!!
The life time of api is [23,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
36 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setEllipsize(android.text.TextUtils.TruncateAt)>
One road protect good!
containsStatic:true
containsTry:true
37call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <android.app.Activity: void postponeEnterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()>[]--><androidx.core.app.ActivityCompat: void postponeEnterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void postponeEnterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getPid()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getPid()> to <android.media.session.MediaSessionManager.RemoteUserInfo: int getPid()>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: void <init>(android.graphics.Rect,java.util.List)>[[-$i0 < 28]]--><android.view.DisplayCutout: void <init>(android.graphics.Rect,java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isImportantForAccessibility()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isImportantForAccessibility()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 99 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: void <init>(java.io.FileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 100 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
0call roads:
0 Mainhead roads:
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 101 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.HeapAnalyzerService dummyMainMethod_leakcanary_internal_HeapAnalyzerService(android.content.Intent)>[]--><leakcanary.internal.ForegroundService: void onCreate()>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
1 Packageshead roads:
-i0 < 26
Good road: <leakcanary.internal.HeapAnalyzerService: void onAnalysisProgress(shark.OnAnalysisProgressListener$Step)>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.Notification.Builder: android.app.Notification.Builder setChannelId(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 102 Potential Issue API: SDKCheck of <android.util.Range: java.lang.Comparable getLower()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)>[]--><androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getStart()>[]--><android.util.Range: java.lang.Comparable getLower()>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)> to <android.util.Range: java.lang.Comparable getLower()>has compatibility isssues！
-----------------------------------------
crashApis:22
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 103 Potential Issue API: SDKCheck of <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontVariationAxis: android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:23
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 104 Potential Issue API: SDKCheck of <android.app.Activity: android.net.Uri getReferrer()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 22
Good road: <androidx.core.app.ActivityCompat: android.net.Uri getReferrer(android.app.Activity)>[[-i0 < 22]]--><android.app.Activity: android.net.Uri getReferrer()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 105 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.util.Set getNamedContentLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 106 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 107 Potential Issue API: SDKCheck of <android.view.View: void dispatchFinishTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchFinishTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchFinishTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 108 Potential Issue API: SDKCheck of <android.view.View: boolean isNestedScrollingEnabled()> is checking!!!
The life time of api is [21,31]
18call roads:
0 Mainhead roads:
18 Packageshead roads:
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.BarLineChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void enableScroll()>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.BarLineChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void disableScroll()>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0]][[$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]
$z0 == 0
$yysi0 < 16
-$i0 < 21
Good road: <com.google.android.material.bottomsheet.BottomSheetBehavior: boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int)>[[$z0 == 0], [$yysi0 < 16]]--><com.google.android.material.bottomsheet.BottomSheetBehavior: android.view.View findScrollingChild(android.view.View)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.PieRadarChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void disableScroll()>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.PieRadarChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void enableScroll()>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.behavior.SwipeDismissBehavior$1: void onViewCaptured(android.view.View,int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 >= 18
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.github.chrisbanes.photoview.PhotoViewAttacher: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
try
Good road with try: <com.github.chrisbanes.photoview.PhotoViewAttacher: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.chrisbanes.photoview.CustomGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>[[try]]--><com.github.chrisbanes.photoview.CustomGestureDetector: boolean processTouchEvent(android.view.MotionEvent)>[]--><com.github.chrisbanes.photoview.PhotoViewAttacher$1: void onDrag(float,float)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.ItemTouchHelper: void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.slider.RangeSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.slider.Slider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)>[]--><androidx.core.view.ViewCompat: boolean isNestedScrollingEnabled(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isNestedScrollingEnabled()>
One road protect good!
containsStatic:true
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 109 Potential Issue API: SDKCheck of <android.content.res.TypedArray: int getChangingConfigurations()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 110 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: android.os.IBinder getBinder()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()>[]--><android.app.job.JobServiceEngine: android.os.IBinder getBinder()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: android.os.IBinder compatGetBinder()> to <android.app.job.JobServiceEngine: android.os.IBinder getBinder()>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 111 Potential Issue API: SDKCheck of <android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void <init>(android.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.platform.FadeModeEvaluator,com.google.android.material.transition.platform.FitModeEvaluator,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,boolean)>[]--><android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void <init>(android.transition.PathMotion,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,android.view.View,android.graphics.RectF,com.google.android.material.shape.ShapeAppearanceModel,float,int,int,int,int,boolean,boolean,com.google.android.material.transition.platform.FadeModeEvaluator,com.google.android.material.transition.platform.FitModeEvaluator,com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup,boolean)> to <android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 112 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: void recycle()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void recycle()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: void recycle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 113 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean isContextual()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [i0 < 24], [-i1 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[i0 < 24]][[-i1 < 29]]
i0 < 28
i0 < 24
-i1 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [i0 < 24], [-i1 < 29]]--><android.app.Notification.Action: boolean isContextual()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 114 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getDisabledMessage()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 115 Potential Issue API: SDKCheck of <android.util.Range: android.util.Range extend(android.util.Range)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,android.util.Range)>[]--><android.util.Range: android.util.Range extend(android.util.Range)>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range plus(android.util.Range,android.util.Range)> to <android.util.Range: android.util.Range extend(android.util.Range)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 116 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()> is checking!!!
The life time of api is [21,31]
4999call roads:
1 Mainhead roads:
4998 Packageshead roads:
Roads number exceed, exit!4998
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 117 Potential Issue API: SDKCheck of <android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$yysi0 < 28
Good road: <androidx.core.text.util.LinkifyCompat: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$yysi0 < 28]]--><android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 118 Potential Issue API: SDKCheck of <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat z(float)>[[-$i0 < 21]]--><android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 119 Potential Issue API: SDKCheck of <android.media.VolumeProvider: void <init>(int,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.VolumeProviderCompatApi21$1: void <init>(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate)>[]--><android.media.VolumeProvider: void <init>(int,int,int)>
#1.the call statck between class <androidx.media.VolumeProviderCompatApi21$1: void <init>(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate)> to <android.media.VolumeProvider: void <init>(int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:28
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 120 Potential Issue API: SDKCheck of <android.graphics.Color: float[] getComponents()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float[] getComponents()>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float[] getComponents()>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 121 Potential Issue API: SDKCheck of <android.app.Notification.Action: int getSemanticAction()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24]][[-i0 < 28]]
i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 24], [-i0 < 28]]--><android.app.Notification.Action: int getSemanticAction()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 122 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.app.PendingIntent getActionIntent()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.app.PendingIntent getActionIntent()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.app.PendingIntent getActionIntent()>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 123 Potential Issue API: SDKCheck of <android.graphics.Color: boolean isSrgb(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: boolean isSrgb(long)>[]--><android.graphics.Color: boolean isSrgb(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: boolean isSrgb(long)> to <android.graphics.Color: boolean isSrgb(long)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 124 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)>[]--><androidx.media.MediaBrowserServiceCompatApi26: void notifyChildrenChanged(java.lang.Object,java.lang.String,android.os.Bundle)>[]--><android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)> to <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String,android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 125 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 126 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 21], [i0 < 29], [try], [i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 21]][[i0 < 29]][[try]][[i0 < 23]]
-i0 < 21
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 21], [i0 < 29], [try], [i0 < 23]]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 127 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getUri()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getUri()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 128 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
5030call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzls: boolean zzd()>[]--><com.google.android.gms.internal.measurement.zzdh: java.lang.Object zzc()>[[try]]--><com.google.android.gms.internal.measurement.zzcy: com.google.android.gms.internal.measurement.zzcy zza(android.content.Context)>[[try]]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
5029 Packageshead roads:
Roads number exceed, exit!5029
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 129 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setExactAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 130 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 131 Potential Issue API: SDKCheck of <android.graphics.Color: int toArgb()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color)>[]--><android.graphics.Color: int toArgb()>
#1.the call statck between class <androidx.core.graphics.drawable.ColorDrawableKt: android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color)> to <android.graphics.Color: int toArgb()>has compatibility isssues！
-----------------------------------------
crashApis:33
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 132 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 133 Potential Issue API: SDKCheck of <android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)>[[-$i0 < 21]]--><android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 134 Potential Issue API: SDKCheck of <android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setDuplexMode(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 135 Potential Issue API: SDKCheck of <android.widget.TextView: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 136 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 137 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[[]]--><android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
#1.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)>[]--><android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
#2.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)> to <android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 138 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeight(int)>has compatibility isssues！
-----------------------------------------
crashApis:35
crashApisInMain:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 139 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getShortcutId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getShortcutId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getShortcutId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 140 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetRight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()>[]--><android.view.WindowInsets: int getSystemWindowInsetRight()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()> to <android.view.WindowInsets: int getSystemWindowInsetRight()>has compatibility isssues！
-----------------------------------------
crashApis:36
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 141 Potential Issue API: SDKCheck of <android.graphics.Paint: boolean hasGlyph(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.graphics.PaintCompat: boolean hasGlyph(android.graphics.Paint,java.lang.String)>[[-i0 < 23]]--><android.graphics.Paint: boolean hasGlyph(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 142 Potential Issue API: SDKCheck of <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat zBy(float)>[[-$i0 < 21]]--><android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 143 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
5005call roads:
1 Mainhead roads:
5004 Packageshead roads:
Roads number exceed, exit!5004
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 144 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle.Message: android.app.Notification.MessagingStyle.Message setData(java.lang.String,android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 145 Potential Issue API: SDKCheck of <android.app.RemoteInput: int getEditChoicesBeforeSending()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 29
Good road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[[-i0 < 29]]--><android.app.RemoteInput: int getEditChoicesBeforeSending()>
One road protect good!
-i1 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i1 < 29]]--><android.app.RemoteInput: int getEditChoicesBeforeSending()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 146 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isShowingHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isShowingHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 147 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBubbleMetadata(android.app.Notification.BubbleMetadata)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 148 Potential Issue API: SDKCheck of <android.widget.TextView: int getHyphenationFrequency()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23]][[i0 < 28]]
-i0 < 23
i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 23], [i0 < 28]]--><android.widget.TextView: int getHyphenationFrequency()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 149 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDouble(java.lang.String,double)> is checking!!!
The life time of api is [21,31]
5006call roads:
1 Mainhead roads:
5005 Packageshead roads:
Roads number exceed, exit!5005
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 150 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i2 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)>[[], [-$i2 < 26]]--><android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)> to <android.view.MenuItem: android.view.MenuItem setNumericShortcut(char,int)>has compatibility isssues！
-----------------------------------------
crashApis:37
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 151 Potential Issue API: SDKCheck of <android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 152 Potential Issue API: SDKCheck of <android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.textfield.CutoutDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.textfield.CutoutDrawable: void preDraw(android.graphics.Canvas)>[]--><com.google.android.material.textfield.CutoutDrawable: void saveCanvasLayer(android.graphics.Canvas)>[[-$i0 < 21]]--><android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 153 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#7.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#8.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:38
crashApisInMain:5
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 154 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: int getRestrictBackgroundStatus()> is checking!!!
The life time of api is [24,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)>[[-$i0 < 24]]--><android.net.ConnectivityManager: int getRestrictBackgroundStatus()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: int getRestrictBackgroundStatus(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: int getRestrictBackgroundStatus()>has compatibility isssues！
-----------------------------------------
crashApis:39
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 155 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannelGroups()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]
$i0 < 28
-$i0 < 26
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannelGroups()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannelGroups()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 156 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
5015call roads:
1 Mainhead roads:
5014 Packageshead roads:
Roads number exceed, exit!5014
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 157 Potential Issue API: SDKCheck of <android.view.View: void setScreenReaderFocusable(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)>[]--><android.view.View: void setScreenReaderFocusable(boolean)>
#1.the call statck between class <androidx.core.view.ViewCompat$3: void frameworkSet(android.view.View,java.lang.Boolean)> to <android.view.View: void setScreenReaderFocusable(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:40
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 158 Potential Issue API: SDKCheck of <android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>[[-$i0 < 23], [$i0 < 24]]
###Multi invoking in one method, need manual check!!!<okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>[[-$i0 < 23]][[$i0 < 24]]
-$i0 < 23
$i0 < 24
Good road: <okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>[[-$i0 < 23], [$i0 < 24]]--><android.security.NetworkSecurityPolicy: boolean isCleartextTrafficPermitted()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 159 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 160 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()>[]--><android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()> to <android.view.WindowInsets: android.view.DisplayCutout getDisplayCutout()>has compatibility isssues！
-----------------------------------------
crashApis:41
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 161 Potential Issue API: SDKCheck of <android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
23call roads:
1 Mainhead roads:
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.SearchResultsActivity dummyMainMethod_com_boardgamegeek_ui_SearchResultsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysSummaryActivity dummyMainMethod_com_boardgamegeek_ui_PlaysSummaryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CommentsActivity dummyMainMethod_com_boardgamegeek_ui_CommentsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerPlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlayerPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoriesActivity dummyMainMethod_com_boardgamegeek_ui_CategoriesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArticleActivity dummyMainMethod_com_boardgamegeek_ui_ArticleActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionActivity dummyMainMethod_com_boardgamegeek_ui_CollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HotnessActivity dummyMainMethod_com_boardgamegeek_ui_HotnessActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyActivity dummyMainMethod_com_boardgamegeek_ui_BuddyActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayActivity dummyMainMethod_com_boardgamegeek_ui_PlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HomeActivity dummyMainMethod_com_boardgamegeek_ui_HomeActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyPlaysActivity dummyMainMethod_com_boardgamegeek_ui_BuddyPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ThreadActivity dummyMainMethod_com_boardgamegeek_ui_ThreadActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListsActivity dummyMainMethod_com_boardgamegeek_ui_GeekListsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_PlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onResume()>[]--><com.boardgamegeek.ui.HeroActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArtistsActivity dummyMainMethod_com_boardgamegeek_ui_ArtistsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DataActivity dummyMainMethod_com_boardgamegeek_ui_DataActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationActivity dummyMainMethod_com_boardgamegeek_ui_LocationActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DesignersActivity dummyMainMethod_com_boardgamegeek_ui_DesignersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationsActivity dummyMainMethod_com_boardgamegeek_ui_LocationsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlaysActivity dummyMainMethod_com_boardgamegeek_ui_GamePlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoryActivity dummyMainMethod_com_boardgamegeek_ui_CategoryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void loadToolbarImage(int)>[]--><com.boardgamegeek.util.ImageUtils: void safelyLoadImage(android.widget.ImageView,int,com.boardgamegeek.util.ImageUtils$Callback)>[]--><com.boardgamegeek.util.ImageUtils: void safelyLoadImage(android.widget.ImageView,java.util.Queue,com.boardgamegeek.util.ImageUtils$Callback)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayerActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayerActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionDetailsActivity dummyMainMethod_com_boardgamegeek_ui_CollectionDetailsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PublishersActivity dummyMainMethod_com_boardgamegeek_ui_PublishersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayersActivity dummyMainMethod_com_boardgamegeek_ui_PlayersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.TopGamesActivity dummyMainMethod_com_boardgamegeek_ui_TopGamesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumActivity dummyMainMethod_com_boardgamegeek_ui_ForumActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumsActivity dummyMainMethod_com_boardgamegeek_ui_ForumsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ImageActivity dummyMainMethod_com_boardgamegeek_ui_ImageActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ImageActivity: void onCreate(android.os.Bundle)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddiesActivity dummyMainMethod_com_boardgamegeek_ui_BuddiesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
22 Packageshead roads:
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.util.ImageUtils: void access$safelyLoadThumbnail(com.boardgamegeek.util.ImageUtils,android.widget.ImageView,java.util.Queue,int)>[]--><com.boardgamegeek.util.ImageUtils: void safelyLoadThumbnail(android.widget.ImageView,java.util.Queue,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onActivityCreated(android.os.Bundle)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.PlaysFragment: void onActivityCreated(android.os.Bundle)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList$default(android.widget.ImageView,java.lang.String,int,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.BuddyFragment$onViewCreated$2: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.DrawerActivity: void access$refreshDrawer(com.boardgamegeek.ui.DrawerActivity)>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshDrawer()>[]--><com.boardgamegeek.ui.DrawerActivity: void refreshHeader()>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.adapter.PlayerNameAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.squareup.picasso.DeferredRequestCreator: boolean onPreDraw()>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.util.ImageUtils: void safelyLoadThumbnail$default(com.boardgamegeek.util.ImageUtils,android.widget.ImageView,java.util.Queue,int,int,java.lang.Object)>[]--><com.boardgamegeek.util.ImageUtils: void safelyLoadThumbnail(android.widget.ImageView,java.util.Queue,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.adapter.GamePagerAdapter$updateTabs$6: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail$default(android.widget.ImageView,java.lang.String,int,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.BuddiesFragment$BuddiesAdapter$BuddyViewHolder: void bind(com.boardgamegeek.entities.UserEntity)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.PersonActivity$onCreate$2: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void loadToolbarImage(java.lang.String)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadUrl(android.widget.ImageView,java.lang.String,com.boardgamegeek.util.ImageUtils$Callback)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$PlayAdapter$HeaderViewHolder$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$PlayersAdapter$PlayersViewHolder: void bind(com.boardgamegeek.entities.PlayerEntity)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnail(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.DesignersFragment$DesignersAdapter$DesignerViewHolder: void bind(com.boardgamegeek.entities.PersonEntity)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.ArtistsFragment$ArtistsAdapter$ArtistViewHolder: void bind(com.boardgamegeek.entities.PersonEntity)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.GameActivity: void access$changeImage(com.boardgamegeek.ui.GameActivity,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeImage(java.lang.String,java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void loadToolbarImage(java.lang.String)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadUrl(android.widget.ImageView,java.lang.String,com.boardgamegeek.util.ImageUtils$Callback)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$changeImage(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void changeImage()>[]--><com.boardgamegeek.ui.HeroActivity: void loadToolbarImage(java.lang.String)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadUrl(android.widget.ImageView,java.lang.String,com.boardgamegeek.util.ImageUtils$Callback)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.adapter.BuddyNameAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.boardgamegeek.extensions.ImageViewKt: void loadThumbnailInList(android.widget.ImageView,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView)>[]--><com.squareup.picasso.RequestCreator: void into(android.widget.ImageView,com.squareup.picasso.Callback)>[]--><com.boardgamegeek.extensions.ImageViewKt$loadUrl$1: void onSuccess()>[]--><com.boardgamegeek.ui.HeroActivity$loadToolbarImage$1: void onSuccessfulImageLoad(androidx.palette.graphics.Palette)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: boolean colorize(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[]--><com.boardgamegeek.extensions.FloatingActionButtonUtils: void colorImageTint(com.google.android.material.floatingactionbutton.FloatingActionButton,int)>[[-$i1 < 21]]--><android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
23call by main package
-----------------------------------------
#################################################
N 162 Potential Issue API: SDKCheck of <android.app.Notification.DecoratedCustomViewStyle: void <init>()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.app.NotificationCompat$DecoratedCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.DecoratedCustomViewStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 163 Potential Issue API: SDKCheck of <android.app.NotificationManager: java.util.List getNotificationChannels()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: java.util.List getNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationManager: java.util.List getNotificationChannels()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 164 Potential Issue API: SDKCheck of <android.view.ViewGroup: int getChildDrawingOrder(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
$i0 != 28
i1 < 21
-$i1 < 29
Good road: <androidx.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[[-$z0 == 0]]--><androidx.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.GhostViewUtils: androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[[$i0 != 28]]--><androidx.transition.GhostViewPort: androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[]--><androidx.transition.GhostViewHolder: void addGhostView(androidx.transition.GhostViewPort)>[]--><androidx.transition.GhostViewHolder: int getInsertIndex(java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>[[i1 < 21]]--><androidx.transition.ViewGroupUtils: int getChildDrawingOrder(android.view.ViewGroup,int)>[[-$i1 < 29]]--><android.view.ViewGroup: int getChildDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 165 Potential Issue API: SDKCheck of <android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float,float)>[[-i0 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
-i6 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: void createPostFillRadialExpansion(android.view.View,long,long,long,int,int,float,java.util.List)>[[-i6 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
-i0 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.circularreveal.CircularRevealCompat: android.animation.Animator createCircularReveal(com.google.android.material.circularreveal.CircularRevealWidget,float,float,float)>[[-i0 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
-$i3 < 21
Good road: <com.google.android.material.transformation.FabTransformationBehavior: void createExpansionAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,float,float,java.util.List,java.util.List)>[]--><com.google.android.material.transformation.FabTransformationBehavior: void createPreFillRadialExpansion(android.view.View,long,int,int,float,java.util.List)>[[-$i3 < 21]]--><android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 166 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action build()> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action build()>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.Action.Builder: android.app.Notification.Action build()>has compatibility isssues！
-----------------------------------------
crashApis:42
crashApisInMain:6
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 167 Potential Issue API: SDKCheck of <android.app.Notification: int getGroupAlertBehavior()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getGroupAlertBehavior(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getGroupAlertBehavior()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 168 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23]][[i0 < 29]][[try]]
-i0 < 23
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 169 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setRadius(int)> is checking!!!
The life time of api is [23,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-i1 < 23
Good road: <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.Slider: void setHaloRadius(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.Slider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void setHaloRadius(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadiusResource(int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.slider.Slider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloRadius(int)>[]--><com.google.android.material.drawable.DrawableUtils: void setRippleDrawableRadius(android.graphics.drawable.RippleDrawable,int)>[[-i1 < 23]]--><android.graphics.drawable.RippleDrawable: void setRadius(int)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 170 Potential Issue API: SDKCheck of <android.view.View: void setKeyboardNavigationCluster(boolean)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[$i0 < 21]][[-$i0 < 26]]
i2 < 21
$i0 < 21
-$i0 < 26
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21], [-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setKeyboardNavigationCluster(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setKeyboardNavigationCluster(boolean)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 171 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphEnd(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)>[[-$i1 < 29]]--><android.text.PrecomputedText: int getParagraphEnd(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 172 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.Network getActiveNetwork()> is checking!!!
The life time of api is [23,30]
5call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]][[-$r3 == null]]
-$i0 < 23
-$r3 == null
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.service.CancelReceiver dummyMainMethod_com_boardgamegeek_service_CancelReceiver(android.content.Intent)>[]--><com.boardgamegeek.service.CancelReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.Network getActiveNetwork()>has compatibility isssues！
-----------------------------------------
4 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.sync.SyncTask: java.lang.String doInBackground(java.lang.Void[])>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
#1.the call statck between class <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])> to <android.net.ConnectivityManager: android.net.Network getActiveNetwork()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.livedata.RefreshableResourceLoader: void refresh(androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
#2.the call statck between class <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)> to <android.net.ConnectivityManager: android.net.Network getActiveNetwork()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
#3.the call statck between class <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)> to <android.net.ConnectivityManager: android.net.Network getActiveNetwork()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]][[-$r3 == null]]
-$i0 < 23
-$r3 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>[]--><com.boardgamegeek.service.SyncAdapter: boolean shouldContinueSync()>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]--><android.net.ConnectivityManager: android.net.Network getActiveNetwork()>
#4.the call statck between class <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> to <android.net.ConnectivityManager: android.net.Network getActiveNetwork()>has compatibility isssues！
-----------------------------------------
crashApis:43
crashApisInMain:7
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 173 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.content.Intent[] getIntents()>has compatibility isssues！
-----------------------------------------
crashApis:44
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 174 Potential Issue API: SDKCheck of <android.widget.EdgeEffect: void onPull(float,float)> is checking!!!
The life time of api is [21,31]
4983call roads:
1 Mainhead roads:
4982 Packageshead roads:
Roads number exceed, exit!4982
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 175 Potential Issue API: SDKCheck of <android.view.View: void setTransitionAlpha(float)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setTransitionAlpha(android.view.View,float)>[]--><android.view.View: void setTransitionAlpha(float)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setTransitionAlpha(android.view.View,float)> to <android.view.View: void setTransitionAlpha(float)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.transition.ViewUtilsApi19: void setTransitionAlpha(android.view.View,float)>[[try]]--><android.view.View: void setTransitionAlpha(float)>
One road protect good!
crashApis:45
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 176 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><android.graphics.drawable.Icon: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 177 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: android.content.res.Resources.Theme getDropDownViewTheme()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 178 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)> is checking!!!
The life time of api is [23,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
36 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setIncludePad(boolean)>
One road protect good!
containsStatic:true
containsTry:true
37call by main package
-----------------------------------------
#################################################
N 179 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[[]]--><android.view.inputmethod.InputConnection: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 180 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>[[-i1 < 23]]--><android.hardware.fingerprint.FingerprintManager: void authenticate(android.hardware.fingerprint.FingerprintManager.CryptoObject,android.os.CancellationSignal,int,android.hardware.fingerprint.FingerprintManager.AuthenticationCallback,android.os.Handler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 181 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)> is checking!!!
The life time of api is [21,30]
5call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]][[-$r3 == null]]
-$i0 < 23
-$r3 == null
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.service.CancelReceiver dummyMainMethod_com_boardgamegeek_service_CancelReceiver(android.content.Intent)>[]--><com.boardgamegeek.service.CancelReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>has compatibility isssues！
-----------------------------------------
4 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.sync.SyncTask: java.lang.String doInBackground(java.lang.Void[])>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
#1.the call statck between class <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])> to <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.livedata.RefreshableResourceLoader: void refresh(androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
#2.the call statck between class <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)> to <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
#3.the call statck between class <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)> to <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]][[-$r3 == null]]
-$i0 < 23
-$r3 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>[]--><com.boardgamegeek.service.SyncAdapter: boolean shouldContinueSync()>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23], [-$r3 == null]]--><android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
#4.the call statck between class <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> to <android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>has compatibility isssues！
-----------------------------------------
crashApis:46
crashApisInMain:8
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 182 Potential Issue API: SDKCheck of <android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.app.NotificationCompat$MediaStyle: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle)>[]--><android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>
#1.the call statck between class <androidx.media.app.NotificationCompat$MediaStyle: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle)> to <android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>has compatibility isssues！
-----------------------------------------
crashApis:47
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 183 Potential Issue API: SDKCheck of <android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 23
Good road: <okhttp3.internal.platform.AndroidPlatform: boolean isCleartextTrafficPermitted(java.lang.String)>[[-$i0 < 23]]--><android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)>[]--><android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>
#2.the call statck between class <okhttp3.internal.platform.Android10Platform: boolean isCleartextTrafficPermitted(java.lang.String)> to <android.security.NetworkSecurityPolicy: android.security.NetworkSecurityPolicy getInstance()>has compatibility isssues！
-----------------------------------------
crashApis:48
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 184 Potential Issue API: SDKCheck of <android.view.View: int getScrollIndicators()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.ViewCompat: int getScrollIndicators(android.view.View)>[[-$i0 < 23]]--><android.view.View: int getScrollIndicators()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 185 Potential Issue API: SDKCheck of <android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 <= 21
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.canvas.CanvasCompat: int saveLayerAlpha(android.graphics.Canvas,float,float,float,float,int)>[[-$i1 <= 21]]--><android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 186 Potential Issue API: SDKCheck of <android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$PlayAdapter$AddPlayerViewHolder: void bind()>[]--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)>[[-$i0 < 21]]--><android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 187 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphCount()> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)>[]--><androidx.core.text.PrecomputedTextCompat: int getParagraphCount()>[[-$i0 < 29]]--><android.text.PrecomputedText: int getParagraphCount()>
One road protect good!
-$i0 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphEnd(int)>[]--><androidx.core.text.PrecomputedTextCompat: int getParagraphCount()>[[-$i0 < 29]]--><android.text.PrecomputedText: int getParagraphCount()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 188 Potential Issue API: SDKCheck of <android.widget.AutoCompleteTextView: void refreshAutoCompleteResults()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 189 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)> is checking!!!
The life time of api is [24,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 190 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setBot(boolean)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setBot(boolean)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 191 Potential Issue API: SDKCheck of <android.view.animation.PathInterpolator: void <init>(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float)>[[-$i0 < 21]]--><android.view.animation.PathInterpolator: void <init>(float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 192 Potential Issue API: SDKCheck of <android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)> is checking!!!
The life time of api is [28,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
-$i2 < 29
Good road: <androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.text.SpannedStringKt: java.lang.Object[] getSpans$default(android.text.Spanned,int,int,int,java.lang.Object)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.text.SpannedStringKt: java.lang.Object[] getSpans(android.text.Spanned,int,int)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.text.SpannableStringKt: void clearSpans(android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <com.boardgamegeek.util.XmlApi2TagHandler$Companion: void end(android.text.Editable,java.lang.Class,java.lang.Object)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26], [-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26]][[-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]
-i0 >= 26
-i0 < 19
-$i2 < 29
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)>[[-i0 >= 26], [-i0 < 19]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$4: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
$yysi0 < 28
$yysi0 < 28
-$i2 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[$yysi0 < 28]]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
-$i2 < 29
Good road: <com.google.android.material.bottomsheet.BottomSheetDialog$2: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)>[]--><androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)>[]--><androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)>[[-$i2 < 29]]--><android.text.PrecomputedText: java.lang.Object[] getSpans(int,int,java.lang.Class)>
One road protect good!
containsStatic:true
containsTry:false
15call by main package
-----------------------------------------
#################################################
N 193 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
20call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
19 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
crashApis:49
crashApisInMain:9
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 194 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: android.content.Intent getIntent()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()>[]--><android.app.job.JobWorkItem: android.content.Intent getIntent()>
#2.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: android.content.Intent getIntent()> to <android.app.job.JobWorkItem: android.content.Intent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:50
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 195 Potential Issue API: SDKCheck of <android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)> is checking!!!
The life time of api is [23,31]
5011call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzls: boolean zzd()>[]--><com.google.android.gms.internal.measurement.zzdh: java.lang.Object zzc()>[[try]]--><com.google.android.gms.internal.measurement.zzcy: com.google.android.gms.internal.measurement.zzcy zza(android.content.Context)>[[try]]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)>[[-$i0 < 23]]--><android.app.AppOpsManager: java.lang.String permissionToOp(java.lang.String)>
One road protect good!
5010 Packageshead roads:
Roads number exceed, exit!5010
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 196 Potential Issue API: SDKCheck of <android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
11 Packageshead roads:
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 26]]--><android.app.Notification.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 197 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter()>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getTraversalAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 198 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 199 Potential Issue API: SDKCheck of <android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 21
Good road: <androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)>[[-$i2 < 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 200 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color valueOf(float[],android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:51
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 201 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledVerticalScrollFactor()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledVerticalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 202 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getTitle()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getTitle()>has compatibility isssues！
-----------------------------------------
crashApis:52
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 203 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtection(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtection()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 204 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
11call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[[-$i0 < 26]]--><com.boardgamegeek.util.NotificationUtils: void createNotificationChannels(android.content.Context)>[]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.HeapAnalyzerService dummyMainMethod_leakcanary_internal_HeapAnalyzerService(android.content.Intent)>[]--><leakcanary.internal.ForegroundService: void onCreate()>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
10 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zab)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.zaae: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
$i0 >= 26
Good road: <com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,com.google.firebase.messaging.NotificationParams)>[]--><com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getOrCreateChannel(android.content.Context,java.lang.String,android.os.Bundle)>[[$i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannel(android.app.NotificationChannel)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i0 < 26
Good road: <leakcanary.internal.HeapAnalyzerService: void onAnalysisProgress(shark.OnAnalysisProgressListener$Step)>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 205 Potential Issue API: SDKCheck of <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] stop()> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)>[]--><android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>
#2.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: android.util.SparseIntArray[] remove(android.app.Activity)> to <android.view.Window: void removeOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener)>has compatibility isssues！
-----------------------------------------
crashApis:53
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 206 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:54
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 207 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 24
-i0 < 29
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[-i0 < 29]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 24], [-i0 < 29], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setAllowSystemGeneratedContextualActions(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 208 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getError()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 209 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewRemoved(android.view.View)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)>[]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#1.the call statck between class <com.google.android.material.button.MaterialButtonToggleGroup: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)>[[]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
-i0 < 14
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#2.the call statck between class <androidx.constraintlayout.motion.widget.MotionLayout: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.transition.GhostViewHolder: void onViewRemoved(android.view.View)>[]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
#3.the call statck between class <androidx.transition.GhostViewHolder: void onViewRemoved(android.view.View)> to <android.view.ViewGroup: void onViewRemoved(android.view.View)>has compatibility isssues！
-----------------------------------------
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void removeView(android.view.View)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewRemoved(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewRemoved(android.view.View)>
One road protect good!
crashApis:55
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 210 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getContentDescription(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:56
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 211 Potential Issue API: SDKCheck of <android.view.View: void transformMatrixToLocal(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi21: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)> to <android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
crashApis:57
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 212 Potential Issue API: SDKCheck of <android.widget.TextView: boolean setFontVariationSettings(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 213 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: android.graphics.Rect getLaunchBounds()>[[$i0 >= 24]]--><android.app.ActivityOptions: android.graphics.Rect getLaunchBounds()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 214 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
try
Good road with try: <androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)>[[try]]--><androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler createAsync(android.os.Looper)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 215 Potential Issue API: SDKCheck of <android.view.FrameMetrics: long getMetric(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)>[]--><android.view.FrameMetrics: long getMetric(int)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1: void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int)> to <android.view.FrameMetrics: long getMetric(int)>has compatibility isssues！
-----------------------------------------
crashApis:58
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 216 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle.Message: void <init>(java.lang.CharSequence,long,android.app.Person)>has compatibility isssues！
-----------------------------------------
crashApis:59
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 217 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)> is checking!!!
The life time of api is [21,31]
27call roads:
0 Mainhead roads:
27 Packageshead roads:
containsStatic:true
containsTry:true
28call by main package
-----------------------------------------
#################################################
N 218 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.app.PendingIntent getDeleteIntent()>has compatibility isssues！
-----------------------------------------
crashApis:60
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 219 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.util.Set getCategories()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.util.Set getCategories()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.util.Set getCategories()>has compatibility isssues！
-----------------------------------------
crashApis:61
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 220 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#2.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace)>[]--><android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>
#3.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace)> to <android.graphics.Color: android.graphics.Color convert(android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:62
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 221 Potential Issue API: SDKCheck of <android.view.MenuItem: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: java.lang.CharSequence getTooltipText()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: java.lang.CharSequence getTooltipText(android.view.MenuItem)> to <android.view.MenuItem: java.lang.CharSequence getTooltipText()>has compatibility isssues！
-----------------------------------------
crashApis:63
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 222 Potential Issue API: SDKCheck of <android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 < 21]]--><android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 223 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 224 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: java.util.List getAllPendingJobs()> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)> to <android.app.job.JobScheduler: java.util.List getAllPendingJobs()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void lambda$upload$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>[[try]]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
#3.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobScheduler: java.util.List getAllPendingJobs()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
#4.the call statck between class <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)> to <android.app.job.JobScheduler: java.util.List getAllPendingJobs()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
#5.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobScheduler: java.util.List getAllPendingJobs()>has compatibility isssues！
-----------------------------------------
crashApis:64
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 225 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)> is checking!!!
The life time of api is [23,31]
20call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
19 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(java.lang.String)>
One road protect good!
crashApis:65
crashApisInMain:10
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 226 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [23,31]
21call roads:
1 Mainhead roads:
-i0 < 23
i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
-i0 < 23
i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
20 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]
-i0 < 24
-i0 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
i0 < 26
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.graphics.Bitmap)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
#7.the call statck between class <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.graphics.Bitmap)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
-i0 < 23
i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithBitmap(android.graphics.Bitmap)>
One road protect good!
crashApis:66
crashApisInMain:11
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 227 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)> is checking!!!
The life time of api is [21,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
-$i4 < 21
Good road: <com.google.android.material.slider.BaseSlider: void access$700(com.google.android.material.slider.BaseSlider)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setValues(java.lang.Float[])>[]--><com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.BaseSlider: void onFocusChanged(boolean,int,android.graphics.Rect)>[]--><com.google.android.material.slider.BaseSlider: void focusThumbOnFocusGained(int)>[]--><com.google.android.material.slider.BaseSlider: boolean moveFocusInAbsoluteDirection(int)>[]--><com.google.android.material.slider.BaseSlider: boolean moveFocus(int)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.RangeSlider: void setValues(java.lang.Float[])>[]--><com.google.android.material.slider.BaseSlider: void setValues(java.lang.Float[])>[]--><com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.BaseSlider: void onSizeChanged(int,int,int,int)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.RangeSlider: void setValues(java.util.List)>[]--><com.google.android.material.slider.BaseSlider: void setValues(java.util.List)>[]--><com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.BaseSlider: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.Slider: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: java.lang.Boolean onKeyDownNoActiveThumb(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean moveFocus(int)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.RangeSlider: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onKeyDown(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: java.lang.Boolean onKeyDownNoActiveThumb(int,android.view.KeyEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean moveFocus(int)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.RangeSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.Slider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.Slider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.Slider: void setValue(float)>[]--><com.google.android.material.slider.BaseSlider: void setValues(java.lang.Float[])>[]--><com.google.android.material.slider.BaseSlider: void setValuesInternal(java.util.ArrayList)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
-$i4 < 21
Good road: <com.google.android.material.slider.Slider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.slider.BaseSlider: void updateHaloHotspot()>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)>[[-$i4 < 21]]--><android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
13call by main package
-----------------------------------------
#################################################
N 228 Potential Issue API: SDKCheck of <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float)>[[-$i0 < 21]]--><android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 229 Potential Issue API: SDKCheck of <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.ChangeTransform: android.animation.ObjectAnimator createTransformAnimator(androidx.transition.TransitionValues,androidx.transition.TransitionValues,boolean)>[]--><androidx.transition.PropertyValuesHolderUtils: android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 230 Potential Issue API: SDKCheck of <android.app.Person: boolean isImportant()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isImportant()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 231 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)> is checking!!!
The life time of api is [23,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 232 Potential Issue API: SDKCheck of <android.app.Notification.Action: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[-i1 < 23]][[i0 < 24]][[i1 < 29]]
i0 < 28
-i1 < 23
i0 < 24
i1 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><android.app.Notification.Action: android.graphics.drawable.Icon getIcon()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 233 Potential Issue API: SDKCheck of <android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[]--><android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>
#1.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>has compatibility isssues！
-----------------------------------------
crashApis:67
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 234 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
4987call roads:
1 Mainhead roads:
4986 Packageshead roads:
Roads number exceed, exit!4986
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 235 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isContextClickable()>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isContextClickable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 236 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [25,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 237 Potential Issue API: SDKCheck of <android.graphics.Outline: void setAlpha(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setAlpha(float)>
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setAlpha(float)>
#1.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setAlpha(float)>has compatibility isssues！
-----------------------------------------
crashApis:68
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 238 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 239 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 < 26
-$i1 < 21
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[$i1 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setMaxTextLength(int)>[[-$i1 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 240 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannels(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannels(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannels(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 241 Potential Issue API: SDKCheck of <android.database.CursorWindow: void <init>(java.lang.String,long)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.database.CursorWindowCompat: android.database.CursorWindow create(java.lang.String,long)>[[-$i1 < 28]]--><android.database.CursorWindow: void <init>(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 242 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroups(java.util.List)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroups(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 243 Potential Issue API: SDKCheck of <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:69
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 244 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Cipher)>has compatibility isssues！
-----------------------------------------
crashApis:70
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 245 Potential Issue API: SDKCheck of <android.app.RemoteAction: java.lang.CharSequence getContentDescription()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: java.lang.CharSequence getContentDescription()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: java.lang.CharSequence getContentDescription()>has compatibility isssues！
-----------------------------------------
crashApis:71
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 246 Potential Issue API: SDKCheck of <android.widget.FrameLayout: void setVisibility(int)> is checking!!!
The life time of api is [21,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 247 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: boolean isActiveNetworkMetered()> is checking!!!
The life time of api is [16,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 16
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[-i0 < 16]]--><android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)> to <android.net.ConnectivityManager: boolean isActiveNetworkMetered()>has compatibility isssues！
-----------------------------------------
crashApis:72
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 248 Potential Issue API: SDKCheck of <android.widget.TextView: void setFirstBaselineToTopHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)>[[-i1 < 28]]--><android.widget.TextView: void setFirstBaselineToTopHeight(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 249 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setHotspot(float,float)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.ForegroundImageView: boolean onTouchEvent(android.view.MotionEvent)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#3.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.ForegroundImageView: void drawableHotspotChanged(float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)>[]--><androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)>[]--><android.graphics.drawable.Drawable: void setHotspot(float,float)>
#7.the call statck between class <com.google.android.material.internal.ForegroundLinearLayout: void drawableHotspotChanged(float,float)> to <android.graphics.drawable.Drawable: void setHotspot(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:73
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 250 Potential Issue API: SDKCheck of <android.view.View: void setClipToOutline(boolean)> is checking!!!
The life time of api is [21,31]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.cardview.widget.CardView: void <init>(android.content.Context)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setClipToOutline(boolean)>
#3.the call statck between class <androidx.cardview.widget.CardView: void <init>(android.content.Context)> to <android.view.View: void setClipToOutline(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setClipToOutline(boolean)>
#5.the call statck between class <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)> to <android.view.View: void setClipToOutline(boolean)>has compatibility isssues！
-----------------------------------------
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setClipToOutline(boolean)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.cardview.widget.CardViewApi21Impl: void initialize(androidx.cardview.widget.CardViewDelegate,android.content.Context,android.content.res.ColorStateList,float,float,float)>[]--><android.view.View: void setClipToOutline(boolean)>
#10.the call statck between class <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)> to <android.view.View: void setClipToOutline(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:74
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 251 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()>[]--><android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()> to <android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
#2.the call statck between class <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>has compatibility isssues！
-----------------------------------------
crashApis:75
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 252 Potential Issue API: SDKCheck of <android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 253 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
One road protect good!
crashApis:76
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 254 Potential Issue API: SDKCheck of <android.graphics.Color: float blue(long)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float getBlue(long)>[]--><android.graphics.Color: float blue(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getBlue(long)> to <android.graphics.Color: float blue(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component3(long)>[]--><android.graphics.Color: float blue(long)>
#2.the call statck between class <androidx.core.graphics.ColorKt: float component3(long)> to <android.graphics.Color: float blue(long)>has compatibility isssues！
-----------------------------------------
crashApis:77
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 255 Potential Issue API: SDKCheck of <android.os.Trace: void endAsyncSection(java.lang.String,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 29
Good road: <androidx.core.os.TraceCompat: void endAsyncSection(java.lang.String,int)>[[-i1 < 29]]--><android.os.Trace: void endAsyncSection(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 256 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata build()>has compatibility isssues！
-----------------------------------------
crashApis:78
crashApisInMain:12
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 257 Potential Issue API: SDKCheck of <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#2.the call statck between class <androidx.constraintlayout.widget.ConstraintLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#3.the call statck between class <com.google.android.material.internal.FlowLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:79
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 258 Potential Issue API: SDKCheck of <android.view.View: boolean hasNestedScrollingParent()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View,int)>[]--><androidx.core.view.ViewCompat: boolean hasNestedScrollingParent(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean hasNestedScrollingParent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 259 Potential Issue API: SDKCheck of <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)>[]--><android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>
#1.the call statck between class <androidx.core.view.ViewCompat$4: void frameworkSet(android.view.View,java.lang.CharSequence)> to <android.view.View: void setAccessibilityPaneTitle(java.lang.CharSequence)>has compatibility isssues！
-----------------------------------------
crashApis:80
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 260 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.CharSequence getTitle()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityWindowInfo: java.lang.CharSequence getTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 261 Potential Issue API: SDKCheck of <android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
4998call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzaj: void zza(long)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.boardgamegeek.util.'-$$Lambda$kjmuDC2BeW5LHuwXevneXHtOsAo': void run()>[]--><com.boardgamegeek.util.ShowcaseViewWizard: void showHelp()>[]--><com.boardgamegeek.util.HelpUtils: com.github.amlcurran.showcaseview.ShowcaseView$Builder getShowcaseBuilder(android.app.Activity)>[]--><com.github.amlcurran.showcaseview.ShowcaseView$Builder: void <init>(android.app.Activity)>[]--><com.github.amlcurran.showcaseview.ShowcaseView$Builder: void <init>(android.app.Activity,boolean)>[]--><com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,boolean)>[]--><com.github.amlcurran.showcaseview.ShowcaseView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>[]--><com.github.amlcurran.showcaseview.StandardShowcaseDrawer: void <init>(android.content.res.Resources,android.content.res.Resources$Theme)>[]--><androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 21]]--><android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
One road protect good!
4997 Packageshead roads:
Roads number exceed, exit!4997
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 262 Potential Issue API: SDKCheck of <android.print.PrintAttributes: int getDuplexMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.print.PrintHelper: android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes)>[[-$i0 < 23]]--><android.print.PrintAttributes: int getDuplexMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 263 Potential Issue API: SDKCheck of <android.os.LocaleList: int size()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int size()>[]--><androidx.core.os.LocaleListPlatformWrapper: int size()>[]--><android.os.LocaleList: int size()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int size()> to <android.os.LocaleList: int size()>has compatibility isssues！
-----------------------------------------
crashApis:81
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 264 Potential Issue API: SDKCheck of <android.app.Notification.Action: boolean getAllowGeneratedReplies()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24]]--><android.app.Notification.Action: boolean getAllowGeneratedReplies()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 265 Potential Issue API: SDKCheck of <android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i2 < 21
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-i2 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>[[try]]--><android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 266 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()> is checking!!!
The life time of api is [24,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 267 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getMaxTextLength()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 268 Potential Issue API: SDKCheck of <android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)> is checking!!!
The life time of api is [23,31]
9call roads:
1 Mainhead roads:
i0 < 23
-$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.service.CancelReceiver dummyMainMethod_com_boardgamegeek_service_CancelReceiver(android.content.Intent)>[]--><com.boardgamegeek.service.CancelReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
8 Packageshead roads:
i0 < 23
-$i0 < 23
Good road: <androidx.core.content.ContextKt: java.lang.Object getSystemService(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.sync.SyncTask: java.lang.String doInBackground(java.lang.Void[])>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.livedata.RefreshableResourceLoader: void refresh(androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.ui.SearchResultsActivity: boolean onCreateOptionsMenu(android.view.Menu)>[]--><com.boardgamegeek.ui.SearchResultsActivity: void setUpSearchView(android.widget.SearchView)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>[]--><com.boardgamegeek.service.SyncAdapter: boolean shouldContinueSync()>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
-$i0 < 26
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i0 < 26]]--><com.boardgamegeek.util.shortcut.ShortcutTask: void createShortcutForOreo()>[]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
-$i0 < 25
i0 < 23
-$i0 < 23
Good road: <com.boardgamegeek.tasks.SelectCollectionViewTask$shortcutManager$2: android.content.pm.ShortcutManager invoke()>[[-$i0 < 25]]--><androidx.core.content.ContextCompat: java.lang.Object getSystemService(android.content.Context,java.lang.Class)>[[i0 < 23]]--><androidx.core.content.ContextCompat: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)>[[-$i0 < 23]]--><android.content.Context: java.lang.String getSystemServiceName(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 269 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isInteractive()> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.firebase.iid.WakeLockHolder: void acquireWakeLock(android.content.Intent,long)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!<com.google.firebase.iid.WakeLockHolder: void acquireWakeLock(android.content.Intent,long)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
try
Good road with try: <com.google.firebase.iid.WakeLockHolder: void acquireWakeLock(android.content.Intent,long)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
try
Good road with try: <com.google.firebase.messaging.EnhancedIntentService: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.firebase.messaging.EnhancedIntentService: void finishTask(android.content.Intent)>[]--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
-$yysi0 < 20
$yysi0 < 17
Good road: <com.google.android.gms.common.stats.WakeLockTracker: void registerAcquireEvent(android.content.Context,android.content.Intent,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
-$yysi0 < 20
$yysi0 < 17
Good road: <com.google.android.gms.common.stats.WakeLockTracker: void registerDeadlineEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,boolean,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
try
Good road with try: <com.google.firebase.messaging.EnhancedIntentService: void lambda$onStartCommand$1$EnhancedIntentService(android.content.Intent,com.google.android.gms.tasks.Task)>[]--><com.google.firebase.messaging.EnhancedIntentService: void finishTask(android.content.Intent)>[]--><com.google.firebase.iid.WakeLockHolder: void completeWakefulIntent(android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void release()>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.ServiceStarter: int doStartService(android.content.Context,android.content.Intent)>[[try]]--><com.google.firebase.iid.WakeLockHolder: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.firebase.iid.ServiceStarter: int doStartService(android.content.Context,android.content.Intent)>[[try]]--><com.google.firebase.iid.WakeLockHolder: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
try
Good road with try: <com.google.firebase.iid.FcmBroadcastProcessor: java.lang.Integer lambda$startMessagingService$0$FcmBroadcastProcessor(android.content.Context,android.content.Intent)>[]--><com.google.firebase.iid.ServiceStarter: int startMessagingService(android.content.Context,android.content.Intent)>[]--><com.google.firebase.iid.ServiceStarter: int doStartService(android.content.Context,android.content.Intent)>[[try]]--><com.google.firebase.iid.WakeLockHolder: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>[[try]]--><com.google.android.gms.stats.WakeLock: void acquire(long)>[[try]]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20]][[$yysi0 < 17]]
-$yysi0 < 20
$yysi0 < 17
Good road: <com.google.android.gms.stats.GCoreWakefulBroadcastReceiver: boolean completeWakefulIntent(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerReleaseEvent(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.WakeLockTracker: void registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zza: int zzg(android.content.Context)>[[-$yysi0 < 20], [$yysi0 < 17]]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
containsStatic:true
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 270 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: boolean equals(java.lang.Object)>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: boolean equals(java.lang.Object)> to <android.media.session.MediaSessionManager.RemoteUserInfo: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:82
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 271 Potential Issue API: SDKCheck of <android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.net.TrafficStatsCompat: void untagDatagramSocket(java.net.DatagramSocket)>[[-i0 < 24]]--><android.net.TrafficStats: void untagDatagramSocket(java.net.DatagramSocket)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 272 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])> is checking!!!
The life time of api is [21,31]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#1.the call statck between class <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#2.the call statck between class <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#3.the call statck between class <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#4.the call statck between class <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#5.the call statck between class <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#6.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#7.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#8.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#9.the call statck between class <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
#10.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()> to <android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>has compatibility isssues！
-----------------------------------------
crashApis:83
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 273 Potential Issue API: SDKCheck of <android.view.View: void invalidateOutline()> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.chip.Chip: void onChipDrawableSizeChange()>[[-$i0 < 21]]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
-$i3 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRoundPercent(float)>[]--><android.view.View: void invalidateOutline()>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 274 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean isHardwareDetected()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 275 Potential Issue API: SDKCheck of <android.graphics.Path: float[] approximate(float)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.PathKt: java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object)>[]--><androidx.core.graphics.PathKt: java.lang.Iterable flatten(android.graphics.Path,float)>[]--><androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>[]--><android.graphics.Path: float[] approximate(float)>
#1.the call statck between class <androidx.core.graphics.PathKt: java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object)> to <android.graphics.Path: float[] approximate(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)>[]--><androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path,float)>[]--><android.graphics.Path: float[] approximate(float)>
#2.the call statck between class <androidx.core.graphics.PathUtils: java.util.Collection flatten(android.graphics.Path)> to <android.graphics.Path: float[] approximate(float)>has compatibility isssues！
-----------------------------------------
crashApis:84
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 276 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)> is checking!!!
The life time of api is [21,31]
4985call roads:
1 Mainhead roads:
4984 Packageshead roads:
Roads number exceed, exit!4984
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 277 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
5022call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: java.lang.Boolean getDataCollectionValueFromManifest(android.content.Context)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: java.lang.Boolean readCrashlyticsDataCollectionEnabledFromManifest(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
5021 Packageshead roads:
Roads number exceed, exit!5021
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 278 Potential Issue API: SDKCheck of <android.view.View: boolean isKeyboardNavigationCluster()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isKeyboardNavigationCluster(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isKeyboardNavigationCluster()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 279 Potential Issue API: SDKCheck of <android.content.res.TypedArray: android.graphics.Typeface getFont(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.content.res.TypedArrayKt: android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int)>[]--><android.content.res.TypedArray: android.graphics.Typeface getFont(int)>
#1.the call statck between class <androidx.core.content.res.TypedArrayKt: android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int)> to <android.content.res.TypedArray: android.graphics.Typeface getFont(int)>has compatibility isssues！
-----------------------------------------
crashApis:85
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 280 Potential Issue API: SDKCheck of <android.view.Display: android.view.Display.Mode getMode()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23]][[i0 >= 28]]
-i0 < 23
i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]--><android.view.Display: android.view.Display.Mode getMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 281 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [21,31]
4987call roads:
1 Mainhead roads:
4986 Packageshead roads:
Roads number exceed, exit!4986
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 282 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean isConsumed()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()>[]--><android.view.WindowInsets: boolean isConsumed()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()> to <android.view.WindowInsets: boolean isConsumed()>has compatibility isssues！
-----------------------------------------
crashApis:86
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 283 Potential Issue API: SDKCheck of <android.widget.TextView: int[] getAutoSizeTextAvailableSizes()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int[] getAutoSizeTextAvailableSizes(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int[] getAutoSizeTextAvailableSizes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 284 Potential Issue API: SDKCheck of <android.app.job.JobInfo: int getId()> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: int getId()>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)> to <android.app.job.JobInfo: int getId()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void lambda$upload$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>[[try]]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: int getId()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: int getId()>
#3.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobInfo: int getId()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: int getId()>
#4.the call statck between class <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)> to <android.app.job.JobInfo: int getId()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: int getId()>
#5.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobInfo: int getId()>has compatibility isssues！
-----------------------------------------
crashApis:87
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 285 Potential Issue API: SDKCheck of <android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.app.NotificationCompat$MediaStyle: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle)>[]--><android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>
#1.the call statck between class <androidx.media.app.NotificationCompat$MediaStyle: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle)> to <android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>has compatibility isssues！
-----------------------------------------
crashApis:88
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 286 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)> to <android.view.MenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
crashApis:89
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 287 Potential Issue API: SDKCheck of <android.net.NetworkCapabilities: boolean hasTransport(int)> is checking!!!
The life time of api is [21,30]
5call roads:
1 Mainhead roads:
-$i0 < 23
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.service.CancelReceiver dummyMainMethod_com_boardgamegeek_service_CancelReceiver(android.content.Intent)>[]--><com.boardgamegeek.service.CancelReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkCapabilities: boolean hasTransport(int)>has compatibility isssues！
-----------------------------------------
4 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.sync.SyncTask: java.lang.String doInBackground(java.lang.Void[])>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
#1.the call statck between class <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])> to <android.net.NetworkCapabilities: boolean hasTransport(int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.livedata.RefreshableResourceLoader: void refresh(androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
#2.the call statck between class <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)> to <android.net.NetworkCapabilities: boolean hasTransport(int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23]][[-$r2 == null]]
-$i0 < 23
-$r2 == null
!!!this api will crash on sdk 31 
Error road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[-$i0 < 23], [-$r2 == null]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
#3.the call statck between class <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)> to <android.net.NetworkCapabilities: boolean hasTransport(int)>has compatibility isssues！
-----------------------------------------
-$i0 < 23
!!!this api will crash on sdk 31 
Error road: <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>[]--><com.boardgamegeek.service.SyncAdapter: boolean shouldContinueSync()>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[-$i0 < 23]]--><android.net.NetworkCapabilities: boolean hasTransport(int)>
#4.the call statck between class <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)> to <android.net.NetworkCapabilities: boolean hasTransport(int)>has compatibility isssues！
-----------------------------------------
crashApis:90
crashApisInMain:13
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 288 Potential Issue API: SDKCheck of <android.transition.TransitionSet: int getTransitionCount()> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 289 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.app.PendingIntent getIntent()>has compatibility isssues！
-----------------------------------------
crashApis:91
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 290 Potential Issue API: SDKCheck of <android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void deleteNotificationChannelGroup(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: void deleteNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 291 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setRank(int)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 292 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
5033call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzaj: void zza(long)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><com.boardgamegeek.util.'-$$Lambda$kjmuDC2BeW5LHuwXevneXHtOsAo': void run()>[]--><com.boardgamegeek.util.ShowcaseViewWizard: void showHelp()>[]--><com.boardgamegeek.util.ShowcaseViewWizard: void showNextHelp()>[]--><com.github.amlcurran.showcaseview.ShowcaseView: void setShowcase(com.github.amlcurran.showcaseview.targets.Target,boolean)>[]--><com.github.amlcurran.showcaseview.ShowcaseView$1: void run()>[]--><com.github.amlcurran.showcaseview.AnimatorAnimationFactory: void animateTargetToPoint(com.github.amlcurran.showcaseview.ShowcaseView,android.graphics.Point)>[]--><android.animation.AnimatorSet: void <init>()>
One road protect good!
5032 Packageshead roads:
Roads number exceed, exit!5032
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 293 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setDrawingOrder(int)>[[-$i1 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setDrawingOrder(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 294 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
!!!this api will crash on sdk 24 25 26 27 
Error road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>
#1.the call statck between class <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)> to <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setGroupConversation(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:92
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 295 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int getUsage()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)>[]--><androidx.media.AudioAttributesCompat: int getUsage()>[]--><androidx.media.AudioAttributesImplApi21: int getUsage()>[]--><android.media.AudioAttributes: int getUsage()>
#1.the call statck between class <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)> to <android.media.AudioAttributes: int getUsage()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)>[]--><androidx.media.AudioAttributesCompat: int getUsage()>[]--><androidx.media.AudioAttributesImplApi21: int getUsage()>[]--><android.media.AudioAttributes: int getUsage()>
#2.the call statck between class <androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat)> to <android.media.AudioAttributes: int getUsage()>has compatibility isssues！
-----------------------------------------
$i0 < 26
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat: int getVolumeControlStream()>[]--><androidx.media.AudioAttributesImplApi21: int getVolumeControlStream()>[[$i0 < 26]]--><androidx.media.AudioAttributesImplApi21: int getUsage()>[]--><android.media.AudioAttributes: int getUsage()>
#3.the call statck between class <androidx.media.AudioAttributesCompat: int getVolumeControlStream()> to <android.media.AudioAttributes: int getUsage()>has compatibility isssues！
-----------------------------------------
crashApis:93
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 296 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
5055call roads:
1 Mainhead roads:
5054 Packageshead roads:
Roads number exceed, exit!5054
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 297 Potential Issue API: SDKCheck of <android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 < 23
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.AdaptiveIconDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 298 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
20call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
19 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon setTintList(android.content.res.ColorStateList)>
One road protect good!
crashApis:94
crashApisInMain:14
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 299 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createDeviceProtectedStorageContext()> is checking!!!
The life time of api is [24,31]
5043call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzlq: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzmc: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzpp: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zznz: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzlw: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdg: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdy zzb(android.content.Context)>[]--><com.google.android.gms.internal.measurement.zzdc: com.google.android.gms.internal.measurement.zzdy zza(android.content.Context)>[[$z1 == 0], [-$yysi0 < 24]]
###Multi invoking in one method, need manual check!!!--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzlq: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzmc: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzpp: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zznz: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzlw: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdg: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdy zzb(android.content.Context)>[]--><com.google.android.gms.internal.measurement.zzdc: com.google.android.gms.internal.measurement.zzdy zza(android.content.Context)>[[$z1 == 0]][[-$yysi0 < 24]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzlq: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzmc: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzpp: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zznz: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzlw: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdg: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdy zzb(android.content.Context)>[]--><com.google.android.gms.internal.measurement.zzdc: com.google.android.gms.internal.measurement.zzdy zza(android.content.Context)>[[$z1 == 0], [-$yysi0 < 24]]--><android.content.Context: android.content.Context createDeviceProtectedStorageContext()>
One road protect good!
5042 Packageshead roads:
Roads number exceed, exit!5042
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 300 Potential Issue API: SDKCheck of <android.view.Window: void setTransitionBackgroundFadeDuration(long)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void setUpReturnTransform(android.app.Activity,android.view.Window)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void updateBackgroundFadeDuration(android.view.Window,com.google.android.material.transition.platform.MaterialContainerTransform)>[]--><android.view.Window: void setTransitionBackgroundFadeDuration(long)>
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void setUpEnterTransform(android.view.Window)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void updateBackgroundFadeDuration(android.view.Window,com.google.android.material.transition.platform.MaterialContainerTransform)>[]--><android.view.Window: void setTransitionBackgroundFadeDuration(long)>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)> to <android.view.Window: void setTransitionBackgroundFadeDuration(long)>has compatibility isssues！
-----------------------------------------
crashApis:95
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 301 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void setSpan(java.lang.Object,int,int,int)> is checking!!!
The life time of api is [28,31]
5003call roads:
1 Mainhead roads:
5002 Packageshead roads:
Roads number exceed, exit!5002
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 302 Potential Issue API: SDKCheck of <android.view.View: boolean isFocusedByDefault()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isFocusedByDefault(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isFocusedByDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 303 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
i0 < 26
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]]--><androidx.core.content.pm.ShortcutManagerCompat: boolean isRequestPinShortcutSupported(android.content.Context)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
-$i0 < 26
Good road: <com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i0 < 26]]--><com.boardgamegeek.util.shortcut.ShortcutTask: void createShortcutForOreo()>[]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 304 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)> is checking!!!
The life time of api is [28,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
i1 < 23
-i0 < 20
i0 < 24
-i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]][[i0 < 24]][[-i0 < 28]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20], [i0 < 24], [-i0 < 28]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setSemanticAction(int)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 305 Potential Issue API: SDKCheck of <android.util.SizeF: float getWidth()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: float getWidth()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSizeF(android.util.SizeF,int)> to <android.util.SizeF: float getWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.SizeKt: float component1(android.util.SizeF)>[]--><android.util.SizeF: float getWidth()>
#2.the call statck between class <androidx.core.util.SizeKt: float component1(android.util.SizeF)> to <android.util.SizeF: float getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:96
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 306 Potential Issue API: SDKCheck of <android.view.View: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isScreenReaderFocusable()>
#1.the call statck between class <androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isScreenReaderFocusable()>has compatibility isssues！
-----------------------------------------
crashApis:97
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 307 Potential Issue API: SDKCheck of <android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.database.sqlite.SQLiteCursorCompat: void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean)>[[-$i0 < 28]]--><android.database.sqlite.SQLiteCursor: void setFillWindowForwardOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 308 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)> is checking!!!
The life time of api is [23,30]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
36 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setAlignment(android.text.Layout.Alignment)>
One road protect good!
containsStatic:true
containsTry:true
37call by main package
-----------------------------------------
#################################################
N 309 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 21
-i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()>[[-i0 < 21]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()>[[-i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 310 Potential Issue API: SDKCheck of <android.graphics.Color: float luminance(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float getLuminance(long)>[]--><android.graphics.Color: float luminance(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getLuminance(long)> to <android.graphics.Color: float luminance(long)>has compatibility isssues！
-----------------------------------------
crashApis:98
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 311 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 312 Potential Issue API: SDKCheck of <android.view.View: void setAutofillHints(java.lang.String[])> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setAutofillHints(android.view.View,java.lang.String[])>[[-$i0 < 26]]--><android.view.View: void setAutofillHints(java.lang.String[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 313 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void releasePermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()>[]--><android.view.inputmethod.InputContentInfo: void releasePermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void releasePermission()> to <android.view.inputmethod.InputContentInfo: void releasePermission()>has compatibility isssues！
-----------------------------------------
crashApis:99
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 314 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeChild(android.view.View,int)>[[-$i1 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 315 Potential Issue API: SDKCheck of <android.graphics.Canvas: void disableZ()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21]][[-i0 < 29]]
i0 >= 21
-i0 < 29
Good road: <androidx.transition.GhostViewPort: void onDraw(android.graphics.Canvas)>[]--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21], [-i0 < 29]]--><android.graphics.Canvas: void disableZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 316 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i3 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int)>[[-$i3 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 317 Potential Issue API: SDKCheck of <android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><androidx.core.content.pm.ShortcutInfoCompat: androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle)>[]--><android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:100
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 318 Potential Issue API: SDKCheck of <android.graphics.Color: long pack(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long toColorLong(int)>[]--><android.graphics.Color: long pack(int)>
#1.the call statck between class <androidx.core.graphics.ColorKt: long toColorLong(int)> to <android.graphics.Color: long pack(int)>has compatibility isssues！
-----------------------------------------
crashApis:101
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 319 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 320 Potential Issue API: SDKCheck of <android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.os.HandlerCompat: android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback)>[[-i0 < 28]]--><android.os.Handler: android.os.Handler createAsync(android.os.Looper,android.os.Handler.Callback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 321 Potential Issue API: SDKCheck of <android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi21: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)> to <android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
crashApis:102
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 322 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes build()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>
One road protect good!
-$i1 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>[[-$i1 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 323 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setShortcutId(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 324 Potential Issue API: SDKCheck of <android.graphics.Color: float alpha()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: float alpha()>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: float alpha()>has compatibility isssues！
-----------------------------------------
crashApis:103
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 325 Potential Issue API: SDKCheck of <android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.github.amlcurran.showcaseview.ShowcaseView: void dispatchDraw(android.graphics.Canvas)>[]--><com.github.amlcurran.showcaseview.TextDrawer: void draw(android.graphics.Canvas)>[]--><android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#1.the call statck between class <com.github.amlcurran.showcaseview.ShowcaseView: void dispatchDraw(android.graphics.Canvas)> to <android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:104
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 326 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEpicenterBounds(android.graphics.Rect)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 327 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobScheduler: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>has compatibility isssues！
-----------------------------------------
crashApis:105
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 328 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)>[]--><androidx.media.MediaBrowserServiceCompatApi21: void notifyChildrenChanged(java.lang.Object,java.lang.String)>[]--><android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21: void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle)> to <android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:106
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 329 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)> is checking!!!
The life time of api is [29,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLived(boolean)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 330 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 331 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextDirectionHeuristic getTextDirection()>has compatibility isssues！
-----------------------------------------
crashApis:107
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 332 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getManifestShortcuts()> is checking!!!
The life time of api is [25,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 333 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
5146call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.MechanicsActivity: com.boardgamegeek.ui.viewmodel.MechanicsViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void preProcess()>[]--><com.google.android.gms.measurement.internal.zzif: void run()>[]--><com.google.android.gms.measurement.internal.zzic: void zza(int,java.lang.Exception,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfu: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfv: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[[try]]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)>[]--><com.google.android.gms.measurement.internal.zzgy: void zzb(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)>[]--><com.google.android.gms.measurement.internal.zzkw: android.os.Bundle zzb(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GeekListActivity: com.boardgamegeek.ui.viewmodel.GeekListViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
5145 Packageshead roads:
Roads number exceed, exit!5145
crashApis:108
crashApisInMain:15
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 334 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isPowerSaveMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 335 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()> to <android.view.WindowInsets: android.graphics.Insets getTappableElementInsets()>has compatibility isssues！
-----------------------------------------
crashApis:109
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 336 Potential Issue API: SDKCheck of <android.media.VolumeProvider: void setCurrentVolume(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.media.VolumeProviderCompat: void setCurrentVolume(int)>[[-$i1 < 21]]--><androidx.media.VolumeProviderCompatApi21: void setCurrentVolume(java.lang.Object,int)>[]--><android.media.VolumeProvider: void setCurrentVolume(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 337 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getLongLabel()>has compatibility isssues！
-----------------------------------------
crashApis:110
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 338 Potential Issue API: SDKCheck of <android.widget.ImageView: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.widget.ForegroundImageView: void drawableHotspotChanged(float,float)>[]--><android.widget.ImageView: void drawableHotspotChanged(float,float)>
#1.the call statck between class <com.boardgamegeek.ui.widget.ForegroundImageView: void drawableHotspotChanged(float,float)> to <android.widget.ImageView: void drawableHotspotChanged(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:111
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 339 Potential Issue API: SDKCheck of <android.graphics.Paint: float getLetterSpacing()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 21]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21]][[$i0 < 23]]
-$i0 < 21
$i0 < 23
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[-$i0 < 21], [$i0 < 23]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 21]]--><android.graphics.Paint: float getLetterSpacing()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 340 Potential Issue API: SDKCheck of <android.app.FragmentManager: void registerFragmentLifecycleCallbacks(android.app.FragmentManager.FragmentLifecycleCallbacks,boolean)> is checking!!!
The life time of api is [26,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 341 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-$i0 < 26
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
-i0 < 25
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setExtras(android.os.PersistableBundle)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 342 Potential Issue API: SDKCheck of <android.view.WindowInsets: boolean isRound()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()>[]--><android.view.WindowInsets: boolean isRound()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()> to <android.view.WindowInsets: boolean isRound()>has compatibility isssues！
-----------------------------------------
crashApis:112
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 343 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.TextDirectionHeuristic getTextDirectionHeuristic()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 344 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTextEntryKey(boolean)>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: void setTextEntryKey(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 345 Potential Issue API: SDKCheck of <android.graphics.BlendModeColorFilter: void <init>(int,android.graphics.BlendMode)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 29
Good road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void access$000(android.view.Window)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void removeWindowBackground(android.view.Window)>[]--><androidx.core.graphics.BlendModeColorFilterCompat: android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat)>[[-i1 < 29]]--><android.graphics.BlendModeColorFilter: void <init>(int,android.graphics.BlendMode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 346 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.lang.String getResultKey()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.app.RemoteInput: java.lang.String getResultKey()>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.app.RemoteInput: java.lang.String getResultKey()>has compatibility isssues！
-----------------------------------------
i1 < 29
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i1 < 29]]--><android.app.RemoteInput: java.lang.String getResultKey()>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.RemoteInput: java.lang.String getResultKey()>has compatibility isssues！
-----------------------------------------
crashApis:113
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 347 Potential Issue API: SDKCheck of <android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.viewpager2.widget.ViewPager2$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>[]--><android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2$SavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)> to <android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>has compatibility isssues！
-----------------------------------------
-$i0 < 24
Good road: <androidx.viewpager2.widget.ViewPager2$SavedState$1: androidx.viewpager2.widget.ViewPager2$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)>[[-$i0 < 24]]--><android.view.View.BaseSavedState: void <init>(android.os.Parcel,java.lang.ClassLoader)>
One road protect good!
crashApis:114
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 348 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()>[]--><androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 349 Potential Issue API: SDKCheck of <android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
$i4 < 18
Good road: <com.boardgamegeek.ui.LoginActivity$Companion: android.os.Bundle createIntentBundle(android.content.Context,android.accounts.AccountAuthenticatorResponse,java.lang.String)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForPlayer()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.CollectionFragment: void addFilter(com.boardgamegeek.filterer.CollectionFilterer)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
$i4 < 18
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18]]--><android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 350 Potential Issue API: SDKCheck of <android.transition.Transition: java.util.List getTargetTypes()> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 351 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextAppearance(int)> is checking!!!
The life time of api is [23,31]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
-$i1 < 23
Good road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
$i0 < 17
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
$i0 < 17
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounterTextAppearanceAndColor()>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
$i0 < 17
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.boardgamegeek.ui.dialog.GameRanksFragment$onActivityCreated$2: void onChanged(java.util.List)>[]--><com.boardgamegeek.ui.widget.GameRankRow: void <init>(android.content.Context,boolean)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setErrorEnabled(boolean)>[[$i0 < 17]]--><com.google.android.material.textfield.IndicatorViewController: void setErrorTextAppearance(int)>[]--><com.google.android.material.textfield.TextInputLayout: void setTextAppearanceCompatWithErrorFallback(android.widget.TextView,int)>[[try]]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setTextAppearanceActive(int)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.PagerTabStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.PagerTitleStrip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
-$i1 < 23
Good road: <com.google.android.material.tabs.TabLayout$TabView: void update()>[]--><androidx.core.widget.TextViewCompat: void setTextAppearance(android.widget.TextView,int)>[[-$i1 < 23]]--><android.widget.TextView: void setTextAppearance(int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.chip.Chip: void setTextAppearance(int)>[]--><android.widget.TextView: void setTextAppearance(int)>
#15.the call statck between class <com.google.android.material.chip.Chip: void setTextAppearance(int)> to <android.widget.TextView: void setTextAppearance(int)>has compatibility isssues！
-----------------------------------------
crashApis:115
containsStatic:false
containsTry:true
16call by main package
-----------------------------------------
#################################################
N 352 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setActivity(android.content.ComponentName)> is checking!!!
The life time of api is [25,31]
4985call roads:
1 Mainhead roads:
4984 Packageshead roads:
Roads number exceed, exit!4984
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 353 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDeleteIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:116
crashApisInMain:16
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 354 Potential Issue API: SDKCheck of <android.app.RemoteInput: android.os.Bundle getExtras()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.app.RemoteInput: android.os.Bundle getExtras()>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.app.RemoteInput: android.os.Bundle getExtras()>has compatibility isssues！
-----------------------------------------
i1 < 29
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i1 < 29]]--><android.app.RemoteInput: android.os.Bundle getExtras()>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.RemoteInput: android.os.Bundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:117
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 355 Potential Issue API: SDKCheck of <android.view.View: void setAnimationMatrix(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setAnimationMatrix(android.view.View,android.graphics.Matrix)>[]--><android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setAnimationMatrix(android.view.View,android.graphics.Matrix)> to <android.view.View: void setAnimationMatrix(android.graphics.Matrix)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.transition.ViewUtilsApi21: void setAnimationMatrix(android.view.View,android.graphics.Matrix)>[[try]]--><android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
One road protect good!
crashApis:118
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 356 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: int getType()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getType()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: int getType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 357 Potential Issue API: SDKCheck of <android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)> is checking!!!
The life time of api is [21,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 358 Potential Issue API: SDKCheck of <android.widget.TextView: void setBreakStrategy(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18]][[i0 >= 23]]
i0 < 18
i0 >= 23
Good road: <androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)>[[i0 < 18], [i0 >= 23]]--><android.widget.TextView: void setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 359 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>has compatibility isssues！
-----------------------------------------
crashApis:119
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 360 Potential Issue API: SDKCheck of <android.view.Window: int getNavigationBarColor()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <com.google.android.material.navigation.NavigationView$2: void onGlobalLayout()>[[-i0 < 21]]--><android.view.Window: int getNavigationBarColor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 361 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLongArray(java.lang.String,long[])> is checking!!!
The life time of api is [21,31]
33call roads:
0 Mainhead roads:
33 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.mikepenz.fastadapter.FastAdapter: android.os.Bundle saveInstanceState$default(com.mikepenz.fastadapter.FastAdapter,android.os.Bundle,java.lang.String,int,java.lang.Object)>[]--><com.mikepenz.fastadapter.FastAdapter: android.os.Bundle saveInstanceState(android.os.Bundle,java.lang.String)>[]--><com.mikepenz.fastadapter.select.SelectExtension: void saveInstanceState(android.os.Bundle,java.lang.String)>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#1.the call statck between class <com.mikepenz.fastadapter.FastAdapter: android.os.Bundle saveInstanceState$default(com.mikepenz.fastadapter.FastAdapter,android.os.Bundle,java.lang.String,int,java.lang.Object)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#2.the call statck between class <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#3.the call statck between class <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#4.the call statck between class <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#5.the call statck between class <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#6.the call statck between class <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#7.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#8.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#9.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
#10.the call statck between class <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)> to <android.os.BaseBundle: void putLongArray(java.lang.String,long[])>has compatibility isssues！
-----------------------------------------
crashApis:120
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 362 Potential Issue API: SDKCheck of <android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)>[]--><androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)>[[-i0 < 29]]--><android.app.Activity: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 363 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setSlant(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 364 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:121
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 365 Potential Issue API: SDKCheck of <android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context)>[]--><com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void initOutlineProvider()>[[-$i0 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-i2 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-i2 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setBoundsViewOutlineProvider(android.view.View)>[]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void initOutlineProvider()>[[-$i0 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRound(float)>[]--><androidx.constraintlayout.utils.widget.ImageFilterView: void setRoundPercent(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.imageview.ShapeableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
-$i3 < 21
-i1 < 21
Good road: <androidx.constraintlayout.utils.widget.ImageFilterButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void init(android.content.Context,android.util.AttributeSet)>[[-$i3 < 21]]--><androidx.constraintlayout.utils.widget.ImageFilterButton: void setRound(float)>[[-i1 < 21]]--><android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
One road protect good!
containsStatic:false
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 366 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: android.content.ComponentName getActivity()> is checking!!!
The life time of api is [25,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 367 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 368 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
4985call roads:
1 Mainhead roads:
4984 Packageshead roads:
Roads number exceed, exit!4984
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 369 Potential Issue API: SDKCheck of <android.app.Activity: void startPostponedEnterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()>[]--><androidx.core.app.ActivityCompat: void startPostponedEnterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void startPostponedEnterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 370 Potential Issue API: SDKCheck of <android.view.View: boolean restoreDefaultFocus()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean restoreDefaultFocus(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean restoreDefaultFocus()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 371 Potential Issue API: SDKCheck of <android.view.View: int getNextClusterForwardId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: int getNextClusterForwardId(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getNextClusterForwardId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 372 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 373 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [21,31]
22call roads:
0 Mainhead roads:
22 Packageshead roads:
-$yysi0 < 21
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[-$yysi0 < 21]]--><com.google.android.material.chip.ChipDrawable: void updateFrameworkCloseIconRipple()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.button.MaterialButton: void <init>(android.content.Context)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.button.MaterialButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.button.MaterialButtonHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.button.MaterialButtonHelper: android.graphics.drawable.Drawable createBackground()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createForegroundRippleDrawable()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)>[]--><com.google.android.material.chip.Chip: boolean ensureAccessibleTouchTarget(int)>[]--><com.google.android.material.chip.Chip: void removeBackgroundInset()>[]--><com.google.android.material.chip.Chip: void updateBackgroundDrawable()>[[-$yysi0 < 21]]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
#5.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void initializeBackgroundDrawable(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,android.content.res.ColorStateList,int)> to <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.google.android.material.datepicker.YearGridAdapter: void onBindViewHolder(com.google.android.material.datepicker.YearGridAdapter$ViewHolder,int)>[]--><com.google.android.material.datepicker.CalendarItemStyle: void styleItem(android.widget.TextView)>[[-$i0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)>[]--><com.google.android.material.chip.Chip: boolean ensureAccessibleTouchTarget(int)>[]--><com.google.android.material.chip.Chip: void removeBackgroundInset()>[]--><com.google.android.material.chip.Chip: void updateBackgroundDrawable()>[[-$yysi0 < 21]]--><com.google.android.material.chip.Chip: void updateFrameworkRippleBackground()>[]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable getClickableForeground()>[]--><com.google.android.material.card.MaterialCardViewHelper: android.graphics.drawable.Drawable createForegroundRippleDrawable()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-i0 < 21
Good road: <com.google.android.material.tabs.TabLayout$TabView: void updateBackgroundDrawable(android.content.Context)>[[-i0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.textfield.DropdownMenuEndIconDelegate: void access$600(com.google.android.material.textfield.DropdownMenuEndIconDelegate,android.widget.AutoCompleteTextView)>[]--><com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffect(android.widget.AutoCompleteTextView)>[]--><com.google.android.material.textfield.DropdownMenuEndIconDelegate: void addRippleEffectOnOutlinedLayout(android.widget.AutoCompleteTextView,int,int[][],com.google.android.material.shape.MaterialShapeDrawable)>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
crashApis:122
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 374 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0], [$yysi0 < 16], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0]][[$yysi0 < 16]][[-$i8 < 21]]
-$z3 == 0
$yysi0 < 16
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[-$z3 == 0], [$yysi0 < 16], [-$i8 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
-i0 < 21
Good road: <com.google.android.material.navigation.NavigationView: void onInsetsChanged(androidx.core.view.WindowInsetsCompat)>[]--><com.google.android.material.internal.NavigationMenuPresenter: void dispatchApplyWindowInsets(androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
-i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>[]--><android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
#4.the call statck between class <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> to <android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
crashApis:123
containsStatic:true
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 375 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)> is checking!!!
The life time of api is [29,31]
13call roads:
1 Mainhead roads:
i0 < 23
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
i1 < 23
-i0 < 20
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
12 Packageshead roads:
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
i0 < 23
-$i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
-i1 < 20
-$i0 < 29
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]
-i1 < 20
i0 < 26
-i0 < 26
-$i0 < 29
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)>[[-i0 < 26]]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[[-$i0 < 29]]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setEditChoicesBeforeSending(int)>
One road protect good!
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 376 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: void getBoundsInScreen(android.graphics.Rect)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 377 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind()>[[-$i0 < 21]]--><android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 378 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeDynamicShortcuts(android.content.Context,java.util.List)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 379 Potential Issue API: SDKCheck of <android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>[[-i0 < 20]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>[[-i0 < 20]]
-i1 < 20
i0 < 26
-i0 < 20
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>[[-i0 < 20]]--><android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 380 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)> is checking!!!
The life time of api is [24,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setCategories(java.util.Set)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 381 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setLightColor(int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[[-$i0 < 26]]--><com.boardgamegeek.util.NotificationUtils: void createNotificationChannels(android.content.Context)>[]--><android.app.NotificationChannel: void setLightColor(int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 382 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: int getScaledHoverSlop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)>[[-$i0 < 28]]--><android.view.ViewConfiguration: int getScaledHoverSlop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 383 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 384 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>[[]]--><android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)> to <android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>has compatibility isssues！
-----------------------------------------
crashApis:124
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 385 Potential Issue API: SDKCheck of <android.view.animation.PathInterpolator: void <init>(float,float,float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(float,float,float,float)>[[-$i0 < 21]]--><android.view.animation.PathInterpolator: void <init>(float,float,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 386 Potential Issue API: SDKCheck of <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:125
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 387 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setKey(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 388 Potential Issue API: SDKCheck of <android.view.View: void setFocusedByDefault(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setFocusedByDefault(android.view.View,boolean)>[[-$i0 < 26]]--><android.view.View: void setFocusedByDefault(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 389 Potential Issue API: SDKCheck of <android.view.View: void setForeground(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
14call roads:
0 Mainhead roads:
14 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#1.the call statck between class <com.google.android.material.card.MaterialCardView: void setClickable(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void setCornerRadius(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#2.the call statck between class <com.google.android.material.card.MaterialCardView: void setRadius(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#3.the call statck between class <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#4.the call statck between class <com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsets()>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#5.the call statck between class <com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$yysi0 >= 18
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void removeBadge(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void removeBadge(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void removeBadge()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryRemoveBadgeFromAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void detachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 >= 18
Good road: <com.google.android.material.tabs.TabLayout$TabView: void tryAttachBadgeToAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
-$yysi0 >= 18
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeIfNeeded(com.google.android.material.bottomnavigation.BottomNavigationItemView)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryAttachBadgeToAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#9.the call statck between class <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
-$yysi0 >= 18
Good road: <com.google.android.material.bottomnavigation.BottomNavigationPresenter: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setBadgeDrawables(android.util.SparseArray)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setBadge(com.google.android.material.badge.BadgeDrawable)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void tryAttachBadgeToAnchor(android.view.View)>[]--><com.google.android.material.badge.BadgeUtils: void attachBadgeDrawable(com.google.android.material.badge.BadgeDrawable,android.view.View,android.widget.FrameLayout)>[[-$yysi0 >= 18]]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
One road protect good!
crashApis:126
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 390 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 391 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace getColorSpace()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace getColorSpace()>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace getColorSpace()>has compatibility isssues！
-----------------------------------------
crashApis:127
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 392 Potential Issue API: SDKCheck of <android.view.View: int getImportantForAutofill()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: int getImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: int getImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 393 Potential Issue API: SDKCheck of <android.view.View: void cancelDragAndDrop()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void cancelDragAndDrop(android.view.View)>[[-$i0 < 24]]--><android.view.View: void cancelDragAndDrop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 394 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: int getRegionCount()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: int getRegionCount()>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: int getRegionCount()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 395 Potential Issue API: SDKCheck of <android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)>[[-$i1 < 26]]--><android.view.View: android.view.View keyboardNavigationClusterSearch(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 396 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setLineSpacing(float,float)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 397 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily build()>has compatibility isssues！
-----------------------------------------
crashApis:128
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 398 Potential Issue API: SDKCheck of <android.content.res.Resources.Theme: android.content.res.Resources getResources()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 399 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setContextClickable(boolean)>[[-$i0 < 23]]--><android.view.accessibility.AccessibilityNodeInfo: void setContextClickable(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 400 Potential Issue API: SDKCheck of <android.view.View: boolean startNestedScroll(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)>[]--><androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>[[-$i1 < 21]]--><android.view.View: boolean startNestedScroll(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 401 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 402 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <com.google.android.material.snackbar.Snackbar: int getDuration()>[[-$i1 < 29]]--><android.view.accessibility.AccessibilityManager: int getRecommendedTimeoutMillis(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 403 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setDesiredHeightResId(int)>has compatibility isssues！
-----------------------------------------
crashApis:129
crashApisInMain:17
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 404 Potential Issue API: SDKCheck of <android.graphics.Path: boolean isConvex()> is checking!!!
The life time of api is [21,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.textfield.CutoutDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.slider.BaseSlider: void onDraw(android.graphics.Canvas)>[]--><com.google.android.material.slider.BaseSlider: void drawThumbs(android.graphics.Canvas,int,int)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.tooltip.TooltipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.ripple.RippleDrawableCompat: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Path: boolean isConvex()>
#6.the call statck between class <com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Path: boolean isConvex()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Path: boolean isConvex()>
#7.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Path: boolean isConvex()>has compatibility isssues！
-----------------------------------------
-$i0 < 21
Good road: <com.google.android.material.badge.BadgeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.transition.platform.MaterialContainerTransform$TransitionDrawable: void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.transition.MaterialContainerTransform$TransitionDrawable: void drawElevationShadowWithMaterialShapeDrawable(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void maybeDrawCompatShadow(android.graphics.Canvas)>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean hasCompatShadow()>[]--><com.google.android.material.shape.MaterialShapeDrawable: boolean requiresCompatShadow()>[[-$i0 < 21]]--><android.graphics.Path: boolean isConvex()>
One road protect good!
crashApis:130
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 405 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)>[[-i0 < 23]]--><android.widget.CompoundButton: android.graphics.drawable.Drawable getButtonDrawable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 406 Potential Issue API: SDKCheck of <android.view.View: java.lang.String getTransitionName()> is checking!!!
The life time of api is [21,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 407 Potential Issue API: SDKCheck of <android.content.pm.PermissionInfo: int getProtectionFlags()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.pm.PermissionInfoCompat: int getProtectionFlags(android.content.pm.PermissionInfo)>[[-$i0 < 28]]--><android.content.pm.PermissionInfo: int getProtectionFlags()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 408 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int hashCode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesImplApi21: int hashCode()>[]--><android.media.AudioAttributes: int hashCode()>
#1.the call statck between class <androidx.media.AudioAttributesImplApi21: int hashCode()> to <android.media.AudioAttributes: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:131
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 409 Potential Issue API: SDKCheck of <android.view.ViewGroup: void onViewAdded(android.view.View)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <androidx.constraintlayout.motion.widget.MotionLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: boolean updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[[try]]--><androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.solver.widgets.ConstraintWidget getTargetWidget(int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)>[[]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
-i0 < 14
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
#2.the call statck between class <androidx.constraintlayout.motion.widget.MotionLayout: void onViewAdded(android.view.View)> to <android.view.ViewGroup: void onViewAdded(android.view.View)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.transition.GhostViewHolder: void onViewAdded(android.view.View)>[]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
#3.the call statck between class <androidx.transition.GhostViewHolder: void onViewAdded(android.view.View)> to <android.view.ViewGroup: void onViewAdded(android.view.View)>has compatibility isssues！
-----------------------------------------
-$i0 >= 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
-$i0 >= 14
-i0 < 14
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[[-$i0 >= 14]]--><androidx.constraintlayout.widget.ConstraintLayout: void onViewAdded(android.view.View)>[[-i0 < 14]]--><android.view.ViewGroup: void onViewAdded(android.view.View)>
One road protect good!
crashApis:132
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 410 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface build()>has compatibility isssues！
-----------------------------------------
crashApis:133
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 411 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList getAdjustedDefault()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[-$i0 < 24]]--><android.os.LocaleList: android.os.LocaleList getAdjustedDefault()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 412 Potential Issue API: SDKCheck of <android.util.Half: android.util.Half valueOf(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.util.HalfKt: android.util.Half toHalf(java.lang.String)>[]--><android.util.Half: android.util.Half valueOf(java.lang.String)>
#1.the call statck between class <androidx.core.util.HalfKt: android.util.Half toHalf(java.lang.String)> to <android.util.Half: android.util.Half valueOf(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:134
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 413 Potential Issue API: SDKCheck of <android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.ViewCompat: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)>[[-i0 < 28]]--><android.view.View: void addOnUnhandledKeyEventListener(android.view.View.OnUnhandledKeyEventListener)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 414 Potential Issue API: SDKCheck of <android.view.View: void setNestedScrollingEnabled(boolean)> is checking!!!
The life time of api is [21,31]
4987call roads:
1 Mainhead roads:
4986 Packageshead roads:
Roads number exceed, exit!4986
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 415 Potential Issue API: SDKCheck of <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.graphics.ImageDecoderKt: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)>[]--><android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)>
#1.the call statck between class <androidx.core.graphics.ImageDecoderKt: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)> to <android.graphics.ImageDecoder: android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)>has compatibility isssues！
-----------------------------------------
crashApis:135
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 416 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 417 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 418 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()>[[try]]--><android.app.job.JobParameters: android.app.job.JobWorkItem dequeueWork()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 419 Potential Issue API: SDKCheck of <android.os.BaseBundle: int[] getIntArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int[] getIntArray(java.lang.String)>
#1.the call statck between class <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int[] getIntArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:136
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 420 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: boolean isSelected()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 421 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemWindowInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:137
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 422 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#2.the call statck between class <androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 25
i0 < 25
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)>[[i0 < 25]]--><androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)>[[i0 < 25]]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#3.the call statck between class <androidx.core.view.inputmethod.InputConnectionCompat: android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener)> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 25
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[]--><androidx.core.view.inputmethod.EditorInfoCompat: java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo)>[[i0 < 25]]--><android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
#4.the call statck between class <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:138
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 423 Potential Issue API: SDKCheck of <android.location.LocationManager: boolean isLocationEnabled()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.location.LocationManagerCompat: boolean isLocationEnabled(android.location.LocationManager)>[[-$i0 < 28]]--><android.location.LocationManager: boolean isLocationEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 424 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: java.lang.String getResPackage()> is checking!!!
The life time of api is [28,31]
26call roads:
1 Mainhead roads:
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
25 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 24
-i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i1 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]][[-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 26
-$yysi0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
$i0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[-i1 < 23]][[i0 < 24]][[i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 28
-i1 < 23
i0 < 24
i1 < 29
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: java.lang.String getResPackage()>
One road protect good!
containsStatic:true
containsTry:true
26call by main package
-----------------------------------------
#################################################
N 425 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getBreakStrategy()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getBreakStrategy()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getBreakStrategy()>has compatibility isssues！
-----------------------------------------
crashApis:139
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 426 Potential Issue API: SDKCheck of <android.util.SizeF: void <init>(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)>[]--><android.util.SizeF: void <init>(float,float)>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: android.util.SizeF readSizeF(android.util.SizeF,int)> to <android.util.SizeF: void <init>(float,float)>has compatibility isssues！
-----------------------------------------
crashApis:140
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 427 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor: android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)>[]--><android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor: android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)> to <android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:141
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 428 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
-$i0 < 26
Good road: <com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i0 < 26]]--><com.boardgamegeek.util.shortcut.ShortcutTask: void createShortcutForOreo()>[]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 429 Potential Issue API: SDKCheck of <android.app.Notification: long getTimeoutAfter()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.app.NotificationCompat: long getTimeoutAfter(android.app.Notification)>[[-$i1 < 26]]--><android.app.Notification: long getTimeoutAfter()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 430 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)>[]--><android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: void populateFlags(android.app.job.JobInfo$Builder,java.util.Set)> to <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:142
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 431 Potential Issue API: SDKCheck of <android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldShowRequestPermissionRationale(java.lang.String)>[]--><androidx.core.app.ActivityCompat: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)>[[-$i0 < 23]]--><android.app.Activity: boolean shouldShowRequestPermissionRationale(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 432 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#7.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#8.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>has compatibility isssues！
-----------------------------------------
crashApis:143
crashApisInMain:18
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 433 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int)>[[-$i4 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeClipRevealAnimation(android.view.View,int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 434 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.mikepenz.aboutlibraries.ui.LibsActivity dummyMainMethod_com_mikepenz_aboutlibraries_ui_LibsActivity(android.content.Intent)>[]--><com.mikepenz.aboutlibraries.ui.LibsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:144
crashApisInMain:19
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 435 Potential Issue API: SDKCheck of <android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.ActivityCompat: androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent)>[]--><androidx.core.view.DragAndDropPermissionsCompat: androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent)>[[-i0 < 24]]--><android.app.Activity: android.view.DragAndDropPermissions requestDragAndDropPermissions(android.view.DragEvent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 436 Potential Issue API: SDKCheck of <android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)>[[-$i1 < 26]]--><android.view.View: void addKeyboardNavigationClusters(java.util.Collection,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 437 Potential Issue API: SDKCheck of <android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>[]--><android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)> to <android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>has compatibility isssues！
-----------------------------------------
crashApis:145
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 438 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
5011call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzls: boolean zzd()>[]--><com.google.android.gms.internal.measurement.zzdh: java.lang.Object zzc()>[[try]]--><com.google.android.gms.internal.measurement.zzcy: com.google.android.gms.internal.measurement.zzcy zza(android.content.Context)>[[try]]--><androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)>[]--><androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)>[]--><androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOpNoThrow(java.lang.String,java.lang.String)>
One road protect good!
5010 Packageshead roads:
Roads number exceed, exit!5010
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 439 Potential Issue API: SDKCheck of <android.view.View: float getTransitionAlpha()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi19: float getTransitionAlpha(android.view.View)>[[try]]--><android.view.View: float getTransitionAlpha()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: float getTransitionAlpha(android.view.View)>[]--><android.view.View: float getTransitionAlpha()>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: float getTransitionAlpha(android.view.View)> to <android.view.View: float getTransitionAlpha()>has compatibility isssues！
-----------------------------------------
crashApis:146
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 440 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIntent(android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:147
crashApisInMain:20
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 441 Potential Issue API: SDKCheck of <android.text.PrecomputedText: void removeSpan(java.lang.Object)> is checking!!!
The life time of api is [28,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
$yysi0 < 28
$yysi0 < 28
-$i0 < 29
Good road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.widget.TextView,int)>[[$yysi0 < 28]]--><androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,int)>[[$yysi0 < 28]]--><androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>[[-$i0 < 29]]--><android.text.PrecomputedText: void removeSpan(java.lang.Object)>
One road protect good!
-$i0 < 29
Good road: <com.boardgamegeek.util.XmlApi2TagHandler$Companion: void setSpanFromMark(android.text.Spannable,java.lang.Object,java.lang.Object[])>[]--><androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>[[-$i0 < 29]]--><android.text.PrecomputedText: void removeSpan(java.lang.Object)>
One road protect good!
-$i0 < 29
Good road: <androidx.core.text.SpannableStringKt: void clearSpans(android.text.Spannable)>[]--><androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)>[[-$i0 < 29]]--><android.text.PrecomputedText: void removeSpan(java.lang.Object)>
One road protect good!
containsStatic:true
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 442 Potential Issue API: SDKCheck of <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.RequestStoragePermissionActivity dummyMainMethod_leakcanary_internal_RequestStoragePermissionActivity(android.content.Intent)>[]--><leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)>[]--><leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[]--><android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <leakcanary.internal.RequestStoragePermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])> to <android.content.ContextWrapper: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:148
crashApisInMain:21
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 443 Potential Issue API: SDKCheck of <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$yysi0 < 19
Good road: <androidx.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int)>[]--><androidx.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>[]--><androidx.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup)>[[$yysi0 < 19]]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Picture)>
One road protect good!
containsStatic:true
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 444 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean canApplyTheme()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: boolean canApplyTheme()>
One road protect good!
-$i0 < 21
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: boolean canApplyTheme()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 445 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetBottom()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetBottom()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetBottom()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 446 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getType()> is checking!!!
The life time of api is [28,31]
19call roads:
1 Mainhead roads:
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
18 Packageshead roads:
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata$Builder: androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat)>[]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>[]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[-i1 < 23]][[i0 < 24]][[i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 28
-i1 < 23
i0 < 24
i1 < 29
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getType(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getType()>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 447 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>has compatibility isssues！
-----------------------------------------
crashApis:149
crashApisInMain:22
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 448 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void <init>()> is checking!!!
The life time of api is [22,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
i0 != 21
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 != 21]]--><android.animation.StateListAnimator: void <init>()>
#1.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
i2 < 21
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
One road protect good!
-$i0 < 21
!!!this api will crash on sdk 21 
Error road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void <init>()>
#3.the call statck between class <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)> to <android.animation.StateListAnimator: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:150
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 449 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: void <init>(java.lang.String)> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#7.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#8.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: void <init>(java.lang.String)>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: void <init>(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:151
crashApisInMain:23
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 450 Potential Issue API: SDKCheck of <android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)>[[-$i1 < 21]]--><android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 451 Potential Issue API: SDKCheck of <android.view.View: void setStateListAnimator(android.animation.StateListAnimator)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24], [i0 != 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24]][[i0 != 21]]
i0 > 24
i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[i0 > 24], [i0 != 21]]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
-i2 < 21
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-i2 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setStateListAnimatorFromAttrs(android.view.View,android.util.AttributeSet,int,int)>[[try]]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 452 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setShouldShowIcon(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[[-$i0 < 28]]--><android.app.RemoteAction: void setShouldShowIcon(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 453 Potential Issue API: SDKCheck of <android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 20
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20]]--><android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 454 Potential Issue API: SDKCheck of <android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.content.res.ResourcesCompat: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)>[[-$i1 < 23]]--><android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int,android.content.res.Resources.Theme)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 455 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float)>[[-$i0 < 24]]--><android.view.PointerIcon: android.view.PointerIcon create(android.graphics.Bitmap,float,float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 456 Potential Issue API: SDKCheck of <android.view.View: boolean isImportantForAccessibility()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: boolean isImportantForAccessibility(android.view.View)>[[-$i0 < 21]]--><android.view.View: boolean isImportantForAccessibility()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 457 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
5939call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.TopGamesActivity dummyMainMethod_com_boardgamegeek_ui_TopGamesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ThreadActivity dummyMainMethod_com_boardgamegeek_ui_ThreadActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DesignersActivity dummyMainMethod_com_boardgamegeek_ui_DesignersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysSummaryActivity dummyMainMethod_com_boardgamegeek_ui_PlaysSummaryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>[]--><com.boardgamegeek.provider.BaseProvider: int delete(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String,java.lang.String[])>[]--><com.boardgamegeek.provider.GamesIdPollsNameProvider: com.boardgamegeek.util.SelectionBuilder buildSimpleSelection(android.net.Uri)>[]--><com.boardgamegeek.provider.BggContract$Games: java.lang.String getPollName(android.net.Uri)>[]--><com.boardgamegeek.provider.BggContract$Games: java.lang.String getPathValue(android.net.Uri,java.lang.String)>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_PlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.MechanicsActivity: com.boardgamegeek.ui.viewmodel.MechanicsViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumActivity dummyMainMethod_com_boardgamegeek_ui_ForumActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GeekListActivity: com.boardgamegeek.ui.viewmodel.GeekListViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
5938 Packageshead roads:
Roads number exceed, exit!5938
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 458 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><android.content.pm.ShortcutManager: boolean updateShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 459 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)> is checking!!!
The life time of api is [23,31]
20call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
19 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(java.lang.String,int)>
One road protect good!
crashApis:152
crashApisInMain:24
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 460 Potential Issue API: SDKCheck of <android.view.textclassifier.TextClassificationManager: android.view.textclassifier.TextClassifier getTextClassifier()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 461 Potential Issue API: SDKCheck of <android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)>[[-$i0 < 24]]--><android.widget.TextView: android.content.res.ColorStateList getCompoundDrawableTintList()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 462 Potential Issue API: SDKCheck of <android.animation.StateListAnimator: void addState(int[],android.animation.Animator)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 > 24], [i0 != 21]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22]][[i0 > 24]][[i0 != 21]]
-i0 < 22
i0 > 24
i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onElevationsChanged(float,float,float)>[[-i0 < 22], [i0 > 24], [i0 != 21]]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]
i2 < 21
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)>[[-$i0 < 21]]--><com.google.android.material.appbar.ViewUtilsLollipop: void setDefaultAppBarLayoutStateListAnimator(android.view.View,float)>[]--><android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 463 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()>[]--><android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>
#1.the call statck between class <androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()> to <android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>has compatibility isssues！
-----------------------------------------
crashApis:153
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 464 Potential Issue API: SDKCheck of <android.app.Dialog: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.DialogCompat: android.view.View requireViewById(android.app.Dialog,int)>[[-i1 < 28]]--><android.app.Dialog: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 465 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.app.AlarmManagerCompat: void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent)>[[-$i1 < 21]]--><android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 466 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setSuppressNotification(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:154
crashApisInMain:25
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 467 Potential Issue API: SDKCheck of <android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])> is checking!!!
The life time of api is [21,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 468 Potential Issue API: SDKCheck of <android.app.Notification.MediaStyle: void <init>()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.MediaStyle: void <init>()>
One road protect good!
-$i0 < 21
Good road: <androidx.media.app.NotificationCompat$MediaStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 21]]--><android.app.Notification.MediaStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 469 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomHeadsUpContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 470 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(javax.crypto.Mac)>has compatibility isssues！
-----------------------------------------
crashApis:155
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 471 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo build()> is checking!!!
The life time of api is [21,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 472 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>[]--><android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)> to <android.view.inputmethod.InputContentInfo: void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:156
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 473 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
4983call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.RequestStoragePermissionActivity dummyMainMethod_leakcanary_internal_RequestStoragePermissionActivity(android.content.Intent)>[]--><leakcanary.internal.RequestStoragePermissionActivity: void onCreate(android.os.Bundle)>[]--><leakcanary.internal.RequestStoragePermissionActivity: boolean hasStoragePermission()>[[]]--><android.content.Context: int checkSelfPermission(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.Context: int checkSelfPermission(java.lang.String)>has compatibility isssues！
-----------------------------------------
4982 Packageshead roads:
Roads number exceed, exit!4982
crashApis:157
crashApisInMain:26
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 474 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isFocused()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 475 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: int getDesiredHeight()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: int getDesiredHeight()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: int getDesiredHeight()>has compatibility isssues！
-----------------------------------------
crashApis:158
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 476 Potential Issue API: SDKCheck of <android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewConfigurationCompat: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context)>[[-$i0 < 26]]--><android.view.ViewConfiguration: float getScaledHorizontalScrollFactor()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 477 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setSystemGestureInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:159
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 478 Potential Issue API: SDKCheck of <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$z0 == 0
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)>[[-$z0 == 0]]--><android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
#1.the call statck between class <androidx.core.text.util.LinkifyCompat: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)> to <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>has compatibility isssues！
-----------------------------------------
crashApis:160
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 479 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 480 Potential Issue API: SDKCheck of <android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText.Params)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try]][[-i0 < 29]]
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[try], [-i0 < 29]]--><android.text.PrecomputedText: android.text.PrecomputedText create(java.lang.CharSequence,android.text.PrecomputedText.Params)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 481 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: void <init>(android.app.Person)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><android.app.Notification.MessagingStyle: void <init>(android.app.Person)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 482 Potential Issue API: SDKCheck of <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)> is checking!!!
The life time of api is [26,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named)>[]--><android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named)> to <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)>[]--><android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>
#2.the call statck between class <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)> to <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace$Named)>[]--><android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>
#3.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace$Named)> to <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace$Named)>[]--><android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>
#4.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace$Named)> to <android.graphics.ColorSpace: android.graphics.ColorSpace get(android.graphics.ColorSpace.Named)>has compatibility isssues！
-----------------------------------------
crashApis:161
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 483 Potential Issue API: SDKCheck of <android.app.Person.Builder: void <init>()> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 484 Potential Issue API: SDKCheck of <android.app.job.JobWorkItem: void <init>(android.content.Intent)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)>[]--><android.app.job.JobWorkItem: void <init>(android.content.Intent)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobWorkEnqueuer: void enqueueWork(android.content.Intent)> to <android.app.job.JobWorkItem: void <init>(android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:162
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 485 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int)>[[-$i1 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 486 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:163
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 487 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setLongLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 488 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getDataDir()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.content.ContextCompat: java.io.File getDataDir(android.content.Context)>[[-i0 < 24]]--><android.content.Context: java.io.File getDataDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 489 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: void <init>(java.security.Signature)>has compatibility isssues！
-----------------------------------------
crashApis:164
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 490 Potential Issue API: SDKCheck of <android.util.Range: java.lang.Comparable getUpper()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)>[]--><androidx.core.util.RangeKt$toClosedRange$1: java.lang.Comparable getEndInclusive()>[]--><android.util.Range: java.lang.Comparable getUpper()>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)> to <android.util.Range: java.lang.Comparable getUpper()>has compatibility isssues！
-----------------------------------------
crashApis:165
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 491 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)>[[-i0 < 21]]--><android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 492 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getSortKey()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 20
Good road: <androidx.core.app.NotificationCompat: java.lang.String getSortKey(android.app.Notification)>[[-$i0 < 20]]--><android.app.Notification: java.lang.String getSortKey()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 493 Potential Issue API: SDKCheck of <android.view.DisplayCutout: java.util.List getBoundingRects()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: java.util.List getBoundingRects()>[[-$i0 < 28]]--><android.view.DisplayCutout: java.util.List getBoundingRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 494 Potential Issue API: SDKCheck of <android.app.Notification: boolean getAllowSystemGeneratedContextualActions()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat: boolean getAllowSystemGeneratedContextualActions(android.app.Notification)>[[-$i0 < 29]]--><android.app.Notification: boolean getAllowSystemGeneratedContextualActions()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 495 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setDisabledMessage(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 496 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getStableInsetRight()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()>[]--><android.view.WindowInsets: int getStableInsetRight()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()> to <android.view.WindowInsets: int getStableInsetRight()>has compatibility isssues！
-----------------------------------------
crashApis:166
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 497 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><androidx.viewpager.widget.ViewPager$4: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[]--><androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)>[[-i0 < 21]]--><android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 498 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setWeight(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 499 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout build()> is checking!!!
The life time of api is [23,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
37 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23]][[i0 < 29]][[try]]
-i0 < 23
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout build()>
One road protect good!
containsStatic:true
containsTry:true
38call by main package
-----------------------------------------
#################################################
N 500 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getDrawingOrder()>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: int getDrawingOrder()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 501 Potential Issue API: SDKCheck of <android.app.Notification: android.app.Notification.BubbleMetadata getBubbleMetadata()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification)>[[-$i0 < 29]]--><android.app.Notification: android.app.Notification.BubbleMetadata getBubbleMetadata()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 502 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region)>[[-i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.view.accessibility.AccessibilityNodeInfo getTargetForRegion(android.graphics.Region)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 503 Potential Issue API: SDKCheck of <android.graphics.Color: float green(long)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float getGreen(long)>[]--><android.graphics.Color: float green(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getGreen(long)> to <android.graphics.Color: float green(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component2(long)>[]--><android.graphics.Color: float green(long)>
#2.the call statck between class <androidx.core.graphics.ColorKt: float component2(long)> to <android.graphics.Color: float green(long)>has compatibility isssues！
-----------------------------------------
crashApis:167
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 504 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Cipher getCipher()>has compatibility isssues！
-----------------------------------------
crashApis:168
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 505 Potential Issue API: SDKCheck of <android.os.LocaleList: int hashCode()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: int hashCode()>[]--><android.os.LocaleList: int hashCode()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: int hashCode()> to <android.os.LocaleList: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:169
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 506 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int)>[[-$i1 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeWithDefaults(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 507 Potential Issue API: SDKCheck of <android.view.Window.Callback: void onPointerCaptureChanged(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 508 Potential Issue API: SDKCheck of <android.app.NotificationChannelGroup: java.lang.String getId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28]][[-$i0 < 26]]
$i0 < 28
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[$i0 < 28], [-$i0 < 26]]--><android.app.NotificationChannelGroup: java.lang.String getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 509 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: java.lang.CharSequence getShortLabel()>has compatibility isssues！
-----------------------------------------
crashApis:170
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 510 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat load(android.content.res.Resources,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon load(android.content.res.Resources,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 511 Potential Issue API: SDKCheck of <android.os.Trace: void setCounter(java.lang.String,long)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 29
Good road: <androidx.core.os.TraceCompat: void setCounter(java.lang.String,int)>[[-i1 < 29]]--><android.os.Trace: void setCounter(java.lang.String,long)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 512 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getStableInsetTop()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()>[]--><android.view.WindowInsets: int getStableInsetTop()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()> to <android.view.WindowInsets: int getStableInsetTop()>has compatibility isssues！
-----------------------------------------
crashApis:171
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 513 Potential Issue API: SDKCheck of <android.view.View: void setZ(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void setZ(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setZ(float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 514 Potential Issue API: SDKCheck of <android.graphics.Color: float getComponent(int)> is checking!!!
The life time of api is [26,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component4(android.graphics.Color)>[]--><android.graphics.Color: float getComponent(int)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float component4(android.graphics.Color)> to <android.graphics.Color: float getComponent(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component2(android.graphics.Color)>[]--><android.graphics.Color: float getComponent(int)>
#2.the call statck between class <androidx.core.graphics.ColorKt: float component2(android.graphics.Color)> to <android.graphics.Color: float getComponent(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component3(android.graphics.Color)>[]--><android.graphics.Color: float getComponent(int)>
#3.the call statck between class <androidx.core.graphics.ColorKt: float component3(android.graphics.Color)> to <android.graphics.Color: float getComponent(int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component1(android.graphics.Color)>[]--><android.graphics.Color: float getComponent(int)>
#4.the call statck between class <androidx.core.graphics.ColorKt: float component1(android.graphics.Color)> to <android.graphics.Color: float getComponent(int)>has compatibility isssues！
-----------------------------------------
crashApis:172
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 515 Potential Issue API: SDKCheck of <android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable)>[]--><android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable)> to <android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)>[]--><android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>
#2.the call statck between class <androidx.core.util.RangeKt: android.util.Range toRange(kotlin.ranges.ClosedRange)> to <android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>has compatibility isssues！
-----------------------------------------
crashApis:173
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 516 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
#1.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>has compatibility isssues！
-----------------------------------------
crashApis:174
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 517 Potential Issue API: SDKCheck of <android.os.Message: boolean isAsynchronous()> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]
###Multi invoking in one method, need manual check!!!<androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try]][[-i0 < 16]]
try
Good road with try: <androidx.core.os.MessageCompat: boolean isAsynchronous(android.os.Message)>[[try], [-i0 < 16]]--><android.os.Message: boolean isAsynchronous()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 518 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setWindowLayoutType(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)>[[-$i1 < 23]]--><android.widget.PopupWindow: void setWindowLayoutType(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 519 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
5014call roads:
1 Mainhead roads:
5013 Packageshead roads:
Roads number exceed, exit!5013
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 520 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setIcon(android.graphics.drawable.Icon)>has compatibility isssues！
-----------------------------------------
crashApis:175
crashApisInMain:27
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 521 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: int getChildCount()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getChildCount()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 522 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: int getMaxShortcutCountPerActivity()> is checking!!!
The life time of api is [25,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 523 Potential Issue API: SDKCheck of <android.text.PrecomputedText: int getParagraphStart(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.text.PrecomputedTextCompat: int getParagraphStart(int)>[[-$i1 < 29]]--><android.text.PrecomputedText: int getParagraphStart(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 524 Potential Issue API: SDKCheck of <android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.graphics.drawable.DrawableWrapper: void setDrawable(android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 525 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetTop()> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()>[]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()> to <android.view.WindowInsets: int getSystemWindowInsetTop()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>[]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
#3.the call statck between class <androidx.drawerlayout.widget.DrawerLayout$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)> to <android.view.WindowInsets: int getSystemWindowInsetTop()>has compatibility isssues！
-----------------------------------------
-i0 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onDraw(android.graphics.Canvas)>[[-i0 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetTop()>
One road protect good!
crashApis:176
containsStatic:true
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 526 Potential Issue API: SDKCheck of <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i1 < 24
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
-$i1 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.PointerIconCompat: androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int)>[[-$i1 < 24]]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
#3.the call statck between class <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)> to <android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>has compatibility isssues！
-----------------------------------------
crashApis:177
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 527 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24]][[i0 < 23]]
i0 < 24
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>has compatibility isssues！
-----------------------------------------
crashApis:178
crashApisInMain:28
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 528 Potential Issue API: SDKCheck of <android.util.Range: android.util.Range intersect(android.util.Range)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.RangeKt: android.util.Range and(android.util.Range,android.util.Range)>[]--><android.util.Range: android.util.Range intersect(android.util.Range)>
#1.the call statck between class <androidx.core.util.RangeKt: android.util.Range and(android.util.Range,android.util.Range)> to <android.util.Range: android.util.Range intersect(android.util.Range)>has compatibility isssues！
-----------------------------------------
crashApis:179
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 529 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeTextType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeTextType(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeTextType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 530 Potential Issue API: SDKCheck of <android.view.View: boolean isAccessibilityHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)>[]--><android.view.View: boolean isAccessibilityHeading()>
#1.the call statck between class <androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)> to <android.view.View: boolean isAccessibilityHeading()>has compatibility isssues！
-----------------------------------------
crashApis:180
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 531 Potential Issue API: SDKCheck of <android.graphics.Outline: void setConvexPath(android.graphics.Path)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try]][[-i0 < 29]]
try
Good road with try: <com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try], [-i0 < 29]]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
#2.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setConvexPath(android.graphics.Path)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try]][[-i0 < 29]]
try
Good road with try: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[[try], [-i0 < 29]]--><android.graphics.Outline: void setConvexPath(android.graphics.Path)>
One road protect good!
crashApis:181
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 532 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)> is checking!!!
The life time of api is [26,31]
23call roads:
1 Mainhead roads:
-i0 < 23
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
22 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]
-i0 < 24
-i0 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i1 < 28
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i1 < 26
Good road: <com.boardgamegeek.ui.CollectionFragment$CollectionAdapter$CollectionItemViewHolder$bindView$1: void onClick(android.view.View)>[]--><com.boardgamegeek.ui.CollectionFragment: void createShortcut(int,java.lang.String,java.lang.String)>[[-i1 < 26]]--><com.boardgamegeek.ui.CollectionFragment: android.content.Intent createShortcutForOreo(int,java.lang.String,java.lang.String,android.content.Intent)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 23
-i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-$i0 < 26
Good road: <com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.util.shortcut.ShortcutTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i0 < 26]]--><com.boardgamegeek.util.shortcut.ShortcutTask: void createShortcutForOreo()>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
-i0 < 25
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[[-i0 < 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>
#22.the call statck between class <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)>has compatibility isssues！
-----------------------------------------
crashApis:182
containsStatic:false
containsTry:true
23call by main package
-----------------------------------------
#################################################
N 533 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 534 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()>[]--><android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()> to <android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>has compatibility isssues！
-----------------------------------------
crashApis:183
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 535 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <com.mikepenz.iconics.IconicsColorRes: android.content.res.ColorStateList extractList$iconics_core(android.content.Context)>[]--><androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 536 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: void <init>()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: void <init>()>
One road protect good!
-$i1 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>[[-$i1 < 21]]--><android.media.AudioAttributes.Builder: void <init>()>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 537 Potential Issue API: SDKCheck of <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)> to <android.view.MenuItem: android.graphics.PorterDuff.Mode getIconTintMode()>has compatibility isssues！
-----------------------------------------
crashApis:184
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 538 Potential Issue API: SDKCheck of <android.view.View: boolean isImportantForAutofill()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean isImportantForAutofill(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean isImportantForAutofill()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 539 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#7.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#8.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:185
crashApisInMain:29
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 540 Potential Issue API: SDKCheck of <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.shape.MaterialShapeDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#1.the call statck between class <com.google.android.material.imageview.ShapeableImageView$OutlineProvider: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#2.the call statck between class <androidx.core.graphics.drawable.RoundedBitmapDrawable21: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.cardview.widget.RoundRectDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#3.the call statck between class <androidx.cardview.widget.RoundRectDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#4.the call statck between class <com.google.android.material.floatingactionbutton.BorderDrawable: void getOutline(android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
#5.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>has compatibility isssues！
-----------------------------------------
crashApis:186
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 541 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomBigContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 542 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.lang.CharSequence[] getChoices()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.app.RemoteInput: java.lang.CharSequence[] getChoices()>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.app.RemoteInput: java.lang.CharSequence[] getChoices()>has compatibility isssues！
-----------------------------------------
i1 < 29
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i1 < 29]]--><android.app.RemoteInput: java.lang.CharSequence[] getChoices()>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.RemoteInput: java.lang.CharSequence[] getChoices()>has compatibility isssues！
-----------------------------------------
crashApis:187
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 543 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: void requestPermission()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()>[]--><android.view.inputmethod.InputContentInfo: void requestPermission()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: void requestPermission()> to <android.view.inputmethod.InputContentInfo: void requestPermission()>has compatibility isssues！
-----------------------------------------
crashApis:188
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 544 Potential Issue API: SDKCheck of <android.view.MenuItem: int getAlphabeticModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getAlphabeticModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getAlphabeticModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getAlphabeticModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:189
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 545 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getStableInsetLeft()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()>[]--><android.view.WindowInsets: int getStableInsetLeft()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()> to <android.view.WindowInsets: int getStableInsetLeft()>has compatibility isssues！
-----------------------------------------
crashApis:190
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 546 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextClassifier(android.view.textclassifier.TextClassifier)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 547 Potential Issue API: SDKCheck of <android.app.RemoteAction: void setEnabled(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><android.app.RemoteAction: void setEnabled(boolean)>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.app.RemoteAction: void setEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:191
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 548 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput build()> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#7.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#8.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput build()>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput build()>has compatibility isssues！
-----------------------------------------
crashApis:192
crashApisInMain:30
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 549 Potential Issue API: SDKCheck of <android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlCompat: android.text.Spanned fromHtml(java.lang.String,int)>[[-$i1 < 24]]--><android.text.Html: android.text.Spanned fromHtml(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 550 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]
-i1 < 20
i0 < 26
-i0 < 26
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>[[-i0 < 26]]--><android.app.RemoteInput: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 551 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
$i0 < 21
-i0 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
$i0 < 21
-i0 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
$i0 < 21
-i0 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><com.boardgamegeek.ui.widget.NestedScrollWebView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><com.boardgamegeek.ui.widget.NestedScrollWebView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
$i0 < 21
-i0 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[$i0 < 21]]--><com.boardgamegeek.ui.widget.NestedScrollWebView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: boolean endFakeDrag()>[]--><androidx.viewpager2.widget.FakeDrag: boolean endFakeDrag()>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-$i0 >= 18
-i0 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21]][[try]]
-i0 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)>[]--><androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)>[[-i0 < 21], [try]]--><android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 552 Potential Issue API: SDKCheck of <android.view.Window: android.transition.Transition getSharedElementEnterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void setUpEnterTransform(android.view.Window)>[]--><android.view.Window: android.transition.Transition getSharedElementEnterTransition()>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)> to <android.view.Window: android.transition.Transition getSharedElementEnterTransition()>has compatibility isssues！
-----------------------------------------
crashApis:193
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 553 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: java.security.Signature getSignature()>has compatibility isssues！
-----------------------------------------
crashApis:194
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 554 Potential Issue API: SDKCheck of <android.app.RemoteAction: boolean isEnabled()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><android.app.RemoteAction: boolean isEnabled()>
#1.the call statck between class <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)> to <android.app.RemoteAction: boolean isEnabled()>has compatibility isssues！
-----------------------------------------
crashApis:195
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 555 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int getContentType()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)>[]--><androidx.media.AudioAttributesCompat: int getContentType()>[]--><androidx.media.AudioAttributesImplApi21: int getContentType()>[]--><android.media.AudioAttributes: int getContentType()>
#1.the call statck between class <androidx.media.AudioAttributesCompat$Builder: void <init>(androidx.media.AudioAttributesCompat)> to <android.media.AudioAttributes: int getContentType()>has compatibility isssues！
-----------------------------------------
crashApis:196
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 556 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)>[]--><android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets.Builder: void <init>(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
crashApis:197
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 557 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace.Model getModel()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: android.graphics.ColorSpace.Model getModel()>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: android.graphics.ColorSpace.Model getModel()>has compatibility isssues！
-----------------------------------------
crashApis:198
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 558 Potential Issue API: SDKCheck of <android.view.View: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: void setTooltipText(android.view.View,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.View: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 559 Potential Issue API: SDKCheck of <android.app.job.JobScheduler: void cancel(int)> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 560 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[[try]]--><android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>
One road protect good!
-$i0 < 21
Good road: <androidx.documentfile.provider.DocumentFile: androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri)>[[-$i0 < 21]]--><android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 561 Potential Issue API: SDKCheck of <android.content.Context: android.graphics.drawable.Drawable getDrawable(int)> is checking!!!
The life time of api is [21,31]
34call roads:
1 Mainhead roads:
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysSummaryActivity dummyMainMethod_com_boardgamegeek_ui_PlaysSummaryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoriesActivity dummyMainMethod_com_boardgamegeek_ui_CategoriesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CategoriesActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyActivity dummyMainMethod_com_boardgamegeek_ui_BuddyActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HomeActivity dummyMainMethod_com_boardgamegeek_ui_HomeActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.HomeActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyPlaysActivity dummyMainMethod_com_boardgamegeek_ui_BuddyPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyPlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ThreadActivity dummyMainMethod_com_boardgamegeek_ui_ThreadActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ThreadActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListsActivity dummyMainMethod_com_boardgamegeek_ui_GeekListsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_PlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArtistsActivity dummyMainMethod_com_boardgamegeek_ui_ArtistsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ArtistsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationActivity dummyMainMethod_com_boardgamegeek_ui_LocationActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LocationActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlaysActivity dummyMainMethod_com_boardgamegeek_ui_GamePlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PublishersActivity dummyMainMethod_com_boardgamegeek_ui_PublishersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PublishersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionDetailsActivity dummyMainMethod_com_boardgamegeek_ui_CollectionDetailsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.TopGamesActivity dummyMainMethod_com_boardgamegeek_ui_TopGamesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumActivity dummyMainMethod_com_boardgamegeek_ui_ForumActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ForumActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumsActivity dummyMainMethod_com_boardgamegeek_ui_ForumsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.SearchResultsActivity dummyMainMethod_com_boardgamegeek_ui_SearchResultsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.SearchResultsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CommentsActivity dummyMainMethod_com_boardgamegeek_ui_CommentsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CommentsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerPlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlayerPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerPlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArticleActivity dummyMainMethod_com_boardgamegeek_ui_ArticleActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ArticleActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionActivity dummyMainMethod_com_boardgamegeek_ui_CollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HotnessActivity dummyMainMethod_com_boardgamegeek_ui_HotnessActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayActivity dummyMainMethod_com_boardgamegeek_ui_PlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DataActivity dummyMainMethod_com_boardgamegeek_ui_DataActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DesignersActivity dummyMainMethod_com_boardgamegeek_ui_DesignersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DesignersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationsActivity dummyMainMethod_com_boardgamegeek_ui_LocationsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LocationsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoryActivity dummyMainMethod_com_boardgamegeek_ui_CategoryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CategoryActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayersActivity dummyMainMethod_com_boardgamegeek_ui_PlayersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddiesActivity dummyMainMethod_com_boardgamegeek_ui_BuddiesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddiesActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
33 Packageshead roads:
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setSeekPinByValue(float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.SliderFilterDialog: void configRange(android.view.View,com.boardgamegeek.ui.dialog.SliderFilterDialog$RangeType)>[]--><com.boardgamegeek.ui.dialog.SliderFilterDialog: void updateRange(com.appyvet.materialrangebar.RangeBar,int,int)>[]--><com.appyvet.materialrangebar.RangeBar: void setRangePinsByIndices(int,int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.SliderFilterDialog: void createDialog(android.content.Context,com.boardgamegeek.ui.dialog.CollectionFilterDialog$OnFilterChangedListener,com.boardgamegeek.filterer.CollectionFilterer)>[]--><com.appyvet.materialrangebar.RangeBar: void setTickEnd(float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.SliderFilterDialog: void createDialog(android.content.Context,com.boardgamegeek.ui.dialog.CollectionFilterDialog$OnFilterChangedListener,com.boardgamegeek.filterer.CollectionFilterer)>[]--><com.appyvet.materialrangebar.RangeBar: void setTickStart(float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.SliderFilterDialog: void createDialog(android.content.Context,com.boardgamegeek.ui.dialog.CollectionFilterDialog$OnFilterChangedListener,com.boardgamegeek.filterer.CollectionFilterer)>[]--><com.appyvet.materialrangebar.RangeBar: void setRangePinsByValue(float,float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setTickInterval(float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceLeft(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void updateMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void onSizeChanged(int,int,int,int)>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbBoundarySize(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setPinTextColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbSize(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <butterknife.internal.Utils: android.graphics.drawable.Drawable getTintedDrawable(android.content.Context,int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.SliderFilterDialog: void access$updateRange(com.boardgamegeek.ui.dialog.SliderFilterDialog,com.appyvet.materialrangebar.RangeBar,int,int)>[]--><com.boardgamegeek.ui.dialog.SliderFilterDialog: void updateRange(com.appyvet.materialrangebar.RangeBar,int,int)>[]--><com.appyvet.materialrangebar.RangeBar: void setRangePinsByIndices(int,int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void setItemBackgroundResource(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void setItemBackgroundRes(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setItemBackground(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.appyvet.materialrangebar.RangeBar: void setRangePinsByIndices(int,int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.slidingpanelayout.widget.SlidingPaneLayout: void setShadowResourceRight(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setPinRadius(float)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void setRightThumbColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void setLeftThumbColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.navigation.NavigationView: void setItemBackgroundResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setPinColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setEnabled(boolean)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.legacy.app.ActionBarDrawerToggle: void setHomeAsUpIndicator(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.legacy.app.ActionBarDrawerToggle: void onConfigurationChanged(android.content.res.Configuration)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26]][[-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]
i0 < 26
-$yysi0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[i0 < 26], [-$yysi0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setContentScrimResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.appyvet.materialrangebar.RangeBar: void setThumbBoundaryColor(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void setStatusBarBackground(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.legacy.app.ActionBarDrawerToggle: void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int)>[]--><androidx.legacy.app.ActionBarDrawerToggle: void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.mikepenz.aboutlibraries.util.UIUtilsKt: void setBackground(android.view.View,int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
$i0 < 26
try
Good road with try: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.Intent addToIntent(android.content.Intent)>[]--><androidx.core.graphics.drawable.IconCompat: void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context)>[[try]]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.boardgamegeek.ui.dialog.RecommendedPlayerCountFilterDialog: void createDialog(android.content.Context,com.boardgamegeek.ui.dialog.CollectionFilterDialog$OnFilterChangedListener,com.boardgamegeek.filterer.CollectionFilterer)>[]--><com.appyvet.materialrangebar.RangeBar: void setSeekPinByIndex(int)>[]--><com.appyvet.materialrangebar.RangeBar: void createPins()>[]--><com.appyvet.materialrangebar.PinView: void init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)>[]--><androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>[[-$i1 < 21]]--><android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
One road protect good!
containsStatic:true
containsTry:true
34call by main package
-----------------------------------------
#################################################
N 562 Potential Issue API: SDKCheck of <android.app.RemoteInput: java.lang.CharSequence getLabel()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.app.RemoteInput: java.lang.CharSequence getLabel()>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.app.RemoteInput: java.lang.CharSequence getLabel()>has compatibility isssues！
-----------------------------------------
i1 < 29
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i1 < 29]]--><android.app.RemoteInput: java.lang.CharSequence getLabel()>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.RemoteInput: java.lang.CharSequence getLabel()>has compatibility isssues！
-----------------------------------------
crashApis:199
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 563 Potential Issue API: SDKCheck of <android.view.View: android.graphics.drawable.Drawable getForeground()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <com.google.android.material.card.MaterialCardView: void setClickable(boolean)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateClickable()>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateInsetForeground(android.graphics.drawable.Drawable)>[[-$i0 < 23]]--><android.view.View: android.graphics.drawable.Drawable getForeground()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 564 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[]--><android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>
#1.the call statck between class <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)> to <android.graphics.drawable.Drawable: boolean onLayoutDirectionChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:200
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 565 Potential Issue API: SDKCheck of <android.text.TextUtils: java.lang.CharSequence listEllipsize(android.content.Context,java.util.List,java.lang.String,android.text.TextPaint,float,int)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <com.boardgamegeek.ui.GameCreditsFragment: void access$onListQueryComplete(com.boardgamegeek.ui.GameCreditsFragment,java.util.List,com.boardgamegeek.ui.widget.GameDetailRow)>[]--><com.boardgamegeek.ui.GameCreditsFragment: void onListQueryComplete(java.util.List,com.boardgamegeek.ui.widget.GameDetailRow)>[]--><com.boardgamegeek.ui.widget.GameDetailRow: void bindData(int,java.lang.String,java.util.List)>[]--><com.boardgamegeek.ui.widget.GameDetailRow: java.lang.CharSequence generateName(java.util.List)>[[-$i0 < 26]]--><android.text.TextUtils: java.lang.CharSequence listEllipsize(android.content.Context,java.util.List,java.lang.String,android.text.TextPaint,float,int)>
One road protect good!
-$i0 < 26
Good road: <com.boardgamegeek.ui.GameFragment: void access$onListQueryComplete(com.boardgamegeek.ui.GameFragment,java.util.List,com.boardgamegeek.ui.widget.GameDetailRow)>[]--><com.boardgamegeek.ui.GameFragment: void onListQueryComplete(java.util.List,com.boardgamegeek.ui.widget.GameDetailRow)>[]--><com.boardgamegeek.ui.widget.GameDetailRow: void bindData(int,java.lang.String,java.util.List)>[]--><com.boardgamegeek.ui.widget.GameDetailRow: java.lang.CharSequence generateName(java.util.List)>[[-$i0 < 26]]--><android.text.TextUtils: java.lang.CharSequence listEllipsize(android.content.Context,java.util.List,java.lang.String,android.text.TextPaint,float,int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 566 Potential Issue API: SDKCheck of <android.util.Size: int getWidth()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)>[]--><android.util.Size: int getWidth()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)> to <android.util.Size: int getWidth()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.SizeKt: int component1(android.util.Size)>[]--><android.util.Size: int getWidth()>
#2.the call statck between class <androidx.core.util.SizeKt: int component1(android.util.Size)> to <android.util.Size: int getWidth()>has compatibility isssues！
-----------------------------------------
crashApis:201
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 567 Potential Issue API: SDKCheck of <android.graphics.Outline: void setRoundRect(int,int,int,int,float)> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.utils.widget.ImageFilterView$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#1.the call statck between class <androidx.constraintlayout.utils.widget.ImageFilterView$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.utils.widget.ImageFilterView$1: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#2.the call statck between class <androidx.constraintlayout.utils.widget.ImageFilterView$1: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.utils.widget.ImageFilterButton$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#3.the call statck between class <androidx.constraintlayout.utils.widget.ImageFilterButton$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.utils.widget.ImageFilterButton$1: void getOutline(android.view.View,android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#4.the call statck between class <androidx.constraintlayout.utils.widget.ImageFilterButton$1: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)>[]--><com.google.android.material.chip.ChipDrawable: void getOutline(android.graphics.Outline)>[]--><android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
#5.the call statck between class <com.google.android.material.chip.Chip$2: void getOutline(android.view.View,android.graphics.Outline)> to <android.graphics.Outline: void setRoundRect(int,int,int,int,float)>has compatibility isssues！
-----------------------------------------
crashApis:202
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 568 Potential Issue API: SDKCheck of <android.os.LocaleList: void <init>(java.util.Locale[])> is checking!!!
The life time of api is [24,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.ConfigurationCompat: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i1 < 21
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String)>[[$i1 < 21]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: void <clinit>()>[]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
$i0 < 24
-$i0 < 24
Good road: <androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat getAdjustedDefault()>[[$i0 < 24]]--><androidx.core.os.LocaleListCompat: androidx.core.os.LocaleListCompat create(java.util.Locale[])>[[-$i0 < 24]]--><android.os.LocaleList: void <init>(java.util.Locale[])>
One road protect good!
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 569 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: int getLayoutDirection()> is checking!!!
The life time of api is [23,31]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.Rect access$500(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]
$yysi0 < 21
-z0 == 0
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onBitmapFailed(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-$i0 < 17
-i0 < 23
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)>[]--><androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()>[[-$i0 < 17]]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void getChipTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void getFocusedRect(android.graphics.Rect)>[]--><com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawText(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateTextBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawDebug(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCloseIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawCheckedIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void draw(android.graphics.Canvas)>[]--><com.google.android.material.chip.ChipDrawable: void drawChipIcon(android.graphics.Canvas,android.graphics.Rect)>[]--><com.google.android.material.chip.ChipDrawable: void calculateChipIconBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: android.graphics.Paint$Align calculateTextOriginAndAlignment(android.graphics.Rect,android.graphics.PointF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]
$yysi0 < 21
-z0 == 0
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: boolean onHoverEvent(android.view.MotionEvent)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onPrepareLoad(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.graphics.RectF access$200(com.google.android.material.chip.Chip)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
-i0 < 23
Good road: <com.google.android.material.chip.Chip: android.view.PointerIcon onResolvePointerIcon(android.view.MotionEvent,int)>[]--><com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()>[]--><com.google.android.material.chip.ChipDrawable: void getCloseIconTouchBounds(android.graphics.RectF)>[]--><com.google.android.material.chip.ChipDrawable: void calculateCloseIconTouchBounds(android.graphics.Rect,android.graphics.RectF)>[]--><androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)>[[-i0 < 23]]--><android.graphics.drawable.Drawable: int getLayoutDirection()>
One road protect good!
containsStatic:true
containsTry:false
33call by main package
-----------------------------------------
#################################################
N 570 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 24
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect)>[[$i0 >= 24]]--><android.app.ActivityOptions: android.app.ActivityOptions setLaunchBounds(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 571 Potential Issue API: SDKCheck of <android.content.Context: java.util.concurrent.Executor getMainExecutor()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.content.ContextCompat: java.util.concurrent.Executor getMainExecutor(android.content.Context)>[[-$i0 < 28]]--><android.content.Context: java.util.concurrent.Executor getMainExecutor()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 572 Potential Issue API: SDKCheck of <android.graphics.Canvas: void enableZ()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21]][[-i0 < 29]]
i0 >= 21
-i0 < 29
Good road: <androidx.transition.GhostViewPort: void onDraw(android.graphics.Canvas)>[]--><androidx.transition.CanvasUtils: void enableZ(android.graphics.Canvas,boolean)>[[i0 >= 21], [-i0 < 29]]--><android.graphics.Canvas: void enableZ()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 573 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getHintText()>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getHintText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 574 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)>[]--><android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)> to <android.view.WindowInsets: android.view.WindowInsets inset(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:203
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 575 Potential Issue API: SDKCheck of <android.os.BaseBundle: long[] getLongArray(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.mikepenz.fastadapter.FastAdapter: com.mikepenz.fastadapter.FastAdapter withSavedInstanceState$default(com.mikepenz.fastadapter.FastAdapter,android.os.Bundle,java.lang.String,int,java.lang.Object)>[]--><com.mikepenz.fastadapter.FastAdapter: com.mikepenz.fastadapter.FastAdapter withSavedInstanceState(android.os.Bundle,java.lang.String)>[]--><com.mikepenz.fastadapter.select.SelectExtension: void withSavedInstanceState(android.os.Bundle,java.lang.String)>[]--><android.os.BaseBundle: long[] getLongArray(java.lang.String)>
#1.the call statck between class <com.mikepenz.fastadapter.FastAdapter: com.mikepenz.fastadapter.FastAdapter withSavedInstanceState$default(com.mikepenz.fastadapter.FastAdapter,android.os.Bundle,java.lang.String,int,java.lang.Object)> to <android.os.BaseBundle: long[] getLongArray(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:204
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 576 Potential Issue API: SDKCheck of <android.graphics.Color: long convert(int,android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace$Named)>[]--><android.graphics.Color: long convert(int,android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace$Named)> to <android.graphics.Color: long convert(int,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace)>[]--><android.graphics.Color: long convert(int,android.graphics.ColorSpace)>
#2.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(int,android.graphics.ColorSpace)> to <android.graphics.Color: long convert(int,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:205
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 577 Potential Issue API: SDKCheck of <android.content.Context: boolean isDeviceProtectedStorage()> is checking!!!
The life time of api is [24,31]
5011call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><com.google.android.gms.measurement.internal.zzja: void run()>[[try]]--><com.google.android.gms.measurement.internal.zzio: void zze(com.google.android.gms.measurement.internal.zzio)>[]--><com.google.android.gms.measurement.internal.zzio: void zzaj()>[]--><com.google.android.gms.measurement.internal.zzeg: java.lang.Object zza(java.lang.Object)>[[try]]--><com.google.android.gms.measurement.internal.zzeb: java.lang.Object zza()>[]--><com.google.android.gms.measurement.internal.zzat: java.lang.Boolean zzc()>[]--><com.google.android.gms.internal.measurement.zzlq: boolean zze()>[]--><com.google.android.gms.internal.measurement.zzlq: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzmc: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzpp: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zznz: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzlw: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdg: java.lang.Object zza()>[]--><com.google.android.gms.internal.measurement.zzdh: com.google.android.gms.internal.measurement.zzdy zzb(android.content.Context)>[]--><com.google.android.gms.internal.measurement.zzdc: com.google.android.gms.internal.measurement.zzdy zza(android.content.Context)>[[-$yysi0 < 24]]--><android.content.Context: boolean isDeviceProtectedStorage()>
One road protect good!
5010 Packageshead roads:
Roads number exceed, exit!5010
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 578 Potential Issue API: SDKCheck of <android.os.LocaleList: int indexOf(java.util.Locale)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)>[]--><androidx.core.os.LocaleListPlatformWrapper: int indexOf(java.util.Locale)>[]--><android.os.LocaleList: int indexOf(java.util.Locale)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: int indexOf(java.util.Locale)> to <android.os.LocaleList: int indexOf(java.util.Locale)>has compatibility isssues！
-----------------------------------------
crashApis:206
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 579 Potential Issue API: SDKCheck of <android.view.Window.Callback: boolean onSearchRequested(android.view.SearchEvent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 580 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toString()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()>[]--><android.os.LocaleList: java.lang.String toString()>
#1.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: java.lang.String toString()> to <android.os.LocaleList: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
crashApis:207
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 581 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])> is checking!!!
The life time of api is [22,31]
32call roads:
0 Mainhead roads:
32 Packageshead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#1.the call statck between class <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#2.the call statck between class <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#3.the call statck between class <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#4.the call statck between class <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#5.the call statck between class <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#6.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#7.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#8.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#9.the call statck between class <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>
#10.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()> to <android.os.BaseBundle: void putBooleanArray(java.lang.String,boolean[])>has compatibility isssues！
-----------------------------------------
crashApis:208
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 582 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale get(int)>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale get(int)>[]--><android.os.LocaleList: java.util.Locale get(int)>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale get(int)> to <android.os.LocaleList: java.util.Locale get(int)>has compatibility isssues！
-----------------------------------------
crashApis:209
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 583 Potential Issue API: SDKCheck of <android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>[]--><android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)> to <android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>has compatibility isssues！
-----------------------------------------
crashApis:210
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 584 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 < 26
-$i0 < 21
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[$i1 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setError(java.lang.CharSequence)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 585 Potential Issue API: SDKCheck of <android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 586 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
10call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[[-$i0 < 26]]--><com.boardgamegeek.util.NotificationUtils: void createNotificationChannels(android.content.Context)>[]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.HeapAnalyzerService dummyMainMethod_leakcanary_internal_HeapAnalyzerService(android.content.Intent)>[]--><leakcanary.internal.ForegroundService: void onCreate()>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zab)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zaae: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
$i0 >= 26
Good road: <com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,com.google.firebase.messaging.NotificationParams)>[]--><com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getOrCreateChannel(android.content.Context,java.lang.String,android.os.Bundle)>[[$i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i0 < 26
Good road: <leakcanary.internal.HeapAnalyzerService: void onAnalysisProgress(shark.OnAnalysisProgressListener$Step)>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:true
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 587 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)> to <android.view.MenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff.Mode)>has compatibility isssues！
-----------------------------------------
crashApis:211
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 588 Potential Issue API: SDKCheck of <android.app.RemoteInput: void setResultsSource(android.content.Intent,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
###Multi invoking in one method, need manual check!!!,android.content.Intent,android.os.Bundle)>[[-i1 < 20]][[i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]
-i1 < 20
i0 < 26
-i1 < 28
Good road: <androidx.core.app.RemoteInput: void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle)>[[-i1 < 20], [i0 < 26]]--><androidx.core.app.RemoteInput: void setResultsSource(android.content.Intent,int)>[[-i1 < 28]]--><android.app.RemoteInput: void setResultsSource(android.content.Intent,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 589 Potential Issue API: SDKCheck of <android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.fonts.Font: android.graphics.fonts.FontStyle getStyle()>has compatibility isssues！
-----------------------------------------
crashApis:212
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 590 Potential Issue API: SDKCheck of <android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)>[[-$i0 < 29]]--><android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 591 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: android.text.TextPaint getTextPaint()>has compatibility isssues！
-----------------------------------------
crashApis:213
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 592 Potential Issue API: SDKCheck of <android.util.Size: void <init>(int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)>[]--><android.util.Size: void <init>(int,int)>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: android.util.Size readSize(android.util.Size,int)> to <android.util.Size: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:214
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 593 Potential Issue API: SDKCheck of <android.content.Context: java.io.File[] getExternalMediaDirs()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <leakcanary.internal.LeakCanaryFileProvider$Companion: leakcanary.internal.LeakCanaryFileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>[[-$i0 < 21]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String)>[[-$i0 < 21]]--><android.content.Context: java.io.File[] getExternalMediaDirs()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 594 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: java.lang.String getPackageName()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: java.lang.String getPackageName()> to <android.media.session.MediaSessionManager.RemoteUserInfo: java.lang.String getPackageName()>has compatibility isssues！
-----------------------------------------
crashApis:215
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 595 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 596 Potential Issue API: SDKCheck of <android.view.Display.Mode: int getPhysicalWidth()> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>[]--><android.view.Display.Mode: int getPhysicalWidth()>
#1.the call statck between class <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)> to <android.view.Display.Mode: int getPhysicalWidth()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23]][[i0 >= 28]]
-i0 < 23
i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]--><android.view.Display.Mode: int getPhysicalWidth()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>[]--><android.view.Display.Mode: int getPhysicalWidth()>
#3.the call statck between class <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)> to <android.view.Display.Mode: int getPhysicalWidth()>has compatibility isssues！
-----------------------------------------
crashApis:216
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 597 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>[[-$i0 < 28]]--><android.app.NotificationManager: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 598 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:217
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 599 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.app.AlarmManagerCompat: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)>[[-$i2 < 23]]--><android.app.AlarmManager: void setAndAllowWhileIdle(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 600 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)>[]--><android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat: androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject)> to <android.hardware.fingerprint.FingerprintManager.CryptoObject: javax.crypto.Mac getMac()>has compatibility isssues！
-----------------------------------------
crashApis:218
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 601 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetLeft()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetLeft()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetLeft()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 602 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 26
Good road: <com.google.android.material.textfield.DropdownMenuEndIconDelegate$3: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
Good road: <com.google.android.material.datepicker.MaterialCalendar$5: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
-$i1 < 26
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[-$i1 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHintText(java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setHintText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 603 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 24
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[$i0 < 24]]--><androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks()>[]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
-$i0 < 24
Good road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)>[[-$i0 < 24]]--><android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>
One road protect good!
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearAnimationCallbacks(android.graphics.drawable.Drawable)> to <android.graphics.drawable.AnimatedVectorDrawable: void clearAnimationCallbacks()>has compatibility isssues！
-----------------------------------------
crashApis:219
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 604 Potential Issue API: SDKCheck of <android.view.View: void stopNestedScroll()> is checking!!!
The life time of api is [21,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
$i0 < 21
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>[[$i0 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
$i0 < 21
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>[[$i0 < 21]]--><androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
$i0 < 21
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>[[$i0 < 21]]--><androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
$i0 < 21
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void setNestedScrollingEnabled(android.view.View,boolean)>[[$i0 < 21]]--><com.boardgamegeek.ui.widget.NestedScrollWebView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.NestedScrollWebView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.boardgamegeek.ui.widget.NestedScrollWebView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
$i1 < 29
-$i0 < 21
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i1 < 29]]--><androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.NestedScrollingChildHelper: void onStopNestedScroll(android.view.View)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View,int)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.NestedScrollView: void <init>(android.content.Context)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.core.widget.NestedScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.NestedScrollWebView: void <init>(android.content.Context)>[]--><com.boardgamegeek.ui.widget.NestedScrollWebView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void <init>(android.content.Context)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
$i1 < 29
-$i0 < 21
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[$i1 < 29]]--><androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.view.NestedScrollingChildHelper: void onDetachedFromWindow()>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.widget.NestedScrollWebView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.boardgamegeek.ui.widget.NestedScrollWebView: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)>[[-$i0 < 21]]--><android.view.View: void stopNestedScroll()>
One road protect good!
containsStatic:false
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 605 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()>[]--><android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)>
#1.the call statck between class <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile[] listFiles()> to <android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:220
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 606 Potential Issue API: SDKCheck of <android.widget.CheckedTextView: void setVisibility(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.internal.NavigationMenuItemView: void adjustAppearance()>[]--><android.widget.CheckedTextView: void setVisibility(int)>
#1.the call statck between class <com.google.android.material.internal.NavigationMenuPresenter$NavigationMenuAdapter: void onBindViewHolder(com.google.android.material.internal.NavigationMenuPresenter$ViewHolder,int)> to <android.widget.CheckedTextView: void setVisibility(int)>has compatibility isssues！
-----------------------------------------
crashApis:221
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 607 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo: int getRank()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)>[]--><android.content.pm.ShortcutInfo: int getRank()>
#1.the call statck between class <androidx.core.content.pm.ShortcutInfoCompat$Builder: void <init>(android.content.Context,android.content.pm.ShortcutInfo)> to <android.content.pm.ShortcutInfo: int getRank()>has compatibility isssues！
-----------------------------------------
crashApis:222
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 608 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 609 Potential Issue API: SDKCheck of <android.app.Service: void stopForeground(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.app.ServiceCompat: void stopForeground(android.app.Service,int)>[[-$i1 < 24]]--><android.app.Service: void stopForeground(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 610 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.net.Uri getUri()> is checking!!!
The life time of api is [28,31]
25call roads:
1 Mainhead roads:
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
24 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
-i0 < 24
-i0 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i1 < 28
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 26
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[-i1 < 23]][[i0 < 24]][[i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 28
-i1 < 23
i0 < 24
i1 < 29
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
-i0 < 25
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.net.Uri getUri(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: android.net.Uri getUri()>
One road protect good!
containsStatic:false
containsTry:true
25call by main package
-----------------------------------------
#################################################
N 611 Potential Issue API: SDKCheck of <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> is checking!!!
The life time of api is [29,31]
9call roads:
0 Mainhead roads:
9 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-i1 < 29
Good road: <com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-i1 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-i1 < 29
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COORDINATOR_LAYOUT$1: org.jetbrains.anko.design._CoordinatorLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-i1 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29]][[-$i1 < 21]]
-$i1 < 29
-$i1 < 21
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 29], [-$i1 < 21]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
-$i0 < 29
Good road: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void setOrientation(android.content.Context,android.util.AttributeSet)>[[-$i0 < 29]]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>[]--><android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>
#9.the call statck between class <androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)> to <android.view.View: void saveAttributeDataForStyleable(android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:223
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 612 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: void <init>(java.lang.String,int,int)>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: void <init>(java.lang.String,int,int)> to <android.media.session.MediaSessionManager.RemoteUserInfo: void <init>(java.lang.String,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:224
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 613 Potential Issue API: SDKCheck of <android.view.View: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.ViewCompat: android.view.View requireViewById(android.view.View,int)>[[-i1 < 28]]--><android.view.View: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 614 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getSystemWindowInsetBottom()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()>[]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()> to <android.view.WindowInsets: int getSystemWindowInsetBottom()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16]][[-$z3 == 0]][[-$i8 < 21]]
$yysi0 < 16
-$z3 == 0
-$i8 < 21
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onMeasure(int,int)>[[$yysi0 < 16], [-$z3 == 0], [-$i8 < 21]]--><android.view.WindowInsets: int getSystemWindowInsetBottom()>
One road protect good!
crashApis:225
containsStatic:true
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 615 Potential Issue API: SDKCheck of <android.app.Notification.Action: android.os.Bundle getExtras()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24], [i0 < 28], [-i1 < 23], [i1 < 29]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24]][[i0 < 28]][[-i1 < 23]][[i1 < 29]]
-i0 < 24
i0 < 28
-i1 < 23
i1 < 29
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[-i0 < 24], [i0 < 28], [-i1 < 23], [i1 < 29]]--><android.app.Notification.Action: android.os.Bundle getExtras()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 616 Potential Issue API: SDKCheck of <android.content.res.Configuration: void setLocales(android.os.LocaleList)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 617 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)>[]--><android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>
#1.the call statck between class <androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)> to <android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>has compatibility isssues！
-----------------------------------------
crashApis:226
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 618 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)> is checking!!!
The life time of api is [21,31]
4985call roads:
1 Mainhead roads:
4984 Packageshead roads:
Roads number exceed, exit!4984
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 619 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()> to <android.view.WindowInsets: android.graphics.Insets getSystemGestureInsets()>has compatibility isssues！
-----------------------------------------
crashApis:227
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 620 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetRight()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetRight()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetRight()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 621 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 622 Potential Issue API: SDKCheck of <android.view.View: void setLeftTopRightBottom(int,int,int,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.transition.ViewUtilsApi22: void setLeftTopRightBottom(android.view.View,int,int,int,int)>[[try]]--><android.view.View: void setLeftTopRightBottom(int,int,int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setLeftTopRightBottom(android.view.View,int,int,int,int)>[]--><android.view.View: void setLeftTopRightBottom(int,int,int,int)>
#2.the call statck between class <androidx.transition.ViewUtilsApi29: void setLeftTopRightBottom(android.view.View,int,int,int,int)> to <android.view.View: void setLeftTopRightBottom(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:228
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 623 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getUid()>[]--><android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28: int getUid()> to <android.media.session.MediaSessionManager.RemoteUserInfo: int getUid()>has compatibility isssues！
-----------------------------------------
crashApis:229
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 624 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: boolean isActive()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isActive()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 625 Potential Issue API: SDKCheck of <android.media.AudioAttributes: int getVolumeControlStream()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.media.AudioAttributesCompat: int getVolumeControlStream()>[]--><androidx.media.AudioAttributesImplApi21: int getVolumeControlStream()>[[-$i0 < 26]]--><android.media.AudioAttributes: int getVolumeControlStream()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 626 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 627 Potential Issue API: SDKCheck of <android.widget.ImageView: android.content.res.ColorStateList getImageTintList()> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)>[[-i0 != 21], [-i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21]][[-i0 < 21]]
-i0 != 21
-i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)>[[-i0 != 21], [-i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
-$i0 < 21
Good road: <androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)>[[-$i0 < 21]]--><android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 628 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 629 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 630 Potential Issue API: SDKCheck of <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)> is checking!!!
The life time of api is [29,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#3.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#4.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)>[]--><androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()>[]--><android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
#5.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)> to <android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:230
containsStatic:false
containsTry:false
6call by main package
-----------------------------------------
#################################################
N 631 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPaneTitle()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPaneTitle()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 632 Potential Issue API: SDKCheck of <android.view.View: float getZ()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator: int compare(android.view.View,android.view.View)>[]--><androidx.core.view.ViewCompat: float getZ(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getZ()>
One road protect good!
-$z0 == 0
$i0 != 28
-i1 < 21
Good road: <androidx.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[[-$z0 == 0]]--><androidx.transition.ChangeTransform: void createGhostView(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.GhostViewUtils: androidx.transition.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[[$i0 != 28]]--><androidx.transition.GhostViewPort: androidx.transition.GhostViewPort addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>[]--><androidx.transition.GhostViewHolder: void addGhostView(androidx.transition.GhostViewPort)>[]--><androidx.transition.GhostViewHolder: int getInsertIndex(java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(java.util.ArrayList,java.util.ArrayList)>[]--><androidx.transition.GhostViewHolder: boolean isOnTop(android.view.View,android.view.View)>[[-i1 < 21]]--><android.view.View: float getZ()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 633 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
5037call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.MechanicsActivity: com.boardgamegeek.ui.viewmodel.MechanicsViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GeekListActivity: com.boardgamegeek.ui.viewmodel.GeekListViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)>[]--><android.os.BaseBundle: boolean isEmpty()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
5036 Packageshead roads:
Roads number exceed, exit!5036
crashApis:231
crashApisInMain:31
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 634 Potential Issue API: SDKCheck of <android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>[[try]]--><android.view.ViewGroup: void dispatchProvideAutofillStructure(android.view.ViewStructure,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 635 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void reportShortcutUsed(java.lang.String)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 25
Good road: <com.boardgamegeek.tasks.SelectCollectionViewTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.SelectCollectionViewTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i2 < 25]]--><android.content.pm.ShortcutManager: void reportShortcutUsed(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 636 Potential Issue API: SDKCheck of <android.transition.PathMotion: void <init>()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialArcMotion: void <init>()>[]--><android.transition.PathMotion: void <init>()>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialArcMotion: void <init>()> to <android.transition.PathMotion: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:232
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 637 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 638 Potential Issue API: SDKCheck of <android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 639 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)> is checking!!!
The life time of api is [23,31]
37call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
36 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setMaxLines(int)>
One road protect good!
containsStatic:true
containsTry:true
37call by main package
-----------------------------------------
#################################################
N 640 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle setConversationTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 641 Potential Issue API: SDKCheck of <android.graphics.Color: int getComponentCount()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)>[]--><androidx.core.graphics.ColorUtils: android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color)>[]--><android.graphics.Color: int getComponentCount()>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color plus(android.graphics.Color,android.graphics.Color)> to <android.graphics.Color: int getComponentCount()>has compatibility isssues！
-----------------------------------------
crashApis:233
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 642 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: void setSessionToken(android.media.session.MediaSession.Token)> is checking!!!
The life time of api is [21,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 643 Potential Issue API: SDKCheck of <android.widget.TextView: void setTextLocales(android.os.LocaleList)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 644 Potential Issue API: SDKCheck of <android.view.View: boolean hasExplicitFocusable()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.ViewCompat: boolean hasExplicitFocusable(android.view.View)>[[-$i0 < 26]]--><android.view.View: boolean hasExplicitFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 645 Potential Issue API: SDKCheck of <android.app.Person: java.lang.CharSequence getName()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.CharSequence getName()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 646 Potential Issue API: SDKCheck of <android.transition.Transition: android.transition.PathMotion getPathMotion()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>[]--><android.transition.Transition: android.transition.PathMotion getPathMotion()>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)> to <android.transition.Transition: android.transition.PathMotion getPathMotion()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransform: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup buildThresholdsGroup(boolean)>[]--><android.transition.Transition: android.transition.PathMotion getPathMotion()>
#2.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransform: com.google.android.material.transition.platform.MaterialContainerTransform$ProgressThresholdsGroup buildThresholdsGroup(boolean)> to <android.transition.Transition: android.transition.PathMotion getPathMotion()>has compatibility isssues！
-----------------------------------------
crashApis:234
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 647 Potential Issue API: SDKCheck of <android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.telephony.mbms.ServiceInfo: java.lang.CharSequence getNameForLocale(java.util.Locale)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 648 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getGroup()> is checking!!!
The life time of api is [21,31]
13call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
12 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
-$i0 < 20
Good road: <androidx.core.app.NotificationCompat: java.lang.String getGroup(android.app.Notification)>[[-$i0 < 20]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
-i0 < 24
-i0 < 21
-i0 < 20
i0 < 26
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24]][[-i0 < 21]][[-i0 < 20]][[i0 < 26]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: android.app.Notification buildInternal()>[[-i0 < 24], [-i0 < 21], [-i0 < 20], [i0 < 26]]--><android.app.Notification: java.lang.String getGroup()>
One road protect good!
containsStatic:false
containsTry:true
13call by main package
-----------------------------------------
#################################################
N 649 Potential Issue API: SDKCheck of <android.view.View: float getTranslationZ()> is checking!!!
The life time of api is [21,31]
18call roads:
0 Mainhead roads:
18 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.ChangeTransform$Transforms: void <init>(android.view.View)>[]--><androidx.core.view.ViewCompat: float getTranslationZ(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void setVisibility(int)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
try
Good road with try: <androidx.constraintlayout.motion.widget.MotionLayout: void loadLayoutDescription(int)>[[try]]--><androidx.constraintlayout.motion.widget.MotionScene: void readFallback(androidx.constraintlayout.motion.widget.MotionLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void readFallback(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayoutStates$State: void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser)>[]--><androidx.constraintlayout.widget.ConstraintSet: void clone(android.content.Context,int)>[]--><androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <androidx.constraintlayout.motion.widget.MotionLayout$StateCache: void apply()>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void transitionToState(int)>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void transitionToState(int,int,int)>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void computeCurrentPositions()>[]--><androidx.constraintlayout.motion.widget.MotionController: void setStartCurrentState(android.view.View)>[]--><androidx.constraintlayout.motion.widget.MotionConstrainedPoint: void setState(android.view.View)>[]--><androidx.constraintlayout.motion.widget.MotionConstrainedPoint: void applyParameters(android.view.View)>[]--><android.view.View: float getTranslationZ()>
#8.the call statck between class <androidx.constraintlayout.motion.widget.MotionLayout$StateCache: void apply()> to <android.view.View: float getTranslationZ()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.Group: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout: void onAttachedToWindow()>[]--><androidx.constraintlayout.motion.widget.MotionScene: void readFallback(androidx.constraintlayout.motion.widget.MotionLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void readFallback(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: float getTranslationZ()>
One road protect good!
crashApis:235
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 650 Potential Issue API: SDKCheck of <android.view.WindowInsets: int getStableInsetBottom()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()>[]--><android.view.WindowInsets: int getStableInsetBottom()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()> to <android.view.WindowInsets: int getStableInsetBottom()>has compatibility isssues！
-----------------------------------------
crashApis:236
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 651 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: void <init>()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)>[]--><android.view.WindowInsets.Builder: void <init>()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>(androidx.core.view.WindowInsetsCompat)> to <android.view.WindowInsets.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>()>[]--><android.view.WindowInsets.Builder: void <init>()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void <init>()> to <android.view.WindowInsets.Builder: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:237
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 652 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
-i0 < 29
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]][[-i0 < 29]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24], [-i0 < 29]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setContextual(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 653 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)>[]--><android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)>[]--><android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
#2.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)> to <android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>has compatibility isssues！
-----------------------------------------
crashApis:238
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 654 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>[]--><android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)> to <android.app.AppComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:239
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 655 Potential Issue API: SDKCheck of <android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 25
Good road: <androidx.core.view.inputmethod.InputConnectionCompat: boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle)>[[-i1 < 25]]--><androidx.core.view.inputmethod.InputConnectionCompat$1: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>[]--><android.view.inputmethod.InputConnectionWrapper: boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 656 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTooltipText(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setTooltipText(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 657 Potential Issue API: SDKCheck of <android.app.RemoteInput: boolean getAllowFreeFormInput()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)>[]--><android.app.RemoteInput: boolean getAllowFreeFormInput()>
#1.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle)> to <android.app.RemoteInput: boolean getAllowFreeFormInput()>has compatibility isssues！
-----------------------------------------
i1 < 29
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i1 < 29]]--><android.app.RemoteInput: boolean getAllowFreeFormInput()>
#2.the call statck between class <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)> to <android.app.RemoteInput: boolean getAllowFreeFormInput()>has compatibility isssues！
-----------------------------------------
crashApis:240
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 658 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()>[]--><android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()> to <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()>[]--><android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
#2.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()> to <android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>has compatibility isssues！
-----------------------------------------
crashApis:241
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 659 Potential Issue API: SDKCheck of <android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 21
Good road: <androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int)>[]--><androidx.core.view.ViewCompat: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])>[[-$i2 < 21]]--><android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 660 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 661 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setIsClippedToScreen(boolean)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 662 Potential Issue API: SDKCheck of <android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.Typeface.Builder: android.graphics.Typeface.Builder setItalic(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 663 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>[]--><android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)> to <android.graphics.drawable.AnimatedVectorDrawable: void registerAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>has compatibility isssues！
-----------------------------------------
crashApis:242
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 664 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)>[[-$i2 < 23]]--><android.view.View: void setScrollIndicators(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 665 Potential Issue API: SDKCheck of <android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)>[[-$i0 < 24]]--><android.widget.TextView: void setCompoundDrawableTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 666 Potential Issue API: SDKCheck of <android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem: void complete()>[[try]]--><android.app.job.JobParameters: void completeWork(android.app.job.JobWorkItem)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 667 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setExitTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 668 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i4 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)>[[], [-$i4 < 26]]--><android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>
#1.the call statck between class <androidx.core.view.MenuItemCompat: void setShortcut(android.view.MenuItem,char,char,int,int)> to <android.view.MenuItem: android.view.MenuItem setShortcut(char,char,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:243
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 669 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: void <init>(android.graphics.fonts.FontFamily)>has compatibility isssues！
-----------------------------------------
crashApis:244
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 670 Potential Issue API: SDKCheck of <android.transition.Transition: java.util.List getTargetNames()> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 671 Potential Issue API: SDKCheck of <android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationZ(float)>[[-$i0 < 21]]--><android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 672 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 673 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean)>[[-$i4 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 674 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)>[[-$i1 < 21]]--><android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 675 Potential Issue API: SDKCheck of <android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildLegacyExtrasBundle()>[]--><android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
One road protect good!
-$i0 < 26
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildLegacyExtrasBundle()>[]--><android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
One road protect good!
-i0 < 25
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildLegacyExtrasBundle()>[]--><android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
One road protect good!
-i0 < 25
i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[i0 < 29]]--><androidx.core.content.pm.ShortcutInfoCompat: android.os.PersistableBundle buildLegacyExtrasBundle()>[]--><android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 676 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: boolean isInstantApp()> is checking!!!
The life time of api is [26,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 677 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setTimeoutAfter(long)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 678 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.github.mikephil.charting.renderer.PieChartRenderer: void drawExtras(android.graphics.Canvas)>[]--><com.github.mikephil.charting.renderer.PieChartRenderer: void drawCenterText(android.graphics.Canvas)>[]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#1.the call statck between class <com.github.mikephil.charting.renderer.PieChartRenderer: void drawExtras(android.graphics.Canvas)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 31 
Error road: <com.github.mikephil.charting.utils.Utils: void drawMultilineText(android.graphics.Canvas,java.lang.String,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.FSize,com.github.mikephil.charting.utils.MPPointF,float)>[]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#2.the call statck between class <com.github.mikephil.charting.utils.Utils: void drawMultilineText(android.graphics.Canvas,java.lang.String,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.FSize,com.github.mikephil.charting.utils.MPPointF,float)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:245
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 679 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)>[]--><android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>
#1.the call statck between class <androidx.core.hardware.fingerprint.FingerprintManagerCompat$1: void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult)> to <android.hardware.fingerprint.FingerprintManager.AuthenticationResult: android.hardware.fingerprint.FingerprintManager.CryptoObject getCryptoObject()>has compatibility isssues！
-----------------------------------------
crashApis:246
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 680 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params: int getHyphenationFrequency()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)>[]--><android.text.PrecomputedText.Params: int getHyphenationFrequency()>
#1.the call statck between class <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.PrecomputedText$Params)> to <android.text.PrecomputedText.Params: int getHyphenationFrequency()>has compatibility isssues！
-----------------------------------------
crashApis:247
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 681 Potential Issue API: SDKCheck of <android.view.View: android.view.WindowInsets getRootWindowInsets()> is checking!!!
The life time of api is [23,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewAttachedToWindow(android.view.View)>[[-i0 < 29]]--><android.view.View: android.view.WindowInsets getRootWindowInsets()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.view.ViewCompat$Api23Impl: android.view.WindowInsets getRootWindowInsets(android.view.View)>[]--><android.view.View: android.view.WindowInsets getRootWindowInsets()>
#2.the call statck between class <androidx.core.view.ViewCompat$Api23Impl: android.view.WindowInsets getRootWindowInsets(android.view.View)> to <android.view.View: android.view.WindowInsets getRootWindowInsets()>has compatibility isssues！
-----------------------------------------
crashApis:248
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 682 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
5921call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.TopGamesActivity dummyMainMethod_com_boardgamegeek_ui_TopGamesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ThreadActivity dummyMainMethod_com_boardgamegeek_ui_ThreadActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DesignersActivity dummyMainMethod_com_boardgamegeek_ui_DesignersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysSummaryActivity dummyMainMethod_com_boardgamegeek_ui_PlaysSummaryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>[]--><com.boardgamegeek.provider.BaseProvider: int delete(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String,java.lang.String[])>[]--><com.boardgamegeek.provider.GamesIdPollsNameProvider: com.boardgamegeek.util.SelectionBuilder buildSimpleSelection(android.net.Uri)>[]--><com.boardgamegeek.provider.BggContract$Games: java.lang.String getPollName(android.net.Uri)>[]--><com.boardgamegeek.provider.BggContract$Games: java.lang.String getPathValue(android.net.Uri,java.lang.String)>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_PlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.MechanicsActivity: com.boardgamegeek.ui.viewmodel.MechanicsViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: java.lang.Boolean getDataCollectionValueFromManifest(android.content.Context)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: java.lang.Boolean readCrashlyticsDataCollectionEnabledFromManifest(android.content.Context)>[[try]]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumActivity dummyMainMethod_com_boardgamegeek_ui_ForumActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DrawerActivity: void onResume()>[]--><androidx.fragment.app.FragmentActivity: void onResume()>[]--><androidx.fragment.app.FragmentController: void noteStateNotSaved()>[]--><androidx.fragment.app.FragmentManager: void noteStateNotSaved()>[]--><com.google.android.gms.measurement.internal.zzap: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkm: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzky: java.lang.Object next()>[]--><com.google.android.gms.internal.measurement.zzkg: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: java.lang.Object next()>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GeekListActivity: com.boardgamegeek.ui.viewmodel.GeekListViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandleController: void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle)>[]--><androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)>[]--><androidx.lifecycle.LifecycleRegistry: void sync()>[]--><androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)>[]--><androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)>[]--><com.google.android.gms.common.data.DataBufferIterator: boolean hasNext()>[]--><com.google.android.gms.common.data.EntityBuffer: int getCount()>[]--><com.google.android.gms.common.data.EntityBuffer: void zacb()>[[try]]--><com.google.android.gms.common.data.DataHolder: java.lang.String getString(java.lang.String,int,int)>[]--><com.google.android.gms.common.data.DataHolder: void zaa(java.lang.String,int)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
5920 Packageshead roads:
Roads number exceed, exit!5920
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 683 Potential Issue API: SDKCheck of <android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)> is checking!!!
The life time of api is [21,31]
62call roads:
0 Mainhead roads:
62 Packageshead roads:
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.BarLineChartTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>[]--><com.github.mikephil.charting.listener.BarLineChartTouchListener: void performHighlightDrag(android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment$createAdapter$1$onItemLongPress$1: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar2(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.GameActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$promptPickStartPlayer$5$LogPlayActivity(android.content.DialogInterface,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void notifyStartPlayer()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.BarLineChartTouchListener: boolean onSingleTapUp(android.view.MotionEvent)>[]--><com.github.mikephil.charting.listener.ChartTouchListener: void performHighlight(com.github.mikephil.charting.highlight.Highlight,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.BuddiesFragment: void showError$default(com.boardgamegeek.ui.BuddiesFragment,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.ui.BuddiesFragment: void showError(java.lang.String)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void access$3900(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void notifyStartPlayer()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[$i0 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
i2 < 21
$i0 < 21
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21]][[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
$i0 >= 21
-$yysi0 < 16
-$i0 < 21
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar2(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.DataFragment: void onEvent(com.boardgamegeek.events.ImportFinishedEvent)>[]--><com.boardgamegeek.ui.DataFragment: void notifyEnd(java.lang.String,int,int)>[]--><com.boardgamegeek.ui.DataFragment: void showSnackbar(java.lang.String)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.HotnessFragment: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onEvent(com.boardgamegeek.events.ColorAssignmentCompleteEvent)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar2(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.DataFragment: void onRequestPermissionsResult(int,java.lang.String[],int[])>[]--><com.boardgamegeek.ui.DataFragment: void showSnackbar(int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar2(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar2(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21]][[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
i1 < 29
$i0 >= 21
-$yysi0 < 16
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COORDINATOR_LAYOUT$1: org.jetbrains.anko.design._CoordinatorLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.BuddyActivity: void access$showSnackbar(com.boardgamegeek.ui.BuddyActivity,java.lang.String)>[]--><com.boardgamegeek.ui.BuddyActivity: void showSnackbar(java.lang.String)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.PlayerColorsActivity$itemTouchHelper$2$1: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.DataFragment: void lambda$onExportClicked$0$DataFragment(java.lang.String,android.content.DialogInterface,int)>[]--><com.boardgamegeek.ui.DataFragment: void showSnackbar(int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar2(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignView$NAVIGATION_VIEW$1: com.google.android.material.navigation.NavigationView invoke(android.content.Context)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.navigation.NavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [-$yysi0 < 16]]
###Multi invoking in one method, need manual check!!!--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21]][[-$yysi0 < 16]]
-$i0 < 21
-$yysi0 < 16
Good road: <androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.drawerlayout.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i0 < 21], [-$yysi0 < 16]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.LocationActivity$onCreate$4: void onChanged(com.boardgamegeek.livedata.Event)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.charts.Chart: void highlightValue(float,int)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(float,int,boolean)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(float,float,int,boolean)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$1: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar2(android.view.View,java.lang.CharSequence,java.lang.CharSequence,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar2(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.ScrimInsetsFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.internal.ViewUtils: void doOnApplyWindowInsets(android.view.View,com.google.android.material.internal.ViewUtils$OnApplyWindowInsetsListener)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.charts.BarChart: void highlightValue(float,int,int)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar2(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.charts.Chart: void highlightValue(float,float,int)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(float,float,int,boolean)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.BuddiesFragment: void access$showError(com.boardgamegeek.ui.BuddiesFragment,java.lang.String)>[]--><com.boardgamegeek.ui.BuddiesFragment: void showError(java.lang.String)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.DataFragment: void onEvent(com.boardgamegeek.events.ExportFinishedEvent)>[]--><com.boardgamegeek.ui.DataFragment: void notifyEnd(java.lang.String,int,int)>[]--><com.boardgamegeek.ui.DataFragment: void showSnackbar(java.lang.String)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment$setUpRecyclerView$itemTouchHelper$1: void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager.widget.ViewPager: void <init>(android.content.Context)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar indefiniteSnackbar(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar2(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.github.mikephil.charting.listener.PieRadarChartTouchListener: boolean onSingleTapUp(android.view.MotionEvent)>[]--><com.github.mikephil.charting.listener.ChartTouchListener: void performHighlight(com.github.mikephil.charting.highlight.Highlight,android.view.MotionEvent)>[]--><com.github.mikephil.charting.charts.Chart: void highlightValue(com.github.mikephil.charting.highlight.Highlight,boolean)>[]--><com.boardgamegeek.ui.PollFragment$onViewCreated$1: void onValueSelected(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21]][[-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]
i1 < 29
$i0 >= 21
-$yysi0 < 16
-$i0 < 21
Good road: <com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.coordinatorlayout.CircularRevealCoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i1 < 29]]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setupForInsets()>[[$i0 >= 21], [-$yysi0 < 16]]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.SearchResultsFragment$snackbar$2: com.google.android.material.snackbar.Snackbar invoke()>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar2(android.view.View,int,int,kotlin.jvm.functions.Function1)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <androidx.viewpager.widget.ViewPager: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager.widget.ViewPager: void initViewPager()>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar snackbar(android.view.View,java.lang.CharSequence)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
-$i0 < 21
Good road: <org.jetbrains.anko.design.DesignSnackbarKt: com.google.android.material.snackbar.Snackbar longSnackbar2(android.view.View,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,int,int)>[]--><com.google.android.material.snackbar.Snackbar: com.google.android.material.snackbar.Snackbar make(android.view.View,java.lang.CharSequence,int)>[]--><com.google.android.material.snackbar.Snackbar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><com.google.android.material.snackbar.BaseTransientBottomBar: void <init>(android.view.ViewGroup,android.view.View,com.google.android.material.snackbar.ContentViewCallback)>[]--><androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)>[[-$i0 < 21]]--><android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
One road protect good!
containsStatic:true
containsTry:false
63call by main package
-----------------------------------------
#################################################
N 684 Potential Issue API: SDKCheck of <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> is checking!!!
The life time of api is [14,22]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 23 24 25 26 27 28 29 30 31 
Error road: <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>[[]]--><android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
#1.the call statck between class <com.google.android.material.button.MaterialButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)> to <android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>has compatibility isssues！
-----------------------------------------
crashApis:249
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 685 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
5057call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyActivity dummyMainMethod_com_boardgamegeek_ui_BuddyActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyActivity: void onCreate(android.os.Bundle)>[]--><com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void preProcess()>[]--><com.google.android.gms.measurement.internal.zzif: void run()>[]--><com.google.android.gms.measurement.internal.zzic: void zza(int,java.lang.Exception,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfu: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfv: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[[try]]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.google.firebase.analytics.ktx.ParametersBuilder: void param(java.lang.String,java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
5056 Packageshead roads:
Roads number exceed, exit!5056
crashApis:250
crashApisInMain:32
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 686 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setBadgeIconType(int)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 687 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper: void sendResult(java.util.List,int)>[]--><android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper: void sendResult(java.util.List,int)> to <android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper: void sendResult(java.lang.Object)>[]--><android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>
#2.the call statck between class <androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper: void sendResult(java.lang.Object)> to <android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:251
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 688 Potential Issue API: SDKCheck of <android.os.LocaleList: java.lang.String toLanguageTags()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()>[]--><androidx.core.os.LocaleListPlatformWrapper: java.lang.String toLanguageTags()>[]--><android.os.LocaleList: java.lang.String toLanguageTags()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.lang.String toLanguageTags()> to <android.os.LocaleList: java.lang.String toLanguageTags()>has compatibility isssues！
-----------------------------------------
crashApis:252
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 689 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
i0 < 19
-i0 < 20
i0 < 26
i0 < 16
i0 >= 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 20]][[i0 < 26]][[i0 < 16]][[i0 >= 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 20], [i0 < 26], [i0 < 16], [i0 >= 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 690 Potential Issue API: SDKCheck of <android.widget.AutoCompleteTextView: void setInputMethodMode(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 691 Potential Issue API: SDKCheck of <android.graphics.Color: long convert(long,android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace)>[]--><android.graphics.Color: long convert(long,android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace)> to <android.graphics.Color: long convert(long,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace$Named)>[]--><android.graphics.Color: long convert(long,android.graphics.ColorSpace)>
#2.the call statck between class <androidx.core.graphics.ColorKt: long convertTo(long,android.graphics.ColorSpace$Named)> to <android.graphics.Color: long convert(long,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:253
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 692 Potential Issue API: SDKCheck of <android.view.View: void setSystemGestureExclusionRects(java.util.List)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: void setSystemGestureExclusionRects(android.view.View,java.util.List)>[[-$i0 < 29]]--><android.view.View: void setSystemGestureExclusionRects(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 693 Potential Issue API: SDKCheck of <android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.ViewCompat: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)>[[-$i0 < 24]]--><android.view.View: void updateDragShadow(android.view.View.DragShadowBuilder)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 694 Potential Issue API: SDKCheck of <android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>[]--><com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void setUpEnterTransform(android.view.Window)>[]--><android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>
#1.the call statck between class <com.google.android.material.transition.platform.MaterialContainerTransformSharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)> to <android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>has compatibility isssues！
-----------------------------------------
crashApis:254
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 695 Potential Issue API: SDKCheck of <android.graphics.Color: int toArgb(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: int toColorInt(long)>[]--><android.graphics.Color: int toArgb(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: int toColorInt(long)> to <android.graphics.Color: int toArgb(long)>has compatibility isssues！
-----------------------------------------
crashApis:255
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 696 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setColor(int)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 697 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: int getLayer()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getLayer()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: int getLayer()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 698 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setDisplayCutout(android.view.DisplayCutout)>has compatibility isssues！
-----------------------------------------
crashApis:256
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 699 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font build()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 700 Potential Issue API: SDKCheck of <android.widget.RemoteViews: void setChronometerCountDown(int,boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24], [$i0 >= 21], [$i3 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24]][[$i0 >= 21]][[$i3 < 21]]
-$i0 < 24
$i0 >= 21
$i3 < 21
Good road: <androidx.core.app.NotificationCompat$Style: android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean)>[[-$i0 < 24], [$i0 >= 21], [$i3 < 21]]--><android.widget.RemoteViews: void setChronometerCountDown(int,boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 701 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
5032call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayerActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayerActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayerActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
5031 Packageshead roads:
Roads number exceed, exit!5031
crashApis:257
crashApisInMain:33
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 702 Potential Issue API: SDKCheck of <android.widget.ImageView: void animateTransform(android.graphics.Matrix)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.transition.ChangeImageTransform$2: void set(android.widget.ImageView,android.graphics.Matrix)>[]--><androidx.transition.ImageViewUtils: void animateTransform(android.widget.ImageView,android.graphics.Matrix)>[[-i0 < 29]]--><android.widget.ImageView: void animateTransform(android.graphics.Matrix)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 703 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeBasic()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeBasic()>[[-$i0 < 23]]--><android.app.ActivityOptions: android.app.ActivityOptions makeBasic()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 704 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: void <init>(android.text.TextPaint)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 705 Potential Issue API: SDKCheck of <android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 29
Good road: <androidx.core.text.PrecomputedTextCompat$Params: void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)>[[-$i2 < 29]]--><android.text.PrecomputedText.Params.Builder: android.text.PrecomputedText.Params.Builder setBreakStrategy(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 706 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()>[]--><android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28: androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo()> to <android.service.media.MediaBrowserService: android.media.session.MediaSessionManager.RemoteUserInfo getCurrentBrowserInfo()>has compatibility isssues！
-----------------------------------------
crashApis:258
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 707 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getSubtype()> is checking!!!
The life time of api is [3,30]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void lambda$schedule$1(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.TransportScheduleCallback,com.google.android.datatransport.runtime.EventInternal)>[[try]]--><com.google.android.datatransport.cct.zzc: com.google.android.datatransport.runtime.EventInternal decorate(com.google.android.datatransport.runtime.EventInternal)>[]--><android.net.NetworkInfo: int getSubtype()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <com.squareup.picasso.Dispatcher$DispatcherHandler: void handleMessage(android.os.Message)>[]--><com.squareup.picasso.Dispatcher: void performNetworkStateChange(android.net.NetworkInfo)>[]--><com.squareup.picasso.PicassoExecutorService: void adjustThreadCount(android.net.NetworkInfo)>[]--><android.net.NetworkInfo: int getSubtype()>
#2.the call statck between class <com.squareup.picasso.Dispatcher$DispatcherHandler: void handleMessage(android.os.Message)> to <android.net.NetworkInfo: int getSubtype()>has compatibility isssues！
-----------------------------------------
crashApis:259
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 708 Potential Issue API: SDKCheck of <android.app.Notification: int getBadgeIconType()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: int getBadgeIconType(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: int getBadgeIconType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 709 Potential Issue API: SDKCheck of <android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)> is checking!!!
The life time of api is [21,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 710 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
5042call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: com.boardgamegeek.ui.viewmodel.SelfUserViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.MechanicsActivity: com.boardgamegeek.ui.viewmodel.MechanicsViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.google.firebase.crashlytics.FirebaseCrashlytics: void setCrashlyticsCollectionEnabled(boolean)>[]--><com.google.firebase.crashlytics.internal.common.CrashlyticsCore: void setCrashlyticsCollectionEnabled(java.lang.Boolean)>[]--><com.google.firebase.crashlytics.internal.common.DataCollectionArbiter: void setCrashlyticsDataCollectionEnabled(java.lang.Boolean)>[[try]]--><com.google.android.gms.tasks.TaskCompletionSource: boolean trySetResult(java.lang.Object)>[]--><com.google.android.gms.tasks.zzu: boolean zzb(java.lang.Object)>[]--><com.google.android.gms.tasks.zzr: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.tasks.zzj: void zza(com.google.android.gms.tasks.Task)>[]--><com.google.android.gms.cloudmessaging.zzz: void execute(java.lang.Runnable)>[]--><androidx.recyclerview.widget.RecyclerView$ViewFlinger: void run()>[]--><androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])>[]--><androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayout()>[]--><androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()>[]--><androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()>[]--><androidx.recyclerview.widget.AdapterHelper: void preProcess()>[]--><com.google.android.gms.measurement.internal.zzif: void run()>[]--><com.google.android.gms.measurement.internal.zzic: void zza(int,java.lang.Exception,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfu: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[]--><com.google.android.gms.measurement.internal.zzfv: void zza(java.lang.String,int,java.lang.Throwable,byte[],java.util.Map)>[[try]]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle)>[]--><com.google.android.gms.measurement.internal.zzgy: void zza(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)>[]--><com.google.android.gms.measurement.internal.zzgy: void zzb(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)>[]--><com.google.android.gms.measurement.internal.zzkw: android.os.Bundle zzb(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GeekListActivity: com.boardgamegeek.ui.viewmodel.GeekListViewModel getViewModel()>[]--><androidx.lifecycle.ViewModelLazy: java.lang.Object getValue()>[]--><androidx.lifecycle.ViewModelLazy: androidx.lifecycle.ViewModel getValue()>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)>[]--><androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class)>[]--><androidx.lifecycle.SavedStateHandleController: androidx.lifecycle.SavedStateHandleController create(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle,java.lang.String,android.os.Bundle)>[]--><androidx.lifecycle.SavedStateHandle: androidx.lifecycle.SavedStateHandle createHandle(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
5041 Packageshead roads:
Roads number exceed, exit!5041
crashApis:260
crashApisInMain:34
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 711 Potential Issue API: SDKCheck of <android.app.NotificationManager: boolean areNotificationsEnabled()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.app.NotificationManagerCompat: boolean areNotificationsEnabled()>[[-i0 < 24]]--><android.app.NotificationManager: boolean areNotificationsEnabled()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 712 Potential Issue API: SDKCheck of <android.graphics.fonts.FontStyle: void <init>(int,int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.fonts.FontStyle: void <init>(int,int)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.fonts.FontStyle: void <init>(int,int)>has compatibility isssues！
-----------------------------------------
crashApis:261
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 713 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])>[]--><androidx.core.os.LocaleListPlatformWrapper: java.util.Locale getFirstMatch(java.lang.String[])>[]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
#1.the call statck between class <androidx.core.os.LocaleListCompat: java.util.Locale getFirstMatch(java.lang.String[])> to <android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>has compatibility isssues！
-----------------------------------------
i0 >= 28
Good road: <androidx.core.telephony.mbms.MbmsHelper: java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo)>[[i0 >= 28]]--><android.os.LocaleList: java.util.Locale getFirstMatch(java.lang.String[])>
One road protect good!
crashApis:262
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 714 Potential Issue API: SDKCheck of <android.graphics.Color: float alpha(long)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float getAlpha(long)>[]--><android.graphics.Color: float alpha(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getAlpha(long)> to <android.graphics.Color: float alpha(long)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: float component4(long)>[]--><android.graphics.Color: float alpha(long)>
#2.the call statck between class <androidx.core.graphics.ColorKt: float component4(long)> to <android.graphics.Color: float alpha(long)>has compatibility isssues！
-----------------------------------------
crashApis:263
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 715 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[])>[[-i0 < 21]]--><android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 716 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 717 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])> is checking!!!
The life time of api is [25,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
-i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntents(android.content.Intent[])>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 718 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()>[]--><android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()> to <android.view.WindowInsets: android.view.WindowInsets consumeDisplayCutout()>has compatibility isssues！
-----------------------------------------
crashApis:264
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 719 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: void <init>(android.os.ParcelFileDescriptor)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 720 Potential Issue API: SDKCheck of <android.graphics.ImageDecoder: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.graphics.ImageDecoderKt: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)>[]--><android.graphics.ImageDecoder: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)>
#1.the call statck between class <androidx.core.graphics.ImageDecoderKt: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3)> to <android.graphics.ImageDecoder: android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder.Source,android.graphics.ImageDecoder.OnHeaderDecodedListener)>has compatibility isssues！
-----------------------------------------
crashApis:265
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 721 Potential Issue API: SDKCheck of <android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)> is checking!!!
The life time of api is [28,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i1 < 28
Good road: <androidx.core.os.HandlerKt: java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object)>[]--><androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>[[-i1 < 28]]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)>
One road protect good!
-i1 < 28
Good road: <androidx.core.os.HandlerKt: java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0)>[]--><androidx.core.os.HandlerCompat: boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long)>[[-i1 < 28]]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,java.lang.Object,long)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 722 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.graphics.PorterDuff.Mode getButtonTintMode()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.widget.CompoundButtonCompat: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)>[[-$i0 < 21]]--><android.widget.CompoundButton: android.graphics.PorterDuff.Mode getButtonTintMode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 723 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.radiobutton.MaterialRadioButton: void onAttachedToWindow()>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.checkbox.MaterialCheckBox: void onAttachedToWindow()>[]--><com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.checkbox.MaterialCheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.theme.MaterialComponentsViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.radiobutton.MaterialRadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 724 Potential Issue API: SDKCheck of <android.view.MenuItem: int getNumericModifiers()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: int getNumericModifiers()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: int getNumericModifiers(android.view.MenuItem)> to <android.view.MenuItem: int getNumericModifiers()>has compatibility isssues！
-----------------------------------------
crashApis:266
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 725 Potential Issue API: SDKCheck of <android.graphics.Color: boolean isWideGamut(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: boolean isWideGamut(long)>[]--><android.graphics.Color: boolean isWideGamut(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: boolean isWideGamut(long)> to <android.graphics.Color: boolean isWideGamut(long)>has compatibility isssues！
-----------------------------------------
crashApis:267
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 726 Potential Issue API: SDKCheck of <android.view.Window: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.view.WindowCompat: android.view.View requireViewById(android.view.Window,int)>[[-i1 < 28]]--><android.view.Window: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 727 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:268
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 728 Potential Issue API: SDKCheck of <android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)> is checking!!!
The life time of api is [5,29]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 30 31 
Error road: <com.squareup.picasso.MediaStoreRequestHandler: com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int)>[]--><android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
#1.the call statck between class <com.squareup.picasso.MediaStoreRequestHandler: com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int)> to <android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>has compatibility isssues！
-----------------------------------------
crashApis:269
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 729 Potential Issue API: SDKCheck of <android.app.job.JobServiceEngine: void <init>(android.app.Service)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)>[]--><android.app.job.JobServiceEngine: void <init>(android.app.Service)>
#1.the call statck between class <androidx.core.app.JobIntentService$JobServiceEngineImpl: void <init>(androidx.core.app.JobIntentService)> to <android.app.job.JobServiceEngine: void <init>(android.app.Service)>has compatibility isssues！
-----------------------------------------
crashApis:270
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 730 Potential Issue API: SDKCheck of <android.view.View: void setPointerIcon(android.view.PointerIcon)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 24
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$BOTTOM_NAVIGATION_VIEW$1: org.jetbrains.anko.design._BottomNavigationView invoke(android.content.Context)>[]--><org.jetbrains.anko.design._BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationView: void inflateMenu(int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationPresenter: void updateMenuView(boolean)>[]--><com.google.android.material.bottomnavigation.BottomNavigationMenuView: void buildMenuView()>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)>[]--><com.google.android.material.bottomnavigation.BottomNavigationItemView: void setEnabled(boolean)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
-$i0 < 24
Good road: <com.google.android.material.tabs.TabLayout$TabView: void <init>(com.google.android.material.tabs.TabLayout,android.content.Context)>[]--><androidx.core.view.ViewCompat: void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat)>[[-$i0 < 24]]--><android.view.View: void setPointerIcon(android.view.PointerIcon)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 731 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)> is checking!!!
The life time of api is [29,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.BubbleMetadata.Builder: android.app.Notification.BubbleMetadata.Builder setAutoExpandBubble(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:271
crashApisInMain:35
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 732 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: int getId()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: int getId()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: int getId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 733 Potential Issue API: SDKCheck of <android.app.Activity: android.view.View requireViewById(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 28
Good road: <androidx.core.app.ActivityCompat: android.view.View requireViewById(android.app.Activity,int)>[[-i1 < 28]]--><android.app.Activity: android.view.View requireViewById(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 734 Potential Issue API: SDKCheck of <android.view.WindowInsets: void <init>(android.view.WindowInsets)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>[]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
#1.the call statck between class <androidx.fragment.app.FragmentContainerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)> to <android.view.WindowInsets: void <init>(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.view.WindowInsetsCompat$Impl20: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)>[]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl20: void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)> to <android.view.WindowInsets: void <init>(android.view.WindowInsets)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()>[[try]]--><android.view.WindowInsets: void <init>(android.view.WindowInsets)>
One road protect good!
crashApis:272
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 735 Potential Issue API: SDKCheck of <android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)>[[-$i0 < 26]]--><android.view.MenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 736 Potential Issue API: SDKCheck of <android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl: void requestUsageTimeReport(android.app.PendingIntent)>[[-$i0 < 23]]--><android.app.ActivityOptions: void requestUsageTimeReport(android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 737 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.os.LocaleList: boolean equals(java.lang.Object)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)>[]--><android.os.LocaleList: boolean equals(java.lang.Object)>
#2.the call statck between class <androidx.core.os.LocaleListPlatformWrapper: boolean equals(java.lang.Object)> to <android.os.LocaleList: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:273
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 738 Potential Issue API: SDKCheck of <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>[]--><android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
#1.the call statck between class <androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)> to <android.app.AppComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)>has compatibility isssues！
-----------------------------------------
crashApis:274
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 739 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setStableInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:275
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 740 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity$PlayAdapter$AddPlayerViewHolder: void bind()>[]--><androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)>[[-i0 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 741 Potential Issue API: SDKCheck of <android.view.View: void dispatchStartTemporaryDetach()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 24
Good road: <androidx.core.view.ViewCompat: void dispatchStartTemporaryDetach(android.view.View)>[[-i0 < 24]]--><android.view.View: void dispatchStartTemporaryDetach()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 742 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)> is checking!!!
The life time of api is [21,31]
28call roads:
0 Mainhead roads:
28 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>[]--><androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)>[]--><androidx.core.widget.NestedScrollView: void doScrollY(int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>[[$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>[[$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$i1 < 21
$yysi1 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)>[]--><androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int)>[[$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.view.ViewCompat: boolean startNestedScroll(android.view.View,int,int)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>[]--><androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)>[]--><androidx.core.widget.NestedScrollView: boolean pageScroll(int)>[]--><androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)>[]--><androidx.core.widget.NestedScrollView: void doScrollY(int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
-$i0 >= 18
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)>[[-$i0 >= 18]]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <com.boardgamegeek.ui.widget.NestedScrollWebView: boolean onTouchEvent(android.view.MotionEvent)>[]--><com.boardgamegeek.ui.widget.NestedScrollWebView: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: boolean endFakeDrag()>[]--><androidx.viewpager2.widget.FakeDrag: boolean endFakeDrag()>[]--><androidx.viewpager2.widget.ViewPager2: void snapToPage()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[$i1 < 21], [try], [-$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[$i1 < 21]][[try]][[-$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$i1 < 21
try
Good road with try: <androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)>[]--><androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[$i1 < 21], [try], [-$i1 < 21]]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>[]--><androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <com.google.android.material.datepicker.MaterialCalendar: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: void fling(int)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
try
Good road with try: <androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)>[]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.SnapHelper$1: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)>[]--><androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)>[]--><androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><androidx.viewpager2.widget.ViewPager2: void initialize(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.SnapHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.SnapHelper: void snapToTargetExistingView()>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)>[]--><androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try]][[-$i1 < 21]]
$yysi1 < 21
try
Good road with try: <androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)>[]--><androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)>[]--><androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)>[]--><androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)>[]--><androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)>[[$yysi1 < 21]]--><androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)>[[try], [-$i1 < 21]]--><android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
One road protect good!
containsStatic:true
containsTry:true
29call by main package
-----------------------------------------
#################################################
N 743 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)> is checking!!!
The life time of api is [23,31]
21call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$BubbleMetadata: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
20 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#4.the call statck between class <androidx.core.app.RemoteActionCompat: android.app.RemoteAction toRemoteAction()> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(byte[])>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
#6.the call statck between class <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(byte[])> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>has compatibility isssues！
-----------------------------------------
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 23
Good road: <androidx.core.app.NotificationCompat$Style: android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int)>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Drawable loadDrawable(android.content.Context)>[[-i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
-i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[]--><androidx.core.graphics.drawable.IconCompat: android.graphics.drawable.Icon toIcon(android.content.Context)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithData(byte[],int,int)>
One road protect good!
crashApis:276
crashApisInMain:36
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 744 Potential Issue API: SDKCheck of <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)>[]--><android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>
#1.the call statck between class <androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)> to <android.view.View: java.lang.CharSequence getAccessibilityPaneTitle()>has compatibility isssues！
-----------------------------------------
crashApis:277
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 745 Potential Issue API: SDKCheck of <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#1.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#2.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[]--><android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>
#3.the call statck between class <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)> to <android.graphics.Typeface.CustomFallbackBuilder: android.graphics.Typeface.CustomFallbackBuilder setStyle(android.graphics.fonts.FontStyle)>has compatibility isssues！
-----------------------------------------
crashApis:278
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 746 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isHeading()>[[-i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isHeading()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 747 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.Color valueOf(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.Color toColor(int)>[]--><android.graphics.Color: android.graphics.Color valueOf(int)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.Color toColor(int)> to <android.graphics.Color: android.graphics.Color valueOf(int)>has compatibility isssues！
-----------------------------------------
crashApis:279
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 748 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String)>[]--><androidx.documentfile.provider.TreeDocumentFile: android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[[try]]--><android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
One road protect good!
try
Good road with try: <androidx.documentfile.provider.TreeDocumentFile: androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String)>[]--><androidx.documentfile.provider.TreeDocumentFile: android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)>[[try]]--><android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 749 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>
One road protect good!
-$i1 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int)>[[-$i1 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 750 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[i0 < 28]][[-i0 < 20]][[i0 < 24]]
i1 < 23
i0 < 28
-i0 < 20
i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [i0 < 28], [-i0 < 20], [i0 < 24]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#3.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#4.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#5.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#6.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#7.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#8.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#9.the call statck between class <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
#10.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>has compatibility isssues！
-----------------------------------------
crashApis:280
crashApisInMain:37
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 751 Potential Issue API: SDKCheck of <android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.view.ViewCompat: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)>[[-$i1 < 24]]--><android.view.View: boolean startDragAndDrop(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 752 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalAfter(android.view.View)>[[-$i0 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalAfter(android.view.View)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 753 Potential Issue API: SDKCheck of <android.app.Notification: java.lang.String getChannelId()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationCompat: java.lang.String getChannelId(android.app.Notification)>[[-$i0 < 26]]--><android.app.Notification: java.lang.String getChannelId()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 754 Potential Issue API: SDKCheck of <android.widget.PopupWindow: int getWindowLayoutType()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 23
Good road: <androidx.core.widget.PopupWindowCompat: int getWindowLayoutType(android.widget.PopupWindow)>[[-$i0 < 23]]--><android.widget.PopupWindow: int getWindowLayoutType()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 755 Potential Issue API: SDKCheck of <android.view.View: void setNextClusterForwardId(int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 26
Good road: <androidx.core.view.ViewCompat: void setNextClusterForwardId(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setNextClusterForwardId(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 756 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])> is checking!!!
The life time of api is [24,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setRemoteInputHistory(java.lang.CharSequence[])>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 757 Potential Issue API: SDKCheck of <android.view.animation.PathInterpolator: void <init>(android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.animation.PathInterpolatorCompat: android.view.animation.Interpolator create(android.graphics.Path)>[[-$i0 < 21]]--><android.view.animation.PathInterpolator: void <init>(android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 758 Potential Issue API: SDKCheck of <android.util.Half: android.util.Half valueOf(short)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.util.HalfKt: android.util.Half toHalf(short)>[]--><android.util.Half: android.util.Half valueOf(short)>
#1.the call statck between class <androidx.core.util.HalfKt: android.util.Half toHalf(short)> to <android.util.Half: android.util.Half valueOf(short)>has compatibility isssues！
-----------------------------------------
crashApis:281
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 759 Potential Issue API: SDKCheck of <android.util.Size: int getHeight()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)>[]--><android.util.Size: int getHeight()>
#1.the call statck between class <androidx.versionedparcelable.VersionedParcel: void writeSize(android.util.Size,int)> to <android.util.Size: int getHeight()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.util.SizeKt: int component2(android.util.Size)>[]--><android.util.Size: int getHeight()>
#2.the call statck between class <androidx.core.util.SizeKt: int component2(android.util.Size)> to <android.util.Size: int getHeight()>has compatibility isssues！
-----------------------------------------
crashApis:282
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 760 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.graphics.Region getRegionAt(int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat: android.graphics.Region getRegionAt(int)>[[-$i1 < 29]]--><android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo: android.graphics.Region getRegionAt(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 761 Potential Issue API: SDKCheck of <android.view.Display.Mode: int getPhysicalHeight()> is checking!!!
The life time of api is [23,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)>[]--><android.view.Display.Mode: int getPhysicalHeight()>
#1.the call statck between class <androidx.core.view.DisplayCompat$ModeCompat: void <init>(android.view.Display$Mode,boolean)> to <android.view.Display.Mode: int getPhysicalHeight()>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]
###Multi invoking in one method, need manual check!!!--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23]][[i0 >= 28]]
-i0 < 23
i0 >= 28
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[]--><androidx.core.view.DisplayCompat: android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display)>[[-i0 < 23], [i0 >= 28]]--><android.view.Display.Mode: int getPhysicalHeight()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)>[]--><android.view.Display.Mode: int getPhysicalHeight()>
#3.the call statck between class <androidx.core.view.DisplayCompat: boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point)> to <android.view.Display.Mode: int getPhysicalHeight()>has compatibility isssues！
-----------------------------------------
crashApis:283
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 762 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: android.graphics.drawable.Icon getIcon()>has compatibility isssues！
-----------------------------------------
crashApis:284
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 763 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 764 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isTextEntryKey()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isTextEntryKey()>[[-$i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isTextEntryKey()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 765 Potential Issue API: SDKCheck of <android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 28
Good road: <androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)>[[-i0 < 28]]--><android.widget.TextView: android.text.PrecomputedText.Params getTextMetricsParams()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 766 Potential Issue API: SDKCheck of <android.view.View: float getElevation()> is checking!!!
The life time of api is [21,31]
48call roads:
0 Mainhead roads:
48 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.bottomnavigation.BottomNavigationView: void onAttachedToWindow()>[]--><com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View)>[]--><com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>[]--><com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.datepicker.MaterialDatePicker: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-i1 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[-i1 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.bottomappbar.BottomAppBar: void onAttachedToWindow()>[]--><com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>[]--><com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.MaterialToolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.MaterialToolbar: void initBackground(android.content.Context)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayoutStates$State: void <init>(android.content.Context,org.xmlpull.v1.XmlPullParser)>[]--><androidx.constraintlayout.widget.ConstraintSet: void clone(android.content.Context,int)>[]--><androidx.constraintlayout.widget.ConstraintSet: void clone(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout$StateCache: void apply()>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void transitionToState(int)>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void transitionToState(int,int,int)>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void computeCurrentPositions()>[]--><androidx.constraintlayout.motion.widget.MotionController: void setStartCurrentState(android.view.View)>[]--><androidx.constraintlayout.motion.widget.MotionConstrainedPoint: void setState(android.view.View)>[]--><androidx.constraintlayout.motion.widget.MotionConstrainedPoint: void applyParameters(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.dialog.MaterialAlertDialogBuilder: androidx.appcompat.app.AlertDialog create()>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout: void onAttachedToWindow()>[]--><androidx.constraintlayout.motion.widget.MotionScene: void readFallback(androidx.constraintlayout.motion.widget.MotionLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void readFallback(androidx.constraintlayout.widget.ConstraintLayout)>[[-$i2 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-i1 < 21
Good road: <androidx.constraintlayout.widget.Group: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[-i1 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButton: void onAttachedToWindow()>[]--><com.google.android.material.floatingactionbutton.FloatingActionButtonImpl: void onAttachedToWindow()>[]--><com.google.android.material.shape.MaterialShapeUtils: void setParentAbsoluteElevation(android.view.View,com.google.android.material.shape.MaterialShapeDrawable)>[]--><com.google.android.material.internal.ViewUtils: float getParentAbsoluteElevation(android.view.View)>[]--><androidx.core.view.ViewCompat: float getElevation(android.view.View)>[[-$i0 < 21]]--><android.view.View: float getElevation()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateElevation()>[]--><androidx.cardview.widget.CardView: float getCardElevation()>[]--><androidx.cardview.widget.CardViewApi21Impl: float getElevation(androidx.cardview.widget.CardViewDelegate)>[]--><android.view.View: float getElevation()>
#14.the call statck between class <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)> to <android.view.View: float getElevation()>has compatibility isssues！
-----------------------------------------
crashApis:285
containsStatic:true
containsTry:true
15call by main package
-----------------------------------------
#################################################
N 767 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setImportant(boolean)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 768 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: boolean getAutoExpandBubble()>has compatibility isssues！
-----------------------------------------
crashApis:286
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 769 Potential Issue API: SDKCheck of <android.widget.TextView: void setLastBaselineToBottomHeight(int)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 770 Potential Issue API: SDKCheck of <android.media.AudioAttributes: boolean equals(java.lang.Object)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.AudioAttributesImplApi21: boolean equals(java.lang.Object)>[]--><android.media.AudioAttributes: boolean equals(java.lang.Object)>
#1.the call statck between class <androidx.media.AudioAttributesImplApi21: boolean equals(java.lang.Object)> to <android.media.AudioAttributes: boolean equals(java.lang.Object)>has compatibility isssues！
-----------------------------------------
crashApis:287
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 771 Potential Issue API: SDKCheck of <android.widget.TextView: boolean isHorizontallyScrollable()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 772 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)> is checking!!!
The life time of api is [24,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
-i0 < 24
i0 < 19
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24]][[i0 < 19]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[-i0 < 24], [i0 < 19], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setCustomContentView(android.widget.RemoteViews)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 773 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: boolean isAccessibilityFocused()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 774 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()>[]--><android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.content.ClipDescription getDescription()> to <android.view.inputmethod.InputContentInfo: android.content.ClipDescription getDescription()>has compatibility isssues！
-----------------------------------------
crashApis:288
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 775 Potential Issue API: SDKCheck of <android.graphics.Canvas: boolean clipOutRect(android.graphics.Rect)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <com.facebook.stetho.inspector.elements.android.ViewHighlightOverlays$ViewHighlightOverlaysJellybeanMR2$MainHighlightDrawable: void draw(android.graphics.Canvas)>[[$i0 >= 26]]--><android.graphics.Canvas: boolean clipOutRect(android.graphics.Rect)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 776 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)> is checking!!!
The life time of api is [23,31]
38call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
37 Packageshead roads:
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTypefaces(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setMaxLines(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout$OffsetUpdateListener: void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.DateFormatTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity$UserLoginTask: void onPostExecute(com.boardgamegeek.auth.BggCookieJar)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.PersonActivity$onCreate$1: void onChanged(com.boardgamegeek.entities.RefreshableResource)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameCollectionItemActivity: void access$safelySetTitle(com.boardgamegeek.ui.GameCollectionItemActivity)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void safelySetTitle()>[]--><com.boardgamegeek.ui.HeroActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.dialog.AbstractEditTextDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.NewPlayAddTeamColorDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter()>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.dialog.EditUsernameDialogFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$2: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setTextSizeInterpolator(android.animation.TimeInterpolator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)>[]--><com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$4: void onAnimationUpdate(android.animation.ValueAnimator)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23]][[i0 < 29]][[try]]
-i0 < 23
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.datepicker.RangeDateSelector: void access$100(com.google.android.material.datepicker.RangeDateSelector,com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void updateIfValidTextProposal(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout,com.google.android.material.datepicker.OnSelectionChangedListener)>[]--><com.google.android.material.datepicker.RangeDateSelector: void clearInvalidRange(com.google.android.material.textfield.TextInputLayout,com.google.android.material.textfield.TextInputLayout)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextAppearance(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.GameActivity: void access$changeName(com.boardgamegeek.ui.GameActivity,java.lang.String)>[]--><com.boardgamegeek.ui.GameActivity: void changeName(java.lang.String)>[]--><com.boardgamegeek.ui.HeroTabActivity: void safelySetTitle(java.lang.String)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$attemptLogin(com.boardgamegeek.ui.LoginActivity)>[]--><com.boardgamegeek.ui.LoginActivity: void attemptLogin()>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$TEXT_INPUT_LAYOUT$1: org.jetbrains.anko.design._TextInputLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.textfield.TextInputLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void setHelperTextEnabled(boolean)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideHelperText()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateCounter(int)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout$1: void afterTextChanged(android.text.Editable)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onRestoreInstanceState(android.os.Parcelable)>[]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[[try]]--><com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)>[]--><com.google.android.material.textfield.IndicatorViewController: void hideError()>[]--><com.google.android.material.textfield.IndicatorViewController: void updateCaptionViewsVisibility(int,int,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setCollapsedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void setExpandedTitleTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void drawableStateChanged()>[]--><com.google.android.material.internal.CollapsingTextHelper: boolean setState(int[])>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void onLayout(boolean,int,int,int,int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpandedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void updateLabelState(boolean,boolean)>[]--><com.google.android.material.textfield.TextInputLayout: void collapseHint(boolean)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setExpansionFraction(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateCurrentOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateOffsets(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0]][[-$yysi0 < 16]][[$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]
-$z0 == 0
-$yysi0 < 16
$yysi0 < 19
try
Good road with try: <com.google.android.material.appbar.CollapsingToolbarLayout: void onLayout(boolean,int,int,int,int)>[[-$z0 == 0], [-$yysi0 < 16], [$yysi0 < 19]]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setTitle(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setText(java.lang.CharSequence)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.internal.CollapsingTextHelper$1: void apply(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTypeface(android.graphics.Typeface)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
try
Good road with try: <com.google.android.material.textfield.TextInputLayout: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>[]--><com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)>[]--><com.google.android.material.internal.CollapsingTextHelper: void setCollapsedTextGravity(int)>[]--><com.google.android.material.internal.CollapsingTextHelper: void recalculate()>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateBaseOffsets()>[]--><com.google.android.material.internal.CollapsingTextHelper: void setInterpolatedTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: void calculateUsingTextSize(float)>[]--><com.google.android.material.internal.CollapsingTextHelper: android.text.StaticLayout createStaticLayout(int,float,boolean)>[[try]]--><com.google.android.material.internal.StaticLayoutBuilderCompat: android.text.StaticLayout build()>[[-i1 < 23]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setTextDirection(android.text.TextDirectionHeuristic)>
One road protect good!
containsStatic:true
containsTry:true
38call by main package
-----------------------------------------
#################################################
N 777 Potential Issue API: SDKCheck of <android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 778 Potential Issue API: SDKCheck of <android.os.Bundle: void putSize(java.lang.String,android.util.Size)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.LoginActivity$Companion: android.os.Bundle createIntentBundle(android.content.Context,android.accounts.AccountAuthenticatorResponse,java.lang.String)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.LoginActivity: void access$createAccount(com.boardgamegeek.ui.LoginActivity,com.boardgamegeek.auth.BggCookieJar)>[]--><com.boardgamegeek.ui.LoginActivity: void createAccount(com.boardgamegeek.auth.BggCookieJar)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForPlayer()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.CollectionFragment: void addFilter(com.boardgamegeek.filterer.CollectionFilterer)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18], [-$i4 < 21]]
###Multi invoking in one method, need manual check!!!)>[[$i4 < 18]][[-$i4 < 21]]
$i4 < 18
-$i4 < 21
Good road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[[$i4 < 18], [-$i4 < 21]]--><android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
One road protect good!
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 779 Potential Issue API: SDKCheck of <android.content.res.Resources.Theme: void rebase()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)>[]--><android.content.res.Resources.Theme: void rebase()>
#1.the call statck between class <androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)> to <android.content.res.Resources.Theme: void rebase()>has compatibility isssues！
-----------------------------------------
crashApis:289
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 780 Potential Issue API: SDKCheck of <android.content.Context: java.io.File getCodeCacheDir()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.content.ContextCompat: java.io.File getCodeCacheDir(android.content.Context)>[[-i0 < 21]]--><android.content.Context: java.io.File getCodeCacheDir()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 781 Potential Issue API: SDKCheck of <android.view.DragAndDropPermissions: void release()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.DragAndDropPermissionsCompat: void release()>[[-$i0 < 24]]--><android.view.DragAndDropPermissions: void release()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 782 Potential Issue API: SDKCheck of <android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i1 <= 21
Good road: <com.google.android.material.canvas.CanvasCompat: int saveLayerAlpha(android.graphics.Canvas,android.graphics.RectF,int)>[[-$i1 <= 21]]--><android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.transition.platform.TransitionUtils: void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.platform.TransitionUtils$CanvasOperation)>[]--><com.google.android.material.transition.platform.TransitionUtils: int saveLayerAlphaCompat(android.graphics.Canvas,android.graphics.Rect,int)>[[-$i1 < 21]]--><android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
One road protect good!
-$i1 < 21
Good road: <com.google.android.material.transition.TransitionUtils: void transform(android.graphics.Canvas,android.graphics.Rect,float,float,float,int,com.google.android.material.transition.TransitionUtils$CanvasOperation)>[]--><com.google.android.material.transition.TransitionUtils: int saveLayerAlphaCompat(android.graphics.Canvas,android.graphics.Rect,int)>[[-$i1 < 21]]--><android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 783 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: java.util.List getDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
4982call roads:
1 Mainhead roads:
4981 Packageshead roads:
Roads number exceed, exit!4981
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 784 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
9call roads:
1 Mainhead roads:
$i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.service.CancelReceiver dummyMainMethod_com_boardgamegeek_service_CancelReceiver(android.content.Intent)>[]--><com.boardgamegeek.service.CancelReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
8 Packageshead roads:
$i0 < 23
Good road: <com.boardgamegeek.tasks.sync.SyncTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.sync.SyncTask: java.lang.String doInBackground(java.lang.Void[])>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
$i0 < 23
Good road: <com.boardgamegeek.livedata.RefreshableResourceLoader: void access$refresh(com.boardgamegeek.livedata.RefreshableResourceLoader,androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.livedata.RefreshableResourceLoader: void refresh(androidx.lifecycle.LiveData)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
i0 < 16
Good road: <androidx.core.net.ConnectivityManagerCompat: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>[[i0 < 16]]--><android.net.NetworkInfo: int getType()>
One road protect good!
$i0 < 23
Good road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><androidx.lifecycle.MediatorLiveData$Source: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
$i0 < 23
Good road: <androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)>[]--><com.boardgamegeek.livedata.NetworkLoader$1: void onChanged(java.lang.Object)>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOffline(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <com.squareup.picasso.Dispatcher$DispatcherHandler: void handleMessage(android.os.Message)>[]--><com.squareup.picasso.Dispatcher: void performNetworkStateChange(android.net.NetworkInfo)>[]--><com.squareup.picasso.PicassoExecutorService: void adjustThreadCount(android.net.NetworkInfo)>[]--><android.net.NetworkInfo: int getType()>
#5.the call statck between class <com.squareup.picasso.Dispatcher$DispatcherHandler: void handleMessage(android.os.Message)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: void lambda$schedule$1(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.TransportScheduleCallback,com.google.android.datatransport.runtime.EventInternal)>[[try]]--><com.google.android.datatransport.cct.zzc: com.google.android.datatransport.runtime.EventInternal decorate(com.google.android.datatransport.runtime.EventInternal)>[]--><android.net.NetworkInfo: int getType()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>[]--><android.net.NetworkInfo: int getType()>
#7.the call statck between class <androidx.core.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
$i0 < 23
Good road: <com.boardgamegeek.service.SyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>[]--><com.boardgamegeek.service.SyncAdapter: boolean shouldContinueSync()>[]--><com.boardgamegeek.extensions.NetworkUtils: boolean isOnWiFi(android.content.Context)>[[$i0 < 23]]--><android.net.NetworkInfo: int getType()>
One road protect good!
crashApis:290
containsStatic:false
containsTry:true
9call by main package
-----------------------------------------
#################################################
N 785 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 786 Potential Issue API: SDKCheck of <android.os.UserManager: boolean isUserUnlocked()> is checking!!!
The life time of api is [24,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
try
Good road with try: <com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)>[[try]]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)>[]--><com.google.firebase.FirebaseApp: void initializeAllApis()>[]--><androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$yysi0 < 24
try
Good road with try: <com.google.android.gms.internal.measurement.zzcr: boolean zza(android.content.Context)>[[-$yysi0 < 24]]--><com.google.android.gms.internal.measurement.zzcr: boolean zzc(android.content.Context)>[[try]]--><com.google.android.gms.internal.measurement.zzcr: boolean zzb(android.content.Context)>[[try]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$i0 < 24
Good road: <com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context,com.google.firebase.FirebaseOptions)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)>[]--><com.google.firebase.FirebaseApp: void initializeAllApis()>[]--><androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$i0 < 24
Good road: <com.google.firebase.FirebaseApp: void access$400(com.google.firebase.FirebaseApp)>[]--><com.google.firebase.FirebaseApp: void initializeAllApis()>[]--><androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
try
Good road with try: <com.google.firebase.provider.FirebaseInitProvider: boolean onCreate()>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context)>[[try]]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)>[]--><com.google.firebase.FirebaseApp: void initializeAllApis()>[]--><androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
-$i0 < 24
Good road: <com.google.firebase.ktx.FirebaseKt: com.google.firebase.FirebaseApp initialize(com.google.firebase.ktx.Firebase,android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)>[]--><com.google.firebase.FirebaseApp: com.google.firebase.FirebaseApp initializeApp(android.content.Context,com.google.firebase.FirebaseOptions,java.lang.String)>[]--><com.google.firebase.FirebaseApp: void initializeAllApis()>[]--><androidx.core.os.UserManagerCompat: boolean isUserUnlocked(android.content.Context)>[[-$i0 < 24]]--><android.os.UserManager: boolean isUserUnlocked()>
One road protect good!
containsStatic:true
containsTry:true
7call by main package
-----------------------------------------
#################################################
N 787 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: void <init>(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 788 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannelGroup(android.app.NotificationChannelGroup)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 789 Potential Issue API: SDKCheck of <android.view.View: void setImportantForAutofill(int)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 26
Good road: <androidx.viewpager2.widget.ViewPager2$RecyclerViewImpl: void <init>(androidx.viewpager2.widget.ViewPager2,android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
-$i1 < 26
Good road: <com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.internal.NavigationMenuView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><androidx.recyclerview.widget.RecyclerView: void initAutofill()>[]--><androidx.core.view.ViewCompat: void setImportantForAutofill(android.view.View,int)>[[-$i1 < 26]]--><android.view.View: void setImportantForAutofill(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 790 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
12call roads:
0 Mainhead roads:
12 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloTintList(android.content.res.ColorStateList)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#1.the call statck between class <com.google.android.material.slider.BaseSlider: void <init>(android.content.Context)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.slider.Slider: void setHaloTintList(android.content.res.ColorStateList)>[]--><com.google.android.material.slider.BaseSlider: void setHaloTintList(android.content.res.ColorStateList)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#2.the call statck between class <com.google.android.material.slider.Slider: void setHaloTintList(android.content.res.ColorStateList)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$z0 == 0
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.button.MaterialButton: void setRippleColorResource(int)>[]--><com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.button.MaterialButtonHelper: void setRippleColor(android.content.res.ColorStateList)>[[-$z0 == 0]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#3.the call statck between class <com.google.android.material.button.MaterialButton: void setRippleColorResource(int)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.slider.RangeSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void processAttributes(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.slider.BaseSlider: void setHaloTintList(android.content.res.ColorStateList)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#6.the call statck between class <com.google.android.material.slider.RangeSlider: void <init>(android.content.Context)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.card.MaterialCardViewHelper: void setRippleColor(android.content.res.ColorStateList)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
-$yysi0 < 21
Good road: <com.google.android.material.transformation.TransformationChildCard: void <init>(android.content.Context)>[]--><com.google.android.material.transformation.TransformationChildCard: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.circularreveal.cardview.CircularRevealCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setRippleColor(android.content.res.ColorStateList)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
#9.the call statck between class <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void setRippleColor(android.content.res.ColorStateList)> to <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>has compatibility isssues！
-----------------------------------------
-$yysi0 < 21
Good road: <com.google.android.material.card.MaterialCardView: void <init>(android.content.Context)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.card.MaterialCardView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.card.MaterialCardViewHelper: void loadFromAttributes(android.content.res.TypedArray)>[]--><com.google.android.material.card.MaterialCardViewHelper: void updateRippleColor()>[[-$yysi0 < 21]]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
crashApis:291
containsStatic:true
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 791 Potential Issue API: SDKCheck of <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)>[]--><android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>
#1.the call statck between class <androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl: void add(android.app.Activity)> to <android.view.Window: void addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener,android.os.Handler)>has compatibility isssues！
-----------------------------------------
crashApis:292
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 792 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 793 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i2 < 25
Good road: <com.boardgamegeek.tasks.SelectCollectionViewTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><com.boardgamegeek.tasks.SelectCollectionViewTask: java.lang.Void doInBackground(java.lang.Void[])>[[-$i2 < 25]]--><com.boardgamegeek.tasks.SelectCollectionViewTask: void setShortcuts()>[]--><android.content.pm.ShortcutManager: boolean setDynamicShortcuts(java.util.List)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 794 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setImportantForAccessibility(boolean)>[[-$i0 < 24]]--><android.view.accessibility.AccessibilityNodeInfo: void setImportantForAccessibility(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 795 Potential Issue API: SDKCheck of <android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>[[-i0 < 23]]--><android.hardware.fingerprint.FingerprintManager: boolean hasEnrolledFingerprints()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 796 Potential Issue API: SDKCheck of <android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23]][[i0 < 29]][[try]]
-i0 < 23
i0 < 29
try
Good road with try: <androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params)>[[-i0 < 23], [i0 < 29], [try]]--><android.text.StaticLayout.Builder: android.text.StaticLayout.Builder setHyphenationFrequency(int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 797 Potential Issue API: SDKCheck of <android.graphics.Paint: android.os.LocaleList getTextLocales()> is checking!!!
The life time of api is [24,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24]][[$i0 < 21]]
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()>[[-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23]][[-$i0 < 24]][[$i0 < 21]]
$i0 < 23
-$i0 < 24
$i0 < 21
Good road: <androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)>[[$i0 < 23], [-$i0 < 24], [$i0 < 21]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
-$i0 < 24
Good road: <androidx.core.text.PrecomputedTextCompat$Params: int hashCode()>[[-$i0 < 24]]--><android.graphics.Paint: android.os.LocaleList getTextLocales()>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 798 Potential Issue API: SDKCheck of <android.app.Person: java.lang.String getKey()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: java.lang.String getKey()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 799 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)> is checking!!!
The life time of api is [23,31]
12call roads:
1 Mainhead roads:
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20]][[-i1 < 23]]
-i0 < 20
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 20], [-i1 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
11 Packageshead roads:
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
-i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 23]]--><android.app.Notification.Action.Builder: void <init>(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 800 Potential Issue API: SDKCheck of <android.util.Half: android.util.Half valueOf(float)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.util.HalfKt: android.util.Half toHalf(float)>[]--><android.util.Half: android.util.Half valueOf(float)>
#1.the call statck between class <androidx.core.util.HalfKt: android.util.Half toHalf(float)> to <android.util.Half: android.util.Half valueOf(float)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.util.HalfKt: android.util.Half toHalf(double)>[]--><android.util.Half: android.util.Half valueOf(float)>
#2.the call statck between class <androidx.core.util.HalfKt: android.util.Half toHalf(double)> to <android.util.Half: android.util.Half valueOf(float)>has compatibility isssues！
-----------------------------------------
crashApis:293
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 801 Potential Issue API: SDKCheck of <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()>[]--><android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>
#1.the call statck between class <androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1: void onSharedElementsReady()> to <android.app.SharedElementCallback.OnSharedElementsReadyListener: void onSharedElementsReady()>has compatibility isssues！
-----------------------------------------
crashApis:294
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 802 Potential Issue API: SDKCheck of <android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()>
#1.the call statck between class <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)> to <android.app.Notification.BubbleMetadata: boolean isNotificationSuppressed()>has compatibility isssues！
-----------------------------------------
crashApis:295
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 803 Potential Issue API: SDKCheck of <android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)> is checking!!!
The life time of api is [5,29]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 30 31 
Error road: <com.squareup.picasso.MediaStoreRequestHandler: com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int)>[]--><android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
#1.the call statck between class <com.squareup.picasso.MediaStoreRequestHandler: com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int)> to <android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>has compatibility isssues！
-----------------------------------------
crashApis:296
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 804 Potential Issue API: SDKCheck of <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 
Error road: <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()>[]--><android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>
#1.the call statck between class <androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl: android.net.Uri getContentUri()> to <android.view.inputmethod.InputContentInfo: android.net.Uri getContentUri()>has compatibility isssues！
-----------------------------------------
crashApis:297
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 805 Potential Issue API: SDKCheck of <android.os.Trace: void beginAsyncSection(java.lang.String,int)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i1 < 29
Good road: <androidx.core.os.TraceCompat: void beginAsyncSection(java.lang.String,int)>[[-i1 < 29]]--><android.os.Trace: void beginAsyncSection(java.lang.String,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 806 Potential Issue API: SDKCheck of <android.os.LocaleList: boolean isEmpty()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.os.LocaleListCompat: boolean isEmpty()>[]--><androidx.core.os.LocaleListPlatformWrapper: boolean isEmpty()>[]--><android.os.LocaleList: boolean isEmpty()>
#1.the call statck between class <androidx.core.os.LocaleListCompat: boolean isEmpty()> to <android.os.LocaleList: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
crashApis:298
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 807 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo getTouchDelegateInfo()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 29
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo()>[[-i0 < 29]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.TouchDelegateInfo getTouchDelegateInfo()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 808 Potential Issue API: SDKCheck of <android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)> is checking!!!
The life time of api is [24,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i1 < 23], [-i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i1 < 23]][[-i0 < 20]]
-i0 < 24
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i1 < 23], [-i0 < 20]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
-i0 < 24
i0 < 23
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24]][[i0 < 23]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[-i0 < 24], [i0 < 23]]--><android.app.Notification.Action.Builder: android.app.Notification.Action.Builder setAllowGeneratedReplies(boolean)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 809 Potential Issue API: SDKCheck of <android.view.View: void setTranslationZ(float)> is checking!!!
The life time of api is [21,31]
24call roads:
0 Mainhead roads:
24 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: void onMeasure(int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayout: boolean updateHierarchy()>[]--><androidx.constraintlayout.widget.ConstraintLayout: void setChildrenConstraints()>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintSet: void applyToWithoutCustom(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.ChangeTransform$Transforms: void restore(android.view.View)>[]--><androidx.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>[]--><androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.helper.widget.Layer: void setVisibility(int)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)>[]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 != 21
Good road: <com.google.android.material.floatingactionbutton.FloatingActionButtonImplLollipop: void onDrawableStateChanged(int[])>[[-$i0 != 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout$StateCache: void apply()>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void setState(int,int,int)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 < 21
Good road: <androidx.transition.ChangeTransform$3: void onAnimationResume(android.animation.Animator)>[]--><androidx.transition.ChangeTransform: void setIdentityTransforms(android.view.View)>[]--><androidx.transition.ChangeTransform: void setTransforms(android.view.View,float,float,float,float,float,float,float,float)>[]--><androidx.core.view.ViewCompat: void setTranslationZ(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.Group: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.MotionLayout: void onAttachedToWindow()>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 < 21
Good road: <androidx.constraintlayout.widget.ConstraintProperties: androidx.constraintlayout.widget.ConstraintProperties translationZ(float)>[[-$i0 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.Group: void onAttachedToWindow()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.motion.widget.DesignTool: void setAttributes(int,java.lang.String,java.lang.Object,java.lang.Object)>[]--><androidx.constraintlayout.motion.widget.MotionLayout: void updateState(int,androidx.constraintlayout.widget.ConstraintSet)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17]][[-$i2 < 21]]
-$i2 < 17
-$i2 < 21
Good road: <androidx.constraintlayout.widget.ConstraintLayout: void setState(int,int,int)>[]--><androidx.constraintlayout.widget.ConstraintLayoutStates: void updateConstraints(int,float,float)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyTo(androidx.constraintlayout.widget.ConstraintLayout)>[]--><androidx.constraintlayout.widget.ConstraintSet: void applyToInternal(androidx.constraintlayout.widget.ConstraintLayout,boolean)>[[-$i2 < 17], [-$i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 < 21
Good road: <androidx.constraintlayout.motion.widget.KeyCycleOscillator$TranslationZset: void setProperty(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.widget.VirtualLayout: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!<androidx.constraintlayout.widget.VirtualLayout: void onAttachedToWindow()>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.VirtualLayout: void onAttachedToWindow()>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21]][[-i2 < 21]]
i1 < 21
-i2 < 21
Good road: <androidx.constraintlayout.widget.Group: void setVisibility(int)>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures()>[]--><androidx.constraintlayout.widget.ConstraintHelper: void applyLayoutFeatures(androidx.constraintlayout.widget.ConstraintLayout)>[[i1 < 21], [-i2 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i0 < 21
Good road: <androidx.constraintlayout.motion.widget.SplineSet$TranslationZset: void setProperty(android.view.View,float)>[[-$i0 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
-$i1 < 21
Good road: <androidx.constraintlayout.motion.widget.TimeCycleSplineSet$TranslationZset: boolean setProperty(android.view.View,float,long,androidx.constraintlayout.motion.widget.KeyCache)>[[-$i1 < 21]]--><android.view.View: void setTranslationZ(float)>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)>[]--><android.view.View: void setTranslationZ(float)>
#23.the call statck between class <com.google.android.material.transformation.FabTransformationBehavior: void createElevationAnimation(android.view.View,android.view.View,boolean,boolean,com.google.android.material.transformation.FabTransformationBehavior$FabTransformationSpec,java.util.List,java.util.List)> to <android.view.View: void setTranslationZ(float)>has compatibility isssues！
-----------------------------------------
crashApis:299
containsStatic:false
containsTry:false
24call by main package
-----------------------------------------
#################################################
N 810 Potential Issue API: SDKCheck of <android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri)>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>
One road protect good!
-$i0 < 21
Good road: <androidx.media.AudioAttributesCompat$Builder: androidx.media.AudioAttributesCompat build()>[[-$i0 < 21]]--><android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 811 Potential Issue API: SDKCheck of <android.content.res.TypedArray: int getType(int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)>[]--><androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>[[try]]--><androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>[[-i1 < 21]]--><android.content.res.TypedArray: int getType(int)>
One road protect good!
try
Good road with try: <androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)>[]--><androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)>[]--><androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)>[]--><androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)>[[try]]--><androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)>[[-i1 < 21]]--><android.content.res.TypedArray: int getType(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 812 Potential Issue API: SDKCheck of <android.app.Notification.DecoratedMediaCustomViewStyle: void <init>()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 24
Good road: <androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-$i0 < 24]]--><android.app.Notification.DecoratedMediaCustomViewStyle: void <init>()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 813 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
5022call roads:
1 Mainhead roads:
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
-$i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.core.content.ContextCompat: int getColor(android.content.Context,int)>[[-$i1 < 23]]--><android.content.Context: int getColor(int)>
One road protect good!
5021 Packageshead roads:
Roads number exceed, exit!5021
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 814 Potential Issue API: SDKCheck of <android.view.WindowInsets: int hashCode()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()>[]--><android.view.WindowInsets: int hashCode()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()> to <android.view.WindowInsets: int hashCode()>has compatibility isssues！
-----------------------------------------
crashApis:300
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 815 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
i0 < 19
i0 < 29
i0 < 16
i0 >= 21
i0 < 24
i0 < 20
i0 < 21
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[i0 < 29]][[i0 < 16]][[i0 >= 21]][[i0 < 24]][[i0 < 20]][[i0 < 21]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [i0 < 29], [i0 < 16], [i0 >= 21], [i0 < 24], [i0 < 20], [i0 < 21]]--><android.app.Notification.Builder: android.app.Notification.Builder setGroupAlertBehavior(int)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 816 Potential Issue API: SDKCheck of <android.view.View: boolean dispatchNestedFling(float,float,boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewCompat: boolean dispatchNestedFling(android.view.View,float,float,boolean)>[[-$i0 < 21]]--><android.view.View: boolean dispatchNestedFling(float,float,boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 817 Potential Issue API: SDKCheck of <android.app.NotificationChannel: java.lang.CharSequence getName()> is checking!!!
The life time of api is [26,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zab)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zaae: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationChannel: java.lang.CharSequence getName()>
One road protect good!
containsStatic:true
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 818 Potential Issue API: SDKCheck of <android.view.Menu: void setGroupDividerEnabled(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 28
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)>[[], [-$i0 < 28]]--><android.view.Menu: void setGroupDividerEnabled(boolean)>
#1.the call statck between class <androidx.core.view.MenuCompat: void setGroupDividerEnabled(android.view.Menu,boolean)> to <android.view.Menu: void setGroupDividerEnabled(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:301
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 819 Potential Issue API: SDKCheck of <android.view.ViewGroup: void setTransitionGroup(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.ViewGroupCompat: void setTransitionGroup(android.view.ViewGroup,boolean)>[[-$i0 < 21]]--><android.view.ViewGroup: void setTransitionGroup(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 820 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
i0 < 19
-i0 < 21
i0 < 26
i0 < 16
i0 >= 21
i0 < 20
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19]][[-i0 < 21]][[i0 < 26]][[i0 < 16]][[i0 >= 21]][[i0 < 20]]
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 19], [-i0 < 21], [i0 < 26], [i0 < 16], [i0 >= 21], [i0 < 20]]--><android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
12call by main package
-----------------------------------------
#################################################
N 821 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setHeading(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 822 Potential Issue API: SDKCheck of <android.app.job.JobInfo: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
#1.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer: java.lang.Object lambda$ensureContextsScheduled$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkInitializer)> to <android.app.job.JobInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: void lambda$upload$1(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int,java.lang.Runnable)>[[try]]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
#3.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$logAndUpdateState$3(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.backends.BackendResponse,java.lang.Iterable,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
#4.the call statck between class <com.google.android.datatransport.runtime.scheduling.DefaultScheduler: java.lang.Object lambda$schedule$0(com.google.android.datatransport.runtime.scheduling.DefaultScheduler,com.google.android.datatransport.runtime.TransportContext,com.google.android.datatransport.runtime.EventInternal)> to <android.app.job.JobInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: void schedule(com.google.android.datatransport.runtime.TransportContext,int)>[]--><com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoScheduler: boolean isJobServiceOn(android.app.job.JobScheduler,int,int)>[]--><android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
#5.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader: java.lang.Object lambda$upload$0(com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader,com.google.android.datatransport.runtime.TransportContext,int)> to <android.app.job.JobInfo: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:302
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 823 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)> is checking!!!
The life time of api is [22,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 22
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setTraversalBefore(android.view.View,int)>[[-$i1 < 22]]--><android.view.accessibility.AccessibilityNodeInfo: void setTraversalBefore(android.view.View,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 824 Potential Issue API: SDKCheck of <android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-i0 < 29
Good road: <com.google.android.material.snackbar.BaseTransientBottomBar$6: void onViewAttachedToWindow(android.view.View)>[[-i0 < 29]]--><android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
One road protect good!
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()>[]--><android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>
#2.the call statck between class <androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()> to <android.view.WindowInsets: android.graphics.Insets getMandatorySystemGestureInsets()>has compatibility isssues！
-----------------------------------------
crashApis:303
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 825 Potential Issue API: SDKCheck of <android.widget.AbsListView: void setSelectionFromTop(int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
i1 < 19
Good road: <androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)>[]--><androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)>[[i1 < 19]]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 826 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putIntArray(java.lang.String,int[])> is checking!!!
The life time of api is [21,31]
33call roads:
0 Mainhead roads:
33 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#1.the call statck between class <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#2.the call statck between class <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#3.the call statck between class <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#4.the call statck between class <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#5.the call statck between class <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#6.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#7.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#8.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#9.the call statck between class <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
#10.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForLocation()> to <android.os.BaseBundle: void putIntArray(java.lang.String,int[])>has compatibility isssues！
-----------------------------------------
crashApis:304
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 827 Potential Issue API: SDKCheck of <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)> is checking!!!
The life time of api is [21,31]
14call roads:
1 Mainhead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23]][[-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]
i1 < 23
-i0 < 20
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatBuilder: void addAction(androidx.core.app.NotificationCompat$Action)>[[i1 < 23], [-i0 < 20]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
One road protect good!
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
13 Packageshead roads:
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#1.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#2.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#3.the call statck between class <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#4.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#5.the call statck between class <com.boardgamegeek.ui.PlayFragment: void onResume()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#6.the call statck between class <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#7.the call statck between class <androidx.core.app.NotificationCompat$CarExtender: android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#8.the call statck between class <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#9.the call statck between class <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
i0 < 23
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.app.RemoteInput: android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[])>[]--><androidx.core.app.RemoteInput: android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput)>[]--><android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
#10.the call statck between class <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)> to <android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:305
crashApisInMain:38
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 828 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: android.os.Bundle getBrowserRootHints()>[]--><androidx.media.MediaBrowserServiceCompatApi26: android.os.Bundle getBrowserRootHints(java.lang.Object)>[]--><android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26: android.os.Bundle getBrowserRootHints()> to <android.service.media.MediaBrowserService: android.os.Bundle getBrowserRootHints()>has compatibility isssues！
-----------------------------------------
crashApis:306
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 829 Potential Issue API: SDKCheck of <android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.app.AppOpsManagerCompat: int noteProxyOp(android.content.Context,java.lang.String,java.lang.String)>[[-i0 < 23]]--><android.app.AppOpsManager: int noteProxyOp(java.lang.String,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 830 Potential Issue API: SDKCheck of <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.ColorKt: android.graphics.ColorSpace getColorSpace(long)>[]--><android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>
#1.the call statck between class <androidx.core.graphics.ColorKt: android.graphics.ColorSpace getColorSpace(long)> to <android.graphics.Color: android.graphics.ColorSpace colorSpace(long)>has compatibility isssues！
-----------------------------------------
crashApis:307
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 831 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)> to <android.view.WindowInsets.Builder: android.view.WindowInsets.Builder setTappableElementInsets(android.graphics.Insets)>has compatibility isssues！
-----------------------------------------
crashApis:308
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 832 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScreenReaderFocusable()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: boolean isScreenReaderFocusable()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 833 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getTooltipText()>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getTooltipText()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 834 Potential Issue API: SDKCheck of <android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectCleartextNetwork()> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.BggApplication: void enableStrictMode()>[[-$i0 < 23], [$i0 < 18]]
###Multi invoking in one method, need manual check!!!--><com.boardgamegeek.BggApplication: void enableStrictMode()>[[-$i0 < 23]][[$i0 < 18]]
-$i0 < 23
$i0 < 18
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><com.boardgamegeek.BggApplication: void onCreate()>[]--><com.boardgamegeek.BggApplication: void enableStrictMode()>[[-$i0 < 23], [$i0 < 18]]--><android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectCleartextNetwork()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 835 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>[]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)>[[-$i0 < 28]]--><android.view.accessibility.AccessibilityNodeInfo: void setPaneTitle(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 836 Potential Issue API: SDKCheck of <android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)>[]--><androidx.core.app.ActivityCompat: void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback)>[[-i0 < 21]]--><android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 837 Potential Issue API: SDKCheck of <android.widget.ThemedSpinnerAdapter: void setDropDownViewTheme(android.content.res.Resources.Theme)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 838 Potential Issue API: SDKCheck of <android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 27
Good road: <androidx.core.widget.TextViewCompat: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)>[[-$i4 < 27]]--><android.widget.TextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 839 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 840 Potential Issue API: SDKCheck of <android.os.PersistableBundle: void <init>(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.core.os.PersistableBundleKt: android.os.PersistableBundle persistableBundleOf(kotlin.Pair[])>[]--><android.os.PersistableBundle: void <init>(int)>
#1.the call statck between class <androidx.core.os.PersistableBundleKt: android.os.PersistableBundle persistableBundleOf(kotlin.Pair[])> to <android.os.PersistableBundle: void <init>(int)>has compatibility isssues！
-----------------------------------------
crashApis:309
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 841 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person.Builder setName(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 842 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])> is checking!!!
The life time of api is [21,31]
47call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 < 16]][[-i0 < 19]]
i0 < 26
i0 < 16
-i0 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 < 16]][[-i0 < 19]]
i0 < 26
i0 < 16
-i0 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
One road protect good!
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 < 16]][[-i0 < 19]]
i0 < 26
i0 < 16
-i0 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
One road protect good!
46 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#1.the call statck between class <com.boardgamegeek.ui.GameCollectionItemFragment$Companion: com.boardgamegeek.ui.GameCollectionItemFragment newInstance(int,int)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#2.the call statck between class <com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment$Companion: com.boardgamegeek.ui.dialog.EditLocationNameDialogFragment newInstance(java.lang.String)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#3.the call statck between class <com.boardgamegeek.ui.GameColorsFragment$Companion: com.boardgamegeek.ui.GameColorsFragment newInstance(int)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#4.the call statck between class <com.boardgamegeek.ui.ForumsFragment$Companion: com.boardgamegeek.ui.ForumsFragment newInstanceForDesigner(int,java.lang.String)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#5.the call statck between class <com.boardgamegeek.ui.dialog.TeamPickerDialogFragment$Companion: void launch(androidx.fragment.app.FragmentActivity,int,java.lang.String,java.lang.String)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#6.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForBuddy()> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]
###Multi invoking in one method, need manual check!!!--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26]][[i0 < 16]][[-i0 < 19]]
i0 < 26
i0 < 16
-i0 < 19
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.boardgamegeek.util.NotificationUtils$1: void onFailedIconLoad()>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[[i0 < 26], [i0 < 16], [-i0 < 19]]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
One road protect good!
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#8.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstance()> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>[]--><androidx.core.os.BundleKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#9.the call statck between class <com.boardgamegeek.ui.PlaysFragment$Companion: com.boardgamegeek.ui.PlaysFragment newInstanceForGame(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)>[]--><org.jetbrains.anko.support.v4.SupportKt: androidx.fragment.app.Fragment withArguments(androidx.fragment.app.Fragment,kotlin.Pair[])>[]--><org.jetbrains.anko.ContextUtilsKt: android.os.Bundle bundleOf(kotlin.Pair[])>[]--><android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
#10.the call statck between class <com.boardgamegeek.ui.PollFragment$Companion: void launch(androidx.fragment.app.Fragment,int)> to <android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>has compatibility isssues！
-----------------------------------------
crashApis:310
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 843 Potential Issue API: SDKCheck of <android.app.Person: boolean isBot()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><android.app.Person: boolean isBot()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 844 Potential Issue API: SDKCheck of <android.view.View: void setTransitionVisibility(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.transition.ViewUtilsApi29: void setTransitionVisibility(android.view.View,int)>[]--><android.view.View: void setTransitionVisibility(int)>
#1.the call statck between class <androidx.transition.ViewUtilsApi29: void setTransitionVisibility(android.view.View,int)> to <android.view.View: void setTransitionVisibility(int)>has compatibility isssues！
-----------------------------------------
###Multi invoking in one method, need manual check!!!<androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try], [i1 != 28]]
###Multi invoking in one method, need manual check!!!<androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try]][[i1 != 28]]
try
Good road with try: <androidx.transition.ViewUtilsApi23: void setTransitionVisibility(android.view.View,int)>[[try], [i1 != 28]]--><android.view.View: void setTransitionVisibility(int)>
One road protect good!
crashApis:311
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 845 Potential Issue API: SDKCheck of <android.os.BaseBundle: int size()> is checking!!!
The life time of api is [21,31]
4984call roads:
1 Mainhead roads:
4983 Packageshead roads:
Roads number exceed, exit!4983
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 846 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 26
Good road: <androidx.media.session.MediaButtonReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><androidx.media.session.MediaButtonReceiver: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <leakcanary.internal.HeapAnalyzerService$Companion: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.content.ContextCompat: void startForegroundService(android.content.Context,android.content.Intent)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 847 Potential Issue API: SDKCheck of <android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.Font.Builder: android.graphics.fonts.Font.Builder setTtcIndex(int)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 848 Potential Issue API: SDKCheck of <android.widget.PopupWindow: void setEnterTransition(android.transition.Transition)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 849 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
85call roads:
0 Mainhead roads:
85 Packageshead roads:
containsStatic:true
containsTry:true
86call by main package
-----------------------------------------
#################################################
N 850 Potential Issue API: SDKCheck of <android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[i0 < 28]]
-i0 < 24
i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [i0 < 28]]--><android.app.Notification.MessagingStyle: android.app.Notification.MessagingStyle addMessage(android.app.Notification.MessagingStyle.Message)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 851 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: boolean isInstantApp(java.lang.String)> is checking!!!
The life time of api is [26,31]
4981call roads:
1 Mainhead roads:
4980 Packageshead roads:
Roads number exceed, exit!4980
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 852 Potential Issue API: SDKCheck of <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 < 26
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)>[[], [-$i0 < 26]]--><android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>
#1.the call statck between class <androidx.core.view.MenuItemCompat: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)> to <android.view.MenuItem: android.content.res.ColorStateList getIconTintList()>has compatibility isssues！
-----------------------------------------
crashApis:312
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 853 Potential Issue API: SDKCheck of <android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i4 < 21
Good road: <androidx.core.view.ViewCompat: void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[])>[]--><androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int)>[]--><androidx.core.view.ViewCompat: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])>[[-$i4 < 21]]--><android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 854 Potential Issue API: SDKCheck of <android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)> is checking!!!
The life time of api is [26,31]
12call roads:
1 Mainhead roads:
-i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: leakcanary.internal.HeapAnalyzerService dummyMainMethod_leakcanary_internal_HeapAnalyzerService(android.content.Intent)>[]--><leakcanary.internal.ForegroundService: void onCreate()>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
11 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zab)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.internal.zaae: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]]
$yysi0 < 20
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
$i0 >= 26
Good road: <com.google.firebase.messaging.CommonNotificationBuilder: com.google.firebase.messaging.CommonNotificationBuilder$DisplayNotificationInfo createNotificationInfo(android.content.Context,com.google.firebase.messaging.NotificationParams)>[]--><com.google.firebase.messaging.CommonNotificationBuilder: java.lang.String getOrCreateChannel(android.content.Context,java.lang.String,android.os.Bundle)>[[$i0 >= 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-$yysi0 < 26
Good road: <com.google.android.gms.common.GoogleApiAvailability: void setDefaultNotificationChannelId(android.content.Context,java.lang.String)>[[-$yysi0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-i0 < 26
Good road: <leakcanary.internal.HeapAnalyzerService: void onAnalysisProgress(shark.OnAnalysisProgressListener$Step)>[]--><leakcanary.internal.ForegroundService: void showForegroundNotification(int,int,boolean,java.lang.String)>[]--><leakcanary.internal.Notifications: android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType)>[[-i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
-$i0 < 26
Good road: <androidx.core.app.NotificationManagerCompat: android.app.NotificationChannel getNotificationChannel(java.lang.String)>[[-$i0 < 26]]--><android.app.NotificationManager: android.app.NotificationChannel getNotificationChannel(java.lang.String)>
One road protect good!
containsStatic:true
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 855 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 
Error road: <androidx.media.MediaSessionManagerImplApi28: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl)>[]--><android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)>
#1.the call statck between class <androidx.media.MediaSessionManagerImplApi28: boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl)> to <android.media.session.MediaSessionManager: boolean isTrustedForMediaControl(android.media.session.MediaSessionManager.RemoteUserInfo)>has compatibility isssues！
-----------------------------------------
crashApis:313
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 856 Potential Issue API: SDKCheck of <android.view.WindowInsets.Builder: android.view.WindowInsets build()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 26 27 28 
Error road: <androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()>[]--><android.view.WindowInsets.Builder: android.view.WindowInsets build()>
#1.the call statck between class <androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()> to <android.view.WindowInsets.Builder: android.view.WindowInsets build()>has compatibility isssues！
-----------------------------------------
crashApis:314
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 857 Potential Issue API: SDKCheck of <android.widget.LinearLayout: void onRtlPropertiesChanged(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)>[]--><android.widget.LinearLayout: void onRtlPropertiesChanged(int)>
#1.the call statck between class <com.google.android.material.tabs.TabLayout$SlidingTabIndicator: void onRtlPropertiesChanged(int)> to <android.widget.LinearLayout: void onRtlPropertiesChanged(int)>has compatibility isssues！
-----------------------------------------
crashApis:315
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 858 Potential Issue API: SDKCheck of <android.app.Person.Builder: android.app.Person build()> is checking!!!
The life time of api is [28,31]
6call roads:
0 Mainhead roads:
6 Packageshead roads:
-i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender)>[[-i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24]][[-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]
-i0 < 24
-i0 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle: void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor)>[[-i0 < 24], [-i0 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i1 < 28
Good road: <androidx.core.app.NotificationCompat$MessagingStyle$Message: android.os.Bundle toBundle()>[[-$i1 < 28]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-$i0 < 26
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean updateShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
-i0 < 25
-i0 < 29
Good road: <androidx.core.content.pm.ShortcutManagerCompat: boolean addDynamicShortcuts(android.content.Context,java.util.List)>[[-i0 < 25]]--><androidx.core.content.pm.ShortcutInfoCompat: android.content.pm.ShortcutInfo toShortcutInfo()>[[-i0 < 29]]--><androidx.core.app.Person: android.app.Person toAndroidPerson()>[]--><android.app.Person.Builder: android.app.Person build()>
One road protect good!
containsStatic:false
containsTry:false
7call by main package
-----------------------------------------
#################################################
N 859 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 25
Good road: <androidx.core.content.pm.ShortcutManagerCompat: void removeAllDynamicShortcuts(android.content.Context)>[[-$i0 < 25]]--><android.content.pm.ShortcutManager: void removeAllDynamicShortcuts()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 860 Potential Issue API: SDKCheck of <android.view.Display: android.view.Display.Mode[] getSupportedModes()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 23
Good road: <androidx.core.view.DisplayCompat: androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display)>[[-i0 < 23]]--><android.view.Display: android.view.Display.Mode[] getSupportedModes()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 861 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.view.accessibility.AccessibilityWindowInfoCompat: java.lang.String toString()>[]--><androidx.core.view.accessibility.AccessibilityWindowInfoCompat: androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent()>[[-$i0 < 21]]--><android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 862 Potential Issue API: SDKCheck of <android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.core.app.ActivityOptionsCompat: androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>[[-$i0 < 21]]--><android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 863 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: boolean setLayoutDirection(int)> is checking!!!
The life time of api is [23,31]
33call roads:
1 Mainhead roads:
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysSummaryActivity dummyMainMethod_com_boardgamegeek_ui_PlaysSummaryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameActivity dummyMainMethod_com_boardgamegeek_ui_GameActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoriesActivity dummyMainMethod_com_boardgamegeek_ui_CategoriesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CategoriesActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyActivity dummyMainMethod_com_boardgamegeek_ui_BuddyActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HomeActivity dummyMainMethod_com_boardgamegeek_ui_HomeActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.HomeActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyPlaysActivity dummyMainMethod_com_boardgamegeek_ui_BuddyPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyPlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ThreadActivity dummyMainMethod_com_boardgamegeek_ui_ThreadActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ThreadActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListsActivity dummyMainMethod_com_boardgamegeek_ui_GeekListsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_PlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArtistsActivity dummyMainMethod_com_boardgamegeek_ui_ArtistsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ArtistsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationActivity dummyMainMethod_com_boardgamegeek_ui_LocationActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LocationActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListActivity dummyMainMethod_com_boardgamegeek_ui_GeekListActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlaysActivity dummyMainMethod_com_boardgamegeek_ui_GamePlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PersonActivity dummyMainMethod_com_boardgamegeek_ui_PersonActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PersonActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PublishersActivity dummyMainMethod_com_boardgamegeek_ui_PublishersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PublishersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionDetailsActivity dummyMainMethod_com_boardgamegeek_ui_CollectionDetailsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.TopGamesActivity dummyMainMethod_com_boardgamegeek_ui_TopGamesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumActivity dummyMainMethod_com_boardgamegeek_ui_ForumActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ForumActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ForumsActivity dummyMainMethod_com_boardgamegeek_ui_ForumsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddyCollectionActivity dummyMainMethod_com_boardgamegeek_ui_BuddyCollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddyCollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameColorsActivity dummyMainMethod_com_boardgamegeek_ui_GameColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameColorsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicActivity dummyMainMethod_com_boardgamegeek_ui_MechanicActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.SearchResultsActivity dummyMainMethod_com_boardgamegeek_ui_SearchResultsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.SearchResultsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CommentsActivity dummyMainMethod_com_boardgamegeek_ui_CommentsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CommentsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerPlaysActivity dummyMainMethod_com_boardgamegeek_ui_PlayerPlaysActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerPlaysActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.ArticleActivity dummyMainMethod_com_boardgamegeek_ui_ArticleActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.ArticleActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CollectionActivity dummyMainMethod_com_boardgamegeek_ui_CollectionActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CollectionActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.HotnessActivity dummyMainMethod_com_boardgamegeek_ui_HotnessActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GamePlayStatsActivity dummyMainMethod_com_boardgamegeek_ui_GamePlayStatsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GamePlayStatsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayActivity dummyMainMethod_com_boardgamegeek_ui_PlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.MechanicsActivity dummyMainMethod_com_boardgamegeek_ui_MechanicsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.MechanicsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameCollectionItemActivity dummyMainMethod_com_boardgamegeek_ui_GameCollectionItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameCollectionItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DataActivity dummyMainMethod_com_boardgamegeek_ui_DataActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.DesignersActivity dummyMainMethod_com_boardgamegeek_ui_DesignersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.DesignersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GameDetailActivity dummyMainMethod_com_boardgamegeek_ui_GameDetailActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GameDetailActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LocationsActivity dummyMainMethod_com_boardgamegeek_ui_LocationsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LocationsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.CategoryActivity dummyMainMethod_com_boardgamegeek_ui_CategoryActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.CategoryActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.GeekListItemActivity dummyMainMethod_com_boardgamegeek_ui_GeekListItemActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.GeekListItemActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.HeroTabActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayersActivity dummyMainMethod_com_boardgamegeek_ui_PlayersActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayersActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.SimpleSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.pref.SettingsActivity dummyMainMethod_com_boardgamegeek_pref_SettingsActivity(android.content.Intent)>[]--><com.boardgamegeek.pref.SettingsActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.BuddiesActivity dummyMainMethod_com_boardgamegeek_ui_BuddiesActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.BuddiesActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelSinglePaneActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.TopLevelActivity: void onCreate(android.os.Bundle)>[]--><com.boardgamegeek.ui.DrawerActivity: void onCreate(android.os.Bundle)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(int,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
32 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
$yysi0 < 21
-z0 == 0
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimColor(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onBitmapFailed(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.CollectionFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.CollectionFragment: void bindFilterButtons()>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!<com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0]][[-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
-$z0 == 0
-i1 < 23
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: boolean onLayoutDirectionChanged(int)>[[-$z0 == 0], [-i1 < 23]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.chip.Chip: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromResource(android.content.Context,int)>[]--><com.google.android.material.chip.ChipDrawable: com.google.android.material.chip.ChipDrawable createFromAttributes(android.content.Context,android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void loadFromAttributes(android.util.AttributeSet,int,int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$COLLAPSING_TOOLBAR_LAYOUT$1: org.jetbrains.anko.design._CollapsingToolbarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)>[]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-$yysi0 < 19
-i1 < 23
Good road: <androidx.drawerlayout.widget.DrawerLayout: void onRtlPropertiesChanged(int)>[]--><androidx.drawerlayout.widget.DrawerLayout: void resolveShadowDrawables()>[]--><androidx.drawerlayout.widget.DrawerLayout: android.graphics.drawable.Drawable resolveLeftShadow()>[]--><androidx.drawerlayout.widget.DrawerLayout: boolean mirror(android.graphics.drawable.Drawable,int)>[[-$yysi0 < 19]]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21]][[$i0 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
i2 < 21
$i0 < 21
-i1 < 23
Good road: <org.jetbrains.anko.design.$$Anko$Factories$DesignViewGroup$APP_BAR_LAYOUT$1: org.jetbrains.anko.design._AppBarLayout invoke(android.content.Context)>[]--><org.jetbrains.anko.design._AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.google.android.material.appbar.AppBarLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>[[i2 < 21], [$i0 < 21]]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabled(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)>[]--><com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.ChipDrawable: void setCloseIconEnabledResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)>[]--><androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
###Multi invoking in one method, need manual check!!!--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21]][[-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]
$yysi0 < 21
-z0 == 0
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setCloseIcon(android.graphics.drawable.Drawable)>[[$yysi0 < 21], [-z0 == 0]]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)>[]--><com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void setCheckedIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.boardgamegeek.extensions.ChipKt$loadIcon$1: void onPrepareLoad(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.Chip: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconResource(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIcon(android.graphics.drawable.Drawable)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)>[]--><com.google.android.material.chip.Chip: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(int)>[]--><com.google.android.material.chip.ChipDrawable: void setChipIconVisible(boolean)>[]--><com.google.android.material.chip.ChipDrawable: void applyChildDrawable(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
-i1 < 23
Good road: <com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrimResource(int)>[]--><com.google.android.material.appbar.CollapsingToolbarLayout: void setStatusBarScrim(android.graphics.drawable.Drawable)>[]--><androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)>[[-i1 < 23]]--><android.graphics.drawable.Drawable: boolean setLayoutDirection(int)>
One road protect good!
containsStatic:true
containsTry:false
33call by main package
-----------------------------------------
#################################################
N 864 Potential Issue API: SDKCheck of <android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)> is checking!!!
The life time of api is [29,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
try
Good road with try: <androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)>[[try]]--><android.graphics.fonts.FontFamily.Builder: android.graphics.fonts.FontFamily.Builder addFont(android.graphics.fonts.Font)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 865 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.net.Uri)>[]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)>
#1.the call statck between class <androidx.core.graphics.drawable.IconKt: android.graphics.drawable.Icon toIcon(android.net.Uri)> to <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithContentUri(android.net.Uri)>has compatibility isssues！
-----------------------------------------
crashApis:316
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 866 Potential Issue API: SDKCheck of <android.app.job.JobParameters: android.os.PersistableBundle getExtras()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.gms.measurement.AppMeasurementJobService: boolean onStartJob(android.app.job.JobParameters)>[]--><com.google.android.gms.measurement.internal.zzjr: boolean zza(android.app.job.JobParameters)>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#1.the call statck between class <com.google.android.gms.measurement.AppMeasurementJobService: boolean onStartJob(android.app.job.JobParameters)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: boolean onStartJob(android.app.job.JobParameters)>[]--><android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
#2.the call statck between class <com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: boolean onStartJob(android.app.job.JobParameters)> to <android.app.job.JobParameters: android.os.PersistableBundle getExtras()>has compatibility isssues！
-----------------------------------------
crashApis:317
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 867 Potential Issue API: SDKCheck of <android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()>[]--><android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>
#1.the call statck between class <androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()> to <android.view.ViewGroup: java.lang.CharSequence getAccessibilityClassName()>has compatibility isssues！
-----------------------------------------
crashApis:318
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 868 Potential Issue API: SDKCheck of <android.service.media.MediaBrowserService.Result: void detach()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper: void detach()>[]--><android.service.media.MediaBrowserService.Result: void detach()>
#1.the call statck between class <androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper: void detach()> to <android.service.media.MediaBrowserService.Result: void detach()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 
Error road: <androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper: void detach()>[]--><android.service.media.MediaBrowserService.Result: void detach()>
#2.the call statck between class <androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper: void detach()> to <android.service.media.MediaBrowserService.Result: void detach()>has compatibility isssues！
-----------------------------------------
crashApis:319
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 869 Potential Issue API: SDKCheck of <android.widget.TextView: int getAutoSizeMaxTextSize()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 27
Good road: <androidx.core.widget.TextViewCompat: int getAutoSizeMaxTextSize(android.widget.TextView)>[[-$i0 < 27]]--><android.widget.TextView: int getAutoSizeMaxTextSize()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 870 Potential Issue API: SDKCheck of <android.app.Activity: void finishAfterTransition()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()>[]--><androidx.core.app.ActivityCompat: void finishAfterTransition(android.app.Activity)>[[-$i0 < 21]]--><android.app.Activity: void finishAfterTransition()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 871 Potential Issue API: SDKCheck of <android.view.DisplayCutout: int getSafeInsetTop()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 28
Good road: <androidx.core.view.DisplayCutoutCompat: int getSafeInsetTop()>[[-$i0 < 28]]--><android.view.DisplayCutout: int getSafeInsetTop()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 872 Potential Issue API: SDKCheck of <android.os.PersistableBundle: void <init>()> is checking!!!
The life time of api is [21,31]
4989call roads:
1 Mainhead roads:
4988 Packageshead roads:
Roads number exceed, exit!4988
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 873 Potential Issue API: SDKCheck of <android.view.View: void requestApplyInsets()> is checking!!!
The life time of api is [21,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 874 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [24,31]
4986call roads:
1 Mainhead roads:
4985 Packageshead roads:
Roads number exceed, exit!4985
containsStatic:true
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 875 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void drawableHotspotChanged(float,float)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 876 Potential Issue API: SDKCheck of <android.view.View: void setScrollIndicators(int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 23
Good road: <androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int)>[[-$i1 < 23]]--><android.view.View: void setScrollIndicators(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 877 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: int getResId()> is checking!!!
The life time of api is [28,31]
19call roads:
1 Mainhead roads:
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.PlayerColorsActivity dummyMainMethod_com_boardgamegeek_ui_PlayerColorsActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.PlayerColorsActivity: void onCreate(android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.provider.BggProvider dummyMainMethod_com_boardgamegeek_provider_BggProvider(android.content.Intent)>[]--><com.boardgamegeek.provider.BggProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.GamesIdSuggestedPlayerCountPollResultsProvider: android.net.Uri insert(android.content.Context,android.database.sqlite.SQLiteDatabase,android.net.Uri,android.content.ContentValues)>[]--><com.boardgamegeek.provider.BaseProvider: void notifyException(android.content.Context,android.database.SQLException)>[]--><com.boardgamegeek.util.NotificationUtils: void notify(android.content.Context,java.lang.String,int,androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$Builder: android.app.Notification build()>[]--><androidx.core.app.NotificationCompatBuilder: void <init>(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompatJellybean: android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.boardgamegeek.ui.LogPlayActivity dummyMainMethod_com_boardgamegeek_ui_LogPlayActivity(android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onPause()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
18 Packageshead roads:
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void lambda$new$0$LogPlayActivity(android.view.View)>[]--><com.boardgamegeek.ui.LogPlayActivity: void onActionBarItemSelected(int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,java.lang.Object)>[]--><com.boardgamegeek.ui.PlayFragment: void onLoadFinished(androidx.loader.content.Loader,android.database.Cursor)>[]--><com.boardgamegeek.ui.PlayFragment: void maybeShowNotification()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayPlayerSortFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.graphics.drawable.IconCompat: java.lang.String toString()>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try]][[-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
try
Good road with try: <androidx.core.app.NotificationCompat$MessagingStyle$Message: androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle)>[[try], [-$i0 < 28]]--><androidx.core.app.Person: androidx.core.app.Person fromAndroidPerson(android.app.Person)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.RemoteActionCompat: androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.PlayFragment: void onResume()>[]--><com.boardgamegeek.ui.PlayFragment: void showNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayAddPlayersFragment$onViewCreated$4: void onChanged(java.util.List)>[]--><com.boardgamegeek.extensions.ChipKt: void loadIcon(com.google.android.material.chip.Chip,java.lang.String,int)>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification$default(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.LogPlayActivity: void onBackPressed()>[]--><com.boardgamegeek.ui.LogPlayActivity: void saveDraft(boolean)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.GameColorsFragment: void onViewCreated(android.view.View,android.os.Bundle)>[]--><com.boardgamegeek.ui.GameColorsFragment: void setUpRecyclerView()>[]--><androidx.recyclerview.widget.ItemTouchHelper: void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView)>[]--><androidx.recyclerview.widget.ItemTouchHelper: void destroyCallbacks()>[]--><com.boardgamegeek.ui.LogPlayActivity$1: void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder)>[]--><com.boardgamegeek.ui.LogPlayActivity$PlayAdapter: void notifyPlayersChanged()>[]--><com.boardgamegeek.ui.LogPlayActivity: void access$1500(com.boardgamegeek.ui.LogPlayActivity)>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
try
Good road with try: <androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon)>[[try]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 23
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$Action: void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
i0 < 23
-$i0 < 23
-$i0 < 28
Good road: <com.boardgamegeek.ui.NewPlayActivity$onCreate$1: void onChanged(java.lang.Long)>[]--><com.boardgamegeek.extensions.NotificationContextKt: void launchPlayingNotification(android.content.Context,long,int,java.lang.String,java.lang.String,int,long,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
try
Good road with try: <com.boardgamegeek.ui.LogPlayActivity: void access$500(com.boardgamegeek.ui.LogPlayActivity,int)>[]--><com.boardgamegeek.ui.LogPlayActivity: void setModelIfDone(int)>[[try]]--><com.boardgamegeek.ui.LogPlayActivity: void finishDataLoad()>[]--><com.boardgamegeek.ui.LogPlayActivity: void maybeShowNotification()>[]--><com.boardgamegeek.util.NotificationUtils: void launchPlayingNotification(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String)>[]--><com.boardgamegeek.util.LargeIconLoader: void executeOnMainThread()>[]--><com.squareup.picasso.RequestCreator: void into(com.squareup.picasso.Target)>[]--><com.boardgamegeek.util.LargeIconLoader: void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom)>[]--><com.boardgamegeek.util.NotificationUtils$1: void onSuccessfulIconLoad(android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void access$000(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><com.boardgamegeek.util.NotificationUtils: void buildAndNotifyPlaying(android.content.Context,long,com.boardgamegeek.model.Play,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap)>[]--><androidx.core.app.NotificationCompat$Builder: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender)>[]--><androidx.core.app.NotificationCompat$WearableExtender: androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder)>[]--><androidx.core.app.NotificationCompat$WearableExtender: android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action)>[[i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId()>[[-$i0 < 23]]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat$BubbleMetadata: androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata)>[]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
###Multi invoking in one method, need manual check!!!<androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28]][[-i1 < 23]][[i0 < 24]][[i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]
i0 < 28
-i1 < 23
i0 < 24
i1 < 29
-$i0 < 28
Good road: <androidx.core.app.NotificationCompat: androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action)>[[i0 < 28], [-i1 < 23], [i0 < 24], [i1 < 29]]--><androidx.core.graphics.drawable.IconCompat: androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)>[]--><androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)>[[-$i0 < 28]]--><android.graphics.drawable.Icon: int getResId()>
One road protect good!
containsStatic:false
containsTry:true
19call by main package
-----------------------------------------
#################################################
N 878 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 26
Good road: <androidx.core.content.pm.ShortcutManagerCompat: android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat)>[[-$i0 < 26]]--><android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
One road protect good!
-i1 < 26
Good road: <com.boardgamegeek.ui.CollectionFragment$CollectionAdapter$CollectionItemViewHolder$bindView$1: void onClick(android.view.View)>[]--><com.boardgamegeek.ui.CollectionFragment: void createShortcut(int,java.lang.String,java.lang.String)>[[-i1 < 26]]--><com.boardgamegeek.ui.CollectionFragment: android.content.Intent createShortcutForOreo(int,java.lang.String,java.lang.String,android.content.Intent)>[]--><android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 879 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <androidx.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues)>[]--><androidx.transition.ObjectAnimatorUtils: android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 880 Potential Issue API: SDKCheck of <android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <com.google.android.material.radiobutton.MaterialRadioButton: void onAttachedToWindow()>[]--><androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>[[-$i0 < 21]]--><android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
One road protect good!
-$i0 < 21
Good road: <com.google.android.material.checkbox.MaterialCheckBox: void onAttachedToWindow()>[]--><androidx.core.widget.CompoundButtonCompat: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)>[[-$i0 < 21]]--><android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 881 Potential Issue API: SDKCheck of <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean,android.graphics.ColorSpace)> is checking!!!
The life time of api is [26,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)>[]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean,android.graphics.ColorSpace)>
#1.the call statck between class <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object)> to <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 19 20 21 22 23 24 25 
Error road: <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)>[]--><android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean,android.graphics.ColorSpace)>
#2.the call statck between class <androidx.core.graphics.BitmapKt: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace)> to <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config,boolean,android.graphics.ColorSpace)>has compatibility isssues！
-----------------------------------------
crashApis:320
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 882 Potential Issue API: SDKCheck of <android.content.pm.PackageInfo: long getLongVersionCode()> is checking!!!
The life time of api is [28,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 28
Good road: <androidx.core.content.pm.PackageInfoCompat: long getLongVersionCode(android.content.pm.PackageInfo)>[[-$i1 < 28]]--><android.content.pm.PackageInfo: long getLongVersionCode()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 883 Potential Issue API: SDKCheck of <android.view.View: java.util.List getSystemGestureExclusionRects()> is checking!!!
The life time of api is [29,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 29
Good road: <androidx.core.view.ViewCompat: java.util.List getSystemGestureExclusionRects(android.view.View)>[[-$i0 < 29]]--><android.view.View: java.util.List getSystemGestureExclusionRects()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 884 Potential Issue API: SDKCheck of <android.text.Html: java.lang.String toHtml(android.text.Spanned,int)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 24
Good road: <androidx.core.text.HtmlKt: java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object)>[]--><androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>[[-$i1 < 24]]--><android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>
One road protect good!
-$i1 < 24
Good road: <androidx.core.text.HtmlKt: java.lang.String toHtml(android.text.Spanned,int)>[]--><androidx.core.text.HtmlCompat: java.lang.String toHtml(android.text.Spanned,int)>[[-$i1 < 24]]--><android.text.Html: java.lang.String toHtml(android.text.Spanned,int)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 885 Potential Issue API: SDKCheck of <android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i1 < 26
-$i0 < 26
Good road: <com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)>[[$i1 < 26]]--><androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setShowingHintText(boolean)>[[-$i0 < 26]]--><android.view.accessibility.AccessibilityNodeInfo: void setShowingHintText(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 886 Potential Issue API: SDKCheck of <android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 
Error road: <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)>[]--><android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>
#1.the call statck between class <androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)> to <android.graphics.drawable.AnimatedVectorDrawable: boolean unregisterAnimationCallback(android.graphics.drawable.Animatable2.AnimationCallback)>has compatibility isssues！
-----------------------------------------
crashApis:321
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 887 Potential Issue API: SDKCheck of <android.os.Environment: java.lang.String getExternalStorageState(java.io.File)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-i0 < 21
Good road: <androidx.core.os.EnvironmentCompat: java.lang.String getStorageState(java.io.File)>[[-i0 < 21]]--><android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 888 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setName(java.lang.CharSequence)> is checking!!!
The life time of api is [26,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GooglePlayServicesUtil: void showErrorNotification(int,android.content.Context)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: boolean zab(com.google.android.gms.common.api.internal.zab)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.GoogleApiManager$zaa: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.internal.zaae: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: void zaa(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.api.internal.GoogleApiManager: boolean zac(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zaa(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]
###Multi invoking in one method, need manual check!!!--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20]][[-$yysi0 < 26]][[-$z0 != 0]]
$yysi0 < 20
-$yysi0 < 26
-$z0 != 0
Good road: <com.google.android.gms.common.GoogleApiAvailability$zaa: void handleMessage(android.os.Message)>[]--><com.google.android.gms.common.GoogleApiAvailability: void showErrorNotification(android.content.Context,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)>[[$yysi0 < 20], [-$yysi0 < 26], [-$z0 != 0]]--><android.app.NotificationChannel: void setName(java.lang.CharSequence)>
One road protect good!
containsStatic:true
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 889 Potential Issue API: SDKCheck of <android.graphics.Color: float luminance(int)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 19 20 21 22 23 
Error road: <androidx.core.graphics.ColorKt: float getLuminance(int)>[]--><android.graphics.Color: float luminance(int)>
#1.the call statck between class <androidx.core.graphics.ColorKt: float getLuminance(int)> to <android.graphics.Color: float luminance(int)>has compatibility isssues！
-----------------------------------------
crashApis:322
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
crashApis numbers:322
crashApis numbers in main road:38
On Android Version 16 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 17 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 18 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 19 this app may have error api use(at least): 304 and error api roads: 709
On Android Version 20 this app may have error api use(at least): 304 and error api roads: 709
On Android Version 21 this app may have error api use(at least): 196 and error api roads: 375
On Android Version 22 this app may have error api use(at least): 194 and error api roads: 363
On Android Version 23 this app may have error api use(at least): 163 and error api roads: 304
On Android Version 24 this app may have error api use(at least): 146 and error api roads: 286
On Android Version 25 this app may have error api use(at least): 133 and error api roads: 273
On Android Version 26 this app may have error api use(at least): 78 and error api roads: 200
On Android Version 27 this app may have error api use(at least): 78 and error api roads: 200
On Android Version 28 this app may have error api use(at least): 47 and error api roads: 168
On Android Version 29 this app may have error api use(at least): 2 and error api roads: 2
On Android Version 30 this app may have error api use(at least): 4 and error api roads: 4
On Android Version 31 this app may have error api use(at least): 14 and error api roads: 31
