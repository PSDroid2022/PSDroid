/home/ys/桌面/CompactDroid（复件）/dataset2/Simple_Scrobbler.apk
Entry Points[com.adam.aslfms.receiver.OrangeSqueezeReceiver, com.adam.aslfms.ViewCorrectionRulesActivity, com.adam.aslfms.receiver.PlayerProReceiver, com.adam.aslfms.receiver.BootReceiver, com.adam.aslfms.receiver.AndroidMusicReceiver, com.adam.aslfms.service.ScrobblingService, com.adam.aslfms.receiver.WinampMusicReceiver, com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver, com.adam.aslfms.receiver.SamsungMusicReceiver, com.adam.aslfms.receiver.MyTouch4GMusicReceiver, com.adam.aslfms.receiver.SpotifyReceiver, com.adam.aslfms.receiver.SLSAPIReceiver, com.adam.aslfms.ChangeThemeActivity, com.adam.aslfms.OptionsActivity, com.adam.aslfms.StatusActivity, com.adam.aslfms.receiver.RdioMusicReceiver, com.adam.aslfms.receiver.HeroMusicReceiver, com.adam.aslfms.SettingsActivity, com.adam.aslfms.receiver.AmazonMP3Receiver, com.adam.aslfms.receiver.PlayerProTrialReceiver, com.adam.aslfms.ViewScrobbleCacheActivity, com.adam.aslfms.MusicAppsActivity, com.adam.aslfms.PermissionsActivity, com.adam.aslfms.UserCredActivity, com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver, com.adam.aslfms.service.ControllerReceiverService, com.adam.aslfms.UserCredsListActivity, com.adam.aslfms.receiver.SEMCMusicReceiver, com.adam.aslfms.receiver.HuaweiReceiver, com.adam.aslfms.receiver.MIUIMusicReceiver, com.adam.aslfms.receiver.LgOptimus4xReceiver]
FllowDroidcallgraph size:9518
Soot started on Mon Jul 11 12:14:20 CST 2022
StaticCheck:<com.adam.aslfms.util.Util: boolean checkBatteryOptimizationsPermission(android.content.Context)>i0 < 23
StaticCheck:<com.adam.aslfms.util.Util: boolean checkNotificationListenerPermission(android.content.Context)>i0 < 18
Soot finished on Mon Jul 11 12:14:30 CST 2022
Soot has run for 0 min. 9 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 14
Declared Target Sdk version is: 26
Declared Max Sdk version is: -1
Collected 335 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.media.session.MediaController: java.lang.String getPackageName()> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><com.adam.aslfms.service.ControllerReceiverSession: void initialListener(android.content.Context,java.util.List)>[[try]]--><android.media.session.MediaController: java.lang.String getPackageName()>
One road protect good!
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)>[]--><android.media.session.MediaController: java.lang.String getPackageName()>
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)>[]--><com.adam.aslfms.service.ControllerReceiverSession: void removeSessions(java.util.HashSet,java.util.HashSet)>[[try]]--><android.media.session.MediaController: java.lang.String getPackageName()>
One road protect good!
#1.the call statck between class <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)> to <android.media.session.MediaController: java.lang.String getPackageName()>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><com.adam.aslfms.service.ControllerReceiverSession: void initialListener(android.content.Context,java.util.List)>[[try]]--><android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>
One road protect good!
1 Packageshead roads:
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)>[[try]]--><android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
8call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
7 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#3.the call statck between class <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#4.the call statck between class <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#5.the call statck between class <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#6.the call statck between class <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#7.the call statck between class <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:2
crashApisInMain:1
containsStatic:false
containsTry:false
8call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
12call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: void onCreate()>[]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onListenerConnected()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
11 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#2.the call statck between class <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#3.the call statck between class <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#4.the call statck between class <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#5.the call statck between class <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#6.the call statck between class <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#7.the call statck between class <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#8.the call statck between class <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.UserCredActivity$1: void onReceive(android.content.Context,android.content.Intent)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#9.the call statck between class <com.adam.aslfms.UserCredActivity$1: void onReceive(android.content.Context,android.content.Intent)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#10.the call statck between class <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:3
crashApisInMain:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.media.session.PlaybackState: int getState()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.service.ControllerReceiverCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>[]--><android.media.session.PlaybackState: int getState()>
#1.the call statck between class <com.adam.aslfms.service.ControllerReceiverCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)> to <android.media.session.PlaybackState: int getState()>has compatibility isssues！
-----------------------------------------
crashApis:4
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
5call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$z0 == 0, -$i0 < 21, -i0 < 18, -$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[[-$z0 == 0, -$i0 < 21, -i0 < 18, -$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.UserCredActivity: void sendClearCreds(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity$2: void onClick(android.content.DialogInterface,int)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.adam.aslfms.util.Util: void scrobbleAllIfPossible(android.content.Context,int)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.BootReceiver dummyMainMethod_com_adam_aslfms_receiver_BootReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.'-$$Lambda$BootReceiver$yY95OqWJYvkdolaOmMDVoYz9yVs': void run()>[]--><com.adam.aslfms.receiver.BootReceiver: void lambda$onReceive$0(android.content.Context)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredsListActivity dummyMainMethod_com_adam_aslfms_UserCredsListActivity(android.content.Intent)>[]--><com.adam.aslfms.'-$$Lambda$UserCredsListActivity$iVYUcJZZ589-eSHtIIp_8eHG_rU': void onClick(android.content.DialogInterface,int)>[]--><com.adam.aslfms.UserCredsListActivity: void lambda$onPreferenceTreeClick$0$UserCredsListActivity(android.preference.Preference,android.content.DialogInterface,int)>[]--><com.adam.aslfms.UserCredsListActivity: void sendClearCreds(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.StatusActivity dummyMainMethod_com_adam_aslfms_StatusActivity(android.content.Intent)>[]--><com.adam.aslfms.StatusActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.adam.aslfms.util.Util: void scrobbleAllIfPossible(android.content.Context,int)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]][[-$i0 < 26]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try], [-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
4 Packageshead roads:
-$i0 < 26
Good road: <com.adam.aslfms.service.ControllerReceiverCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[[try]]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-$i0 < 26
Good road: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[[-$i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
-i0 < 26
Good road: <com.adam.aslfms.EditUserCredentials: void onDialogClosed(boolean)>[[-i0 < 26]]--><android.content.Context: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.util.Util: boolean checkBatteryOptimizationsPermission(android.content.Context)>[[-i0 < 23], [try]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.util.Util: boolean checkBatteryOptimizationsPermission(android.content.Context)>[[-i0 < 23]][[try]]
-i0 < 23
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.PermissionsActivity dummyMainMethod_com_adam_aslfms_PermissionsActivity(android.content.Intent)>[]--><com.adam.aslfms.PermissionsActivity: void onCreate(android.os.Bundle)>[]--><com.adam.aslfms.PermissionsActivity: void checkCurrrentPermissions()>[]--><com.adam.aslfms.PermissionsActivity: void checkAndSetColors()>[]--><com.adam.aslfms.util.Util: boolean checkBatteryOptimizationsPermission(android.content.Context)>[[-i0 < 23], [try]]--><android.os.PowerManager: boolean isIgnoringBatteryOptimizations(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#2.the call statck between class <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#3.the call statck between class <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
crashApis:5
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getType()> is checking!!!
The life time of api is [1,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.NetworkInfo: int getType()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: int getType()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:6
crashApisInMain:3
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)> is checking!!!
The life time of api is [17,31]
1call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ChangeThemeActivity dummyMainMethod_com_adam_aslfms_ChangeThemeActivity(android.content.Intent)>[]--><com.adam.aslfms.ChangeThemeActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.PermissionsActivity dummyMainMethod_com_adam_aslfms_PermissionsActivity(android.content.Intent)>[]--><com.adam.aslfms.PermissionsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewCorrectionRulesActivity dummyMainMethod_com_adam_aslfms_ViewCorrectionRulesActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewCorrectionRulesActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredsListActivity dummyMainMethod_com_adam_aslfms_UserCredsListActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredsListActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.MusicAppsActivity dummyMainMethod_com_adam_aslfms_MusicAppsActivity(android.content.Intent)>[]--><com.adam.aslfms.MusicAppsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:7
crashApisInMain:4
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.app.Activity: void finishAndRemoveTask()> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
-$i0 < 21
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity$2: void onClick(android.content.DialogInterface,int)>[[-$i0 < 21]]--><android.app.Activity: void finishAndRemoveTask()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:8
crashApisInMain:5
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
17call roads:
1 Mainhead roads:
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: void onCreate()>[]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void exportAllDatabases(android.content.Context)>[]--><com.adam.aslfms.util.Util: void exportDB(java.lang.String,android.content.Context)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
16 Packageshead roads:
try
Good road with try: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Scrobbler: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.NPNotifier: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-$i1 < 19
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[-$i1 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
-i2 < 19
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[[-i2 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)> is checking!!!
The life time of api is [26,31]
2call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[[-$i0 < 21], [-$z0 == 0], [-i0 < 18], [-$i0 < 26]]
###Multi invoking in one method, need manual check!!!--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[[-$i0 < 21]][[-$z0 == 0]][[-i0 < 18]][[-$i0 < 26]]
-$i0 < 21
-$z0 == 0
-i0 < 18
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[[-$i0 < 21], [-$z0 == 0], [-i0 < 18], [-$i0 < 26]]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.UserCredActivity: void sendClearCreds(android.content.Context)>[[-$i0 < 26]]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity$2: void onClick(android.content.DialogInterface,int)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.adam.aslfms.util.Util: void scrobbleAllIfPossible(android.content.Context,int)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.BootReceiver dummyMainMethod_com_adam_aslfms_receiver_BootReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.'-$$Lambda$BootReceiver$yY95OqWJYvkdolaOmMDVoYz9yVs': void run()>[]--><com.adam.aslfms.receiver.BootReceiver: void lambda$onReceive$0(android.content.Context)>[]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredsListActivity dummyMainMethod_com_adam_aslfms_UserCredsListActivity(android.content.Intent)>[]--><com.adam.aslfms.'-$$Lambda$UserCredsListActivity$iVYUcJZZ589-eSHtIIp_8eHG_rU': void onClick(android.content.DialogInterface,int)>[]--><com.adam.aslfms.UserCredsListActivity: void lambda$onPreferenceTreeClick$0$UserCredsListActivity(android.preference.Preference,android.content.DialogInterface,int)>[]--><com.adam.aslfms.UserCredsListActivity: void sendClearCreds(android.content.Context)>[[-$i0 < 26]]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.StatusActivity dummyMainMethod_com_adam_aslfms_StatusActivity(android.content.Intent)>[]--><com.adam.aslfms.StatusActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><com.adam.aslfms.util.Util: void scrobbleAllIfPossible(android.content.Context,int)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[[try]]--><com.adam.aslfms.util.Util: void runServices(android.content.Context)>[]--><android.content.ContextWrapper: android.content.ComponentName startForegroundService(android.content.Intent)>
One road protect good!
crashApis:9
crashApisInMain:6
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#2.the call statck between class <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#3.the call statck between class <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#4.the call statck between class <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#5.the call statck between class <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#6.the call statck between class <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#7.the call statck between class <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:10
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.media.MediaMetadata: long getLong(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[[try]]--><android.media.MediaMetadata: long getLong(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String,long)>
#1.the call statck between class <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: long getLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:11
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[]--><com.adam.aslfms.service.ScrobblingService: void onPlayStateChanged(com.adam.aslfms.util.Track,com.adam.aslfms.util.Track$State)>[[try]]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.service.ScrobblingService: android.os.Bundle bundleTrack()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:true
1call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.content.res.Configuration: void setLocale(java.util.Locale)> is checking!!!
The life time of api is [17,31]
1call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewScrobbleCacheActivity dummyMainMethod_com_adam_aslfms_ViewScrobbleCacheActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewScrobbleCacheActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ChangeThemeActivity dummyMainMethod_com_adam_aslfms_ChangeThemeActivity(android.content.Intent)>[]--><com.adam.aslfms.ChangeThemeActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.PermissionsActivity dummyMainMethod_com_adam_aslfms_PermissionsActivity(android.content.Intent)>[]--><com.adam.aslfms.PermissionsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.ViewCorrectionRulesActivity dummyMainMethod_com_adam_aslfms_ViewCorrectionRulesActivity(android.content.Intent)>[]--><com.adam.aslfms.ViewCorrectionRulesActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredsListActivity dummyMainMethod_com_adam_aslfms_UserCredsListActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredsListActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.MusicAppsActivity dummyMainMethod_com_adam_aslfms_MusicAppsActivity(android.content.Intent)>[]--><com.adam.aslfms.MusicAppsActivity: void attachBaseContext(android.content.Context)>[]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context wrap(android.content.Context)>[[-$i0 < 24]]--><com.adam.aslfms.util.MyContextWrapper: android.content.Context updateResourcesLocale(android.content.Context,java.util.Locale)>[]--><android.content.res.Configuration: void setLocale(java.util.Locale)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#2.the call statck between class <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onDestroy()>[]--><android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:13
crashApisInMain:7
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.service.notification.NotificationListenerService: void onListenerConnected()> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onListenerConnected()>[]--><android.service.notification.NotificationListenerService: void onListenerConnected()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.service.notification.NotificationListenerService: void onListenerConnected()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:14
crashApisInMain:8
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
2call roads:
1 Mainhead roads:
-$z0 == 0
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ScrobblingService: void handleCommand(android.content.Intent,int)>[[-$z0 == 0]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:15
crashApisInMain:9
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.service.notification.NotificationListenerService: void requestRebind(android.content.ComponentName)> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onListenerDisconnected()>[]--><android.service.notification.NotificationListenerService: void requestRebind(android.content.ComponentName)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.service.notification.NotificationListenerService: void requestRebind(android.content.ComponentName)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:16
crashApisInMain:10
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
17call roads:
1 Mainhead roads:
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: void onCreate()>[]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void exportAllDatabases(android.content.Context)>[]--><com.adam.aslfms.util.Util: void exportDB(java.lang.String,android.content.Context)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
16 Packageshead roads:
try
Good road with try: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Scrobbler: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.NPNotifier: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-$i1 < 19
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[-$i1 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
-i2 < 19
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[[-i2 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
containsStatic:false
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.service.notification.NotificationListenerService: void onListenerDisconnected()> is checking!!!
The life time of api is [24,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onListenerDisconnected()>[]--><android.service.notification.NotificationListenerService: void onListenerDisconnected()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.service.notification.NotificationListenerService: void onListenerDisconnected()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:17
crashApisInMain:11
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isRoaming()> is checking!!!
The life time of api is [3,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.NetworkInfo: boolean isRoaming()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: boolean isRoaming()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:18
crashApisInMain:12
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredActivity dummyMainMethod_com_adam_aslfms_UserCredActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.UserCredsListActivity dummyMainMethod_com_adam_aslfms_UserCredsListActivity(android.content.Intent)>[]--><com.adam.aslfms.UserCredsListActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.MusicAppsActivity dummyMainMethod_com_adam_aslfms_MusicAppsActivity(android.content.Intent)>[]--><com.adam.aslfms.MusicAppsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.preference.PreferenceActivity: boolean onOptionsItemSelected(android.view.MenuItem)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:19
crashApisInMain:13
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: long getLong(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
17call roads:
1 Mainhead roads:
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: void onCreate()>[]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void exportAllDatabases(android.content.Context)>[]--><com.adam.aslfms.util.Util: void exportDB(java.lang.String,android.content.Context)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
16 Packageshead roads:
try
Good road with try: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Scrobbler: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.NPNotifier: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-$i1 < 19
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[-$i1 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
-i2 < 19
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[[-i2 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
containsStatic:false
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><com.adam.aslfms.service.ControllerReceiverSession: void initialListener(android.content.Context,java.util.List)>[]--><android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>
One road protect good!
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)>[]--><android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>
#1.the call statck between class <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)> to <android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.net.NetworkInfo: java.lang.String toString()> is checking!!!
The life time of api is [1,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.NetworkInfo: java.lang.String toString()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: java.lang.String toString()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:22
crashApisInMain:14
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:23
crashApisInMain:15
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.net.NetworkInfo: int getSubtype()> is checking!!!
The life time of api is [3,30]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 31 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.SettingsActivity dummyMainMethod_com_adam_aslfms_SettingsActivity(android.content.Intent)>[]--><com.adam.aslfms.SettingsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.SettingsActivity: void checkNetwork()>[]--><com.adam.aslfms.util.Util: com.adam.aslfms.util.Util$NetworkStatus checkForOkNetwork(android.content.Context)>[]--><android.net.NetworkInfo: int getSubtype()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.net.NetworkInfo: int getSubtype()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:24
crashApisInMain:16
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.os.BaseBundle: double getDouble(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[try]]--><android.os.BaseBundle: double getDouble(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.media.MediaMetadata: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[[try]]--><android.media.MediaMetadata: java.lang.String getString(java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: void onCreate()>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[[try]]--><com.adam.aslfms.service.ControllerReceiverSession: void initialListener(android.content.Context,java.util.List)>[]--><android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>
One road protect good!
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)>[]--><com.adam.aslfms.service.ControllerReceiverSession: void removeSessions(java.util.HashSet,java.util.HashSet)>[]--><android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>
#1.the call statck between class <com.adam.aslfms.service.ControllerReceiverSession: void onActiveSessionsChanged(java.util.List)> to <android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)> is checking!!!
The life time of api is [26,31]
17call roads:
1 Mainhead roads:
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ScrobblingService dummyMainMethod_com_adam_aslfms_service_ScrobblingService(android.content.Intent)>[]--><com.adam.aslfms.service.ScrobblingService: void onCreate()>[]--><com.adam.aslfms.service.ScrobblingService: void foreGroundService()>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
i0 >= 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.service.ControllerReceiverService dummyMainMethod_com_adam_aslfms_service_ControllerReceiverService(android.content.Intent)>[]--><com.adam.aslfms.service.ControllerReceiverService: int onStartCommand(android.content.Intent,int,int)>[]--><com.adam.aslfms.service.ControllerReceiverService: void init(android.os.Bundle)>[]--><com.adam.aslfms.util.NotificationCreator: android.app.Notification prepareNotification(android.os.Bundle,android.content.Context)>[]--><com.adam.aslfms.util.NotificationCreator: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.OptionsActivity dummyMainMethod_com_adam_aslfms_OptionsActivity(android.content.Intent)>[]--><com.adam.aslfms.OptionsActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><com.adam.aslfms.OptionsActivity$PowerSpecificPrefs: boolean onClick(android.preference.Preference)>[]--><com.adam.aslfms.util.Util: void exportAllDatabases(android.content.Context)>[]--><com.adam.aslfms.util.Util: void exportDB(java.lang.String,android.content.Context)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
16 Packageshead roads:
try
Good road with try: <com.adam.aslfms.receiver.LastFmAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Scrobbler: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.MIUIMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SEMCMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: com.adam.aslfms.receiver.MusicAPI getMusicAPI(android.content.Context,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.OrangeSqueezeReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.ControllerReceiverCallback: void onMetadataChanged(android.media.MediaMetadata)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.NPNotifier: boolean doRun(com.adam.aslfms.service.Handshaker$HandshakeResult)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.HuaweiReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.service.Handshaker: void run()>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
-$i1 < 19
try
Good road with try: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[[-$i1 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.AmazonMP3Receiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.SpotifyReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
-i2 < 19
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[[-i2 < 19]]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
try
Good road with try: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.MusicAPI: com.adam.aslfms.receiver.MusicAPI fromReceiver(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean)>[]--><com.adam.aslfms.util.Util: void myNotify(android.content.Context,java.lang.String,java.lang.String,int,android.content.Intent)>[[try]]--><com.adam.aslfms.util.Util: void initChannels(android.content.Context)>[[i0 >= 26]]--><android.app.NotificationChannel: void setSound(android.net.Uri,android.media.AudioAttributes)>
One road protect good!
containsStatic:false
containsTry:true
17call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
7call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SamsungMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SamsungMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProTrialReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProTrialReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SpotifyReceiver dummyMainMethod_com_adam_aslfms_receiver_SpotifyReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.OrangeSqueezeReceiver dummyMainMethod_com_adam_aslfms_receiver_OrangeSqueezeReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AmazonMP3Receiver dummyMainMethod_com_adam_aslfms_receiver_AmazonMP3Receiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SEMCMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_SEMCMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MIUIMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MIUIMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.PlayerProReceiver dummyMainMethod_com_adam_aslfms_receiver_PlayerProReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.RdioMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_RdioMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicJRTStudioBuildReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicJRTStudioBuildReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.SLSAPIReceiver dummyMainMethod_com_adam_aslfms_receiver_SLSAPIReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.WinampMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_WinampMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HuaweiReceiver dummyMainMethod_com_adam_aslfms_receiver_HuaweiReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.HeroMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_HeroMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.MyTouch4GMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_MyTouch4GMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.LgOptimus4xReceiver dummyMainMethod_com_adam_aslfms_receiver_LgOptimus4xReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_ScrobbleDroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.adam.aslfms.receiver.AndroidMusicReceiver dummyMainMethod_com_adam_aslfms_receiver_AndroidMusicReceiver(android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.adam.aslfms.receiver.AbstractPlayStatusReceiver: void dumpIntent(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
6 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#1.the call statck between class <com.adam.aslfms.receiver.RdioMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[]--><com.adam.aslfms.receiver.BuiltInMusicAppReceiver: long getAudioId(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#2.the call statck between class <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void parseTrack(android.content.Context,com.adam.aslfms.util.Track$Builder,android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.adam.aslfms.receiver.SLSAPIReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><com.adam.aslfms.receiver.SLSAPIReceiver: int getIntFromBundle(android.os.Bundle,java.lang.String,boolean)>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#4.the call statck between class <com.adam.aslfms.receiver.ScrobbleDroidMusicReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#5.the call statck between class <com.adam.aslfms.receiver.BuiltInMusicAppReceiver: void readTrackFromBundleData(com.adam.aslfms.util.Track$Builder,android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
#6.the call statck between class <com.adam.aslfms.receiver.LgOptimus4xReceiver: void parseIntent(android.content.Context,java.lang.String,android.os.Bundle)> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:26
crashApisInMain:17
containsStatic:false
containsTry:true
7call by main package
-----------------------------------------
crashApis numbers:26
crashApis numbers in main road:17
On Android Version 16 this app may have error api use(at least): 20 and error api roads: 97
On Android Version 17 this app may have error api use(at least): 20 and error api roads: 97
On Android Version 18 this app may have error api use(at least): 20 and error api roads: 97
On Android Version 19 this app may have error api use(at least): 20 and error api roads: 97
On Android Version 20 this app may have error api use(at least): 20 and error api roads: 97
On Android Version 21 this app may have error api use(at least): 6 and error api roads: 22
On Android Version 22 this app may have error api use(at least): 4 and error api roads: 12
On Android Version 23 this app may have error api use(at least): 4 and error api roads: 12
On Android Version 24 this app may have error api use(at least): 2 and error api roads: 10
On Android Version 25 this app may have error api use(at least): 2 and error api roads: 10
On Android Version 26 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 27 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 6 and error api roads: 6
