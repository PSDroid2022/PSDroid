/home/ys/桌面/benchmarkapps/Omni-Notes6.0.5.apk
Entry Points[it.feio.android.omninotes.GalleryActivity, it.feio.android.omninotes.MainActivity, org.acra.sender.SenderService, it.feio.android.omninotes.extensions.PushBulletExtension, it.feio.android.omninotes.services.NotificationListener, it.feio.android.omninotes.SettingsActivity, io.nlopez.smartlocation.geofencing.providers.GeofencingGooglePlayServicesProvider$GeofencingService, it.feio.android.omninotes.widget.ListWidgetProvider, it.feio.android.omninotes.OmniNotes, it.feio.android.omninotes.intro.IntroActivity, it.feio.android.omninotes.SnoozeActivity, it.feio.android.omninotes.ShortcutActivity, com.nhaarman.listviewanimations.itemmanipulation.dragdrop.DynamicListViewTestActivity, it.feio.android.omninotes.widget.ListWidgetService, it.feio.android.omninotes.async.AlarmRestoreOnRebootService, it.feio.android.omninotes.widget.SimpleWidgetProvider, io.nlopez.smartlocation.geocoding.providers.AndroidGeocodingProvider$AndroidGeocodingService, it.feio.android.omninotes.PasswordActivity, io.nlopez.smartlocation.activity.providers.ActivityGooglePlayServicesProvider$ActivityRecognitionService, it.feio.android.omninotes.AboutActivity, it.feio.android.omninotes.receiver.AlarmReceiver, it.feio.android.omninotes.StatsActivity, it.feio.android.omninotes.CategoryActivity, it.feio.android.omninotes.widget.WidgetConfigurationActivity, it.feio.android.omninotes.NoteInfosActivity, it.feio.android.omninotes.receiver.BootCompleteReceiver, it.feio.android.omninotes.async.DataBackupIntentService, com.nhaarman.listviewanimations.itemmanipulation.swipedismiss.SwipeTouchListenerTestActivity, org.acra.attachment.AcraContentProvider, it.feio.android.omninotes.extensions.ONDashClockExtension, com.tbruyelle.rxpermissions.ShadowActivity]
FllowDroidcallgraph size:18210
Soot started on Thu Aug 25 20:27:13 CST 2022
StaticCheck:<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>$yysi0 < 19
StaticCheck:<com.fourmob.datetimepicker.Utils: boolean isJellybeanOrLater()>$yysi0 < 16
StaticCheck:<com.fourmob.datetimepicker.Utils: boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager)>$yysi0 < 14
StaticCheck:$ys0 < 
StaticCheck:<com.google.android.gms.common.util.zzs: boolean zzcy(int)>< 
Soot finished on Thu Aug 25 20:27:49 CST 2022
Soot has run for 0 min. 36 sec.
Found 0 additional DEX files. Now visiting them one by one.
--------------------------------------------------------------------------------------------------------
Declared Min Sdk version is: 16
Declared Target Sdk version is: 28
Declared Max Sdk version is: -1
Collected 1868 Android APIs in the primary DEX file
Collected 0 Android APIs in the secondary DEX files
#################################################
N 0 Potential Issue API: SDKCheck of <android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>[]--><android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>
#1.the call statck between class <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)> to <android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>has compatibility isssues！
-----------------------------------------
crashApis:1
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 1 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller: java.util.List getAllSessions()> is checking!!!
The life time of api is [21,31]
35call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
34 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
#4.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void connect()> to <android.content.pm.PackageInstaller: java.util.List getAllSessions()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zznx$zza: void zzd(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
#9.the call statck between class <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)> to <android.content.pm.PackageInstaller: java.util.List getAllSessions()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller: java.util.List getAllSessions()>
One road protect good!
crashApis:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 2 Potential Issue API: SDKCheck of <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()> is checking!!!
The life time of api is [21,31]
35call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
34 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
#4.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void connect()> to <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zznx$zza: void zzd(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
#9.the call statck between class <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)> to <android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
One road protect good!
crashApis:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 3 Potential Issue API: SDKCheck of <android.app.Activity: void requestPermissions(java.lang.String[],int)> is checking!!!
The life time of api is [23,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: com.tbruyelle.rxpermissions.ShadowActivity dummyMainMethod_com_tbruyelle_rxpermissions_ShadowActivity(android.content.Intent)>[]--><com.tbruyelle.rxpermissions.ShadowActivity: void onCreate(android.os.Bundle)>[]--><com.tbruyelle.rxpermissions.ShadowActivity: void handleIntent(android.content.Intent)>[]--><android.app.Activity: void requestPermissions(java.lang.String[],int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.app.Activity: void requestPermissions(java.lang.String[],int)>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:4
crashApisInMain:1
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 4 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTint(int)> is checking!!!
The life time of api is [21,31]
62call roads:
1 Mainhead roads:
61 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
$i0 < 17
$i0 < 14
-$i0 < 14
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
$i0 < 17
$i0 < 14
-$i0 < 14
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
$i0 < 17
$i0 < 14
-$i0 < 14
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
$i0 < 17
$i0 < 14
-$i0 < 14
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]
$i0 < 17
$i0 < 14
-$i0 < 14
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><android.graphics.drawable.Drawable: void setTint(int)>
One road protect good!
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 5 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String)> is checking!!!
The life time of api is [21,31]
24call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.simplegallery.GalleryPagerFragment dummyMainMethod_it_feio_android_simplegallery_GalleryPagerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
23 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#1.the call statck between class <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zznu: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.analytics.internal.zzap: void zzkO()>[]--><com.google.android.gms.analytics.internal.zzap: void zzoF()>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#3.the call statck between class <com.google.android.gms.analytics.internal.zzap: void zzkO()> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzoj$zzc: void zzsh()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.larswerkman.holocolorpicker.OpacityBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#7.the call statck between class <com.larswerkman.holocolorpicker.OpacityBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <it.feio.android.omninotes.DetailFragment: void lambda$getLocation$6$DetailFragment(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.utils.GeocodeHelper: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.GeocodeProviderFactory: io.nlopez.smartlocation.location.LocationProvider getProvider(android.content.Context)>[]--><io.nlopez.smartlocation.location.providers.LocationGooglePlayServicesWithFallbackProvider: void <init>(android.content.Context)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.common.internal.zzj: java.lang.Object createFromParcel(android.os.Parcel)>[]--><com.google.android.gms.common.internal.zzj: com.google.android.gms.common.internal.GetServiceRequest zzak(android.os.Parcel)>[]--><com.google.android.gms.common.internal.GetServiceRequest: void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,long)>[]--><com.google.android.gms.common.internal.GetServiceRequest: android.accounts.Account zzaS(android.os.IBinder)>[]--><com.google.android.gms.common.internal.zza: android.accounts.Account zza(com.google.android.gms.common.internal.zzq)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.zze: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.zzf: boolean zza(android.content.pm.PackageManager,android.content.pm.PackageInfo)>[]--><com.google.android.gms.common.zze: boolean zzal(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzak(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: int getInt(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.fourmob.datetimepicker.date.DatePickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String)>
#10.the call statck between class <com.fourmob.datetimepicker.date.DatePickerDialog: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:5
crashApisInMain:2
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 6 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 7 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void setDescription(java.lang.String)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><it.feio.android.omninotes.OmniNotes: void onCreate()>[]--><it.feio.android.omninotes.utils.notifications.NotificationsHelper: void initNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationChannel: void setDescription(java.lang.String)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 8 Potential Issue API: SDKCheck of <android.content.Context: int checkSelfPermission(java.lang.String)> is checking!!!
The life time of api is [23,31]
62call roads:
1 Mainhead roads:
61 Packageshead roads:
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 9 Potential Issue API: SDKCheck of <android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 21
Good road: <org.acra.collector.MediaCodecListCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MediaCodecListCollector: org.json.JSONObject collectMediaCodecList()>[[$i0 >= 21]]--><android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 10 Potential Issue API: SDKCheck of <android.os.BaseBundle: long getLong(java.lang.String)> is checking!!!
The life time of api is [21,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.utils.date.TimePickerFragment: void onAttach(android.app.Activity)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
#1.the call statck between class <it.feio.android.omninotes.utils.date.TimePickerFragment: void onAttach(android.app.Activity)> to <android.os.BaseBundle: long getLong(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <be.billington.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
#2.the call statck between class <be.billington.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: long getLong(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.utils.date.DatePickerDialogFragment: void onAttach(android.app.Activity)>[]--><android.os.BaseBundle: long getLong(java.lang.String)>
#3.the call statck between class <it.feio.android.omninotes.utils.date.DatePickerDialogFragment: void onAttach(android.app.Activity)> to <android.os.BaseBundle: long getLong(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:6
containsStatic:false
containsTry:false
4call by main package
-----------------------------------------
#################################################
N 11 Potential Issue API: SDKCheck of <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)> is checking!!!
The life time of api is [28,31]
63call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.PasswordActivity dummyMainMethod_it_feio_android_omninotes_PasswordActivity(android.content.Intent)>[]--><it.feio.android.omninotes.PasswordActivity$$Lambda$2: void onClick(android.view.View)>[]--><it.feio.android.omninotes.PasswordActivity: void lambda$initViews$4$PasswordActivity(android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void resetPassword(android.app.Activity)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$7: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$resetPassword$7$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$9: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>[]--><it.feio.android.omninotes.SettingsFragment: boolean lambda$onResume$13$SettingsFragment(android.preference.SwitchPreference,android.preference.Preference,java.lang.Object)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.MainActivity dummyMainMethod_it_feio_android_omninotes_MainActivity(android.content.Intent)>[]--><it.feio.android.omninotes.MainActivity: void onResume()>[]--><it.feio.android.omninotes.MainActivity: void checkPassword()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>has compatibility isssues！
-----------------------------------------
62 Packageshead roads:
try
Good road with try: <rx.internal.operators.OperatorToObservableList$1: void onStart()>[]--><rx.Subscriber: void request(long)>[]--><rx.internal.operators.OperatorConcat$ConcatProducer: void request(long)>[]--><rx.internal.operators.OperatorConcat$ConcatSubscriber: void access$100(rx.internal.operators.OperatorConcat$ConcatSubscriber,long)>[]--><rx.internal.operators.OperatorConcat$ConcatSubscriber: void requestFromChild(long)>[]--><rx.internal.producers.ProducerArbiter: void request(long)>[[try]]--><rx.internal.operators.OperatorSubscribeOn$1$1$1$1: void request(long)>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0)>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <it.feio.android.omninotes.ListFragment: void lambda$initFab$0$ListFragment(int)>[]--><it.feio.android.omninotes.ListFragment: void editNote(it.feio.android.omninotes.models.Note,android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
#2.the call statck between class <it.feio.android.omninotes.ListFragment: void lambda$initFab$0$ListFragment(int)> to <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <com.fourmob.datetimepicker.date.DayPickerView$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
#3.the call statck between class <com.fourmob.datetimepicker.date.DayPickerView$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)> to <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <rx.internal.schedulers.EventLoopsScheduler$EventLoopWorker: rx.Subscription schedule(rx.functions.Action0)>[]--><rx.internal.schedulers.NewThreadWorker: rx.internal.schedulers.ScheduledAction scheduleActual(rx.functions.Action0,long,java.util.concurrent.TimeUnit,rx.internal.util.SubscriptionList)>[]--><rx.internal.schedulers.ScheduledAction: void add(java.util.concurrent.Future)>[]--><rx.internal.util.SubscriptionList: void add(rx.Subscription)>[]--><rx.internal.util.SubscriptionList: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.schedulers.ScheduledAction$Remover: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void remove(rx.Subscription)>[]--><rx.internal.schedulers.ScheduledAction$Remover2: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void remove(rx.Subscription)>[]--><rx.subscriptions.CompositeSubscription: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.operators.OperatorObserveOn$ScheduledUnsubscribe: void unsubscribe()>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0)>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 24 25 26 27 
Error road: <it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$1$PasswordHelper(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void resetPassword(android.app.Activity)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$7: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$resetPassword$7$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
#9.the call statck between class <it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$1$PasswordHelper(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)> to <android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber: void onTimeout(long)>[]--><rx.observers.SerializedSubscriber: void onError(java.lang.Throwable)>[]--><rx.internal.operators.OperatorSubscribeOn$1: void onError(java.lang.Throwable)>[]--><rx.internal.operators.OperatorConcat$ConcatSubscriber: void onError(java.lang.Throwable)>[]--><rx.Subscriber: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.schedulers.ScheduledAction$Remover: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void remove(rx.Subscription)>[]--><rx.internal.schedulers.ScheduledAction$Remover2: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void remove(rx.Subscription)>[]--><rx.subscriptions.CompositeSubscription: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.operators.OperatorObserveOn$ScheduledUnsubscribe: void unsubscribe()>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0)>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
try
Good road with try: <rx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber: void onTimeout(long)>[]--><rx.subscriptions.SerialSubscription: void set(rx.Subscription)>[]--><rx.subscriptions.MultipleAssignmentSubscription: void unsubscribe()>[]--><rx.internal.schedulers.ScheduledAction: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.schedulers.ScheduledAction$Remover: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void remove(rx.Subscription)>[]--><rx.internal.schedulers.ScheduledAction$Remover2: void unsubscribe()>[]--><rx.internal.util.SubscriptionList: void remove(rx.Subscription)>[]--><rx.subscriptions.CompositeSubscription: void unsubscribe()>[]--><rx.subscriptions.CompositeSubscription: void unsubscribeFromAll(java.util.Collection)>[[try]]--><rx.internal.operators.OperatorObserveOn$ScheduledUnsubscribe: void unsubscribe()>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0)>[]--><rx.android.schedulers.HandlerScheduler$HandlerWorker: rx.Subscription schedule(rx.functions.Action0,long,java.util.concurrent.TimeUnit)>[]--><android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>[]--><it.feio.android.omninotes.utils.PasswordHelper$$Lambda$4: void run()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$4$PasswordHelper(android.widget.EditText)>[]--><it.feio.android.omninotes.utils.KeyboardUtils: void showKeyboard(android.view.View)>[]--><android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
One road protect good!
crashApis:7
crashApisInMain:3
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 12 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 13 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.String getString(java.lang.String)> is checking!!!
The life time of api is [21,31]
42call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onAttach(android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void setTitle()>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.simplegallery.GalleryPagerFragment dummyMainMethod_it_feio_android_simplegallery_GalleryPagerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
41 Packageshead roads:
$i0 < 23
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[[$i0 < 23]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#1.the call statck between class <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzaj(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzao(android.content.Context)>[]--><com.google.android.gms.common.zze: void zzap(android.content.Context)>[[try]]--><com.google.android.gms.common.internal.zzy: int zzax(android.content.Context)>[]--><com.google.android.gms.common.internal.zzy: void zzay(android.content.Context)>[[try]]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zznx$zza: void zzd(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.ListFragment: void onActivityCreated(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.String getString(java.lang.String)>
#10.the call statck between class <it.feio.android.omninotes.ListFragment: void onActivityCreated(android.os.Bundle)> to <android.os.BaseBundle: java.lang.String getString(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:8
crashApisInMain:4
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 14 Potential Issue API: SDKCheck of <android.os.BaseBundle: int getInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
10call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.widget.WidgetConfigurationActivity dummyMainMethod_it_feio_android_omninotes_widget_WidgetConfigurationActivity(android.content.Intent)>[]--><it.feio.android.omninotes.widget.WidgetConfigurationActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
9 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int subIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#1.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1500(com.afollestad.materialdialogs.color.ColorChooserDialog,int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void topIndex(int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#2.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1500(com.afollestad.materialdialogs.color.ColorChooserDialog,int)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#3.the call statck between class <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$2200(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#4.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$2200(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$000(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getSelectedColor()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#5.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$000(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$2500(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int subIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#6.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$2500(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$600(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getSelectedColor()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#7.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: int access$600(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void topIndex(int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getSelectedColor()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#8.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getSelectedColor()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getSelectedColor()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void topIndex(int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int topIndex()>[]--><android.os.BaseBundle: int getInt(java.lang.String,int)>
#9.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)> to <android.os.BaseBundle: int getInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:9
crashApisInMain:5
containsStatic:false
containsTry:false
10call by main package
-----------------------------------------
#################################################
N 15 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)> is checking!!!
The life time of api is [19,31]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.async.DataBackupIntentService dummyMainMethod_it_feio_android_omninotes_async_DataBackupIntentService(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void onHandleIntent(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void importDataFromSpringpad(android.content.Intent,it.feio.android.omninotes.utils.notifications.NotificationsHelper)>[]--><it.feio.android.omninotes.helpers.SpringImportHelper: void importDataFromSpringpad(android.content.Intent,it.feio.android.omninotes.utils.notifications.NotificationsHelper)>[[try]]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[]--><android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
One road protect good!
3 Packageshead roads:
!!!this api will crash on sdk 16 17 18 
Error road: <it.feio.android.omninotes.SettingsFragment: void onActivityResult(int,int,android.content.Intent)>[]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[]--><android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
#1.the call statck between class <it.feio.android.omninotes.SettingsFragment: void onActivityResult(int,int,android.content.Intent)> to <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <it.feio.android.omninotes.async.AttachmentTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><it.feio.android.omninotes.async.AttachmentTask: it.feio.android.omninotes.models.Attachment doInBackground(java.lang.Void[])>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[]--><android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.ListFragment: void onEventAsync(it.feio.android.omninotes.async.bus.NotesMergeEvent)>[]--><it.feio.android.omninotes.helpers.NotesHelper: it.feio.android.omninotes.models.Note mergeNotes(java.util.List,boolean)>[]--><it.feio.android.omninotes.helpers.NotesHelper: void addAttachments(boolean,it.feio.android.omninotes.models.Note,java.util.ArrayList)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[]--><android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
One road protect good!
crashApis:10
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 16 Potential Issue API: SDKCheck of <android.app.AppOpsManager: void checkPackage(int,java.lang.String)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.google.android.gms.common.internal.zzj: java.lang.Object createFromParcel(android.os.Parcel)>[]--><com.google.android.gms.common.internal.zzj: com.google.android.gms.common.internal.GetServiceRequest zzak(android.os.Parcel)>[]--><com.google.android.gms.common.internal.GetServiceRequest: void <init>(int,int,int,java.lang.String,android.os.IBinder,com.google.android.gms.common.api.Scope[],android.os.Bundle,android.accounts.Account,long)>[]--><com.google.android.gms.common.internal.GetServiceRequest: android.accounts.Account zzaS(android.os.IBinder)>[]--><com.google.android.gms.common.internal.zza: android.accounts.Account zza(com.google.android.gms.common.internal.zzq)>[[try]]--><com.google.android.gms.common.internal.zza: android.accounts.Account getAccount()>[]--><com.google.android.gms.common.zze: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zze(android.content.Context,int)>[]--><com.google.android.gms.common.util.zzy: boolean zzd(android.content.Context,int,java.lang.String)>[]--><com.google.android.gms.internal.zzpv: boolean zzg(int,java.lang.String)>[[try]]--><android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 17 Potential Issue API: SDKCheck of <android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
64call roads:
1 Mainhead roads:
63 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.SeekBar,int)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$000(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.SeekBar,int)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:true
64call by main package
-----------------------------------------
#################################################
N 18 Potential Issue API: SDKCheck of <android.content.res.Configuration: android.os.LocaleList getLocales()> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.NoteInfosActivity dummyMainMethod_it_feio_android_omninotes_NoteInfosActivity(android.content.Intent)>[]--><it.feio.android.omninotes.NoteInfosActivity: void onCreate(android.os.Bundle)>[]--><it.feio.android.omninotes.NoteInfosActivity: void populateViews(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.NotesHelper: it.feio.android.omninotes.models.StatsSingleNote getNoteInfos(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.NotesHelper: int getWords(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.count.CountFactory: it.feio.android.omninotes.helpers.count.WordCounter getWordCounter()>[]--><it.feio.android.omninotes.helpers.LanguageHelper: java.lang.String getCurrentLocale(android.content.Context)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
1 Packageshead roads:
-$i0 < 24
Good road: <it.feio.android.omninotes.StatsActivity$1StatsTask: it.feio.android.omninotes.models.Stats doInBackground(java.lang.Void[])>[]--><it.feio.android.omninotes.db.DbHelper: it.feio.android.omninotes.models.Stats getStats()>[]--><it.feio.android.omninotes.helpers.NotesHelper: int getChars(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.count.CountFactory: it.feio.android.omninotes.helpers.count.WordCounter getWordCounter()>[]--><it.feio.android.omninotes.helpers.LanguageHelper: java.lang.String getCurrentLocale(android.content.Context)>[[-$i0 < 24]]--><android.content.res.Configuration: android.os.LocaleList getLocales()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 19 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyTintForDrawable(android.graphics.drawable.Drawable,me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 20 Potential Issue API: SDKCheck of <android.content.Context: android.content.res.ColorStateList getColorStateList(int)> is checking!!!
The life time of api is [23,31]
12call roads:
1 Mainhead roads:
$i1 > 22
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.MainActivity dummyMainMethod_it_feio_android_omninotes_MainActivity(android.content.Intent)>[]--><it.feio.android.omninotes.MainActivity: void onResume()>[]--><it.feio.android.omninotes.MainActivity: void checkPassword()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.PasswordActivity dummyMainMethod_it_feio_android_omninotes_PasswordActivity(android.content.Intent)>[]--><it.feio.android.omninotes.PasswordActivity$$Lambda$1: void onClick(android.view.View)>[]--><it.feio.android.omninotes.PasswordActivity: void lambda$initViews$3$PasswordActivity(android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$9: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>[]--><it.feio.android.omninotes.SettingsFragment: boolean lambda$onResume$13$SettingsFragment(android.preference.SwitchPreference,android.preference.Preference,java.lang.Object)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
11 Packageshead roads:
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment: void lambda$deleteNotes$12$ListFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.BaseActivity: void requestPassword(android.app.Activity,java.util.List,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment: void lambda$initFab$0$ListFragment(int)>[]--><it.feio.android.omninotes.ListFragment: void editNote(it.feio.android.omninotes.models.Note,android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment: void lambda$onEvent$10$ListFragment(android.view.ViewGroup,int[])>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment: void lambda$initListView$4$ListFragment(android.widget.AdapterView,android.view.View,int,long)>[]--><it.feio.android.omninotes.ListFragment: void editNote(it.feio.android.omninotes.models.Note,android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void lockNote()>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment$3: void onClick(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.BaseActivity: void requestPassword(android.app.Activity,java.util.List,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment$ModeCallback: boolean onActionItemClicked(android.support.v7.view.ActionMode,android.view.MenuItem)>[]--><it.feio.android.omninotes.BaseActivity: void requestPassword(android.app.Activity,java.util.List,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder negativeColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.ListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.BaseActivity: void requestPassword(android.app.Activity,java.util.List,it.feio.android.omninotes.models.PasswordValidator)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void requestPassword(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder positiveColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: android.content.res.ColorStateList getActionTextColorStateList(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: android.content.res.ColorStateList getColorStateList(int)>
One road protect good!
containsStatic:false
containsTry:false
12call by main package
-----------------------------------------
#################################################
N 21 Potential Issue API: SDKCheck of <android.os.Looper: void quitSafely()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 18
Good road: <org.acra.interaction.ToastInteraction: void lambda$performInteraction$0$ToastInteraction(android.os.Looper)>[[-$i0 < 18]]--><android.os.Looper: void quitSafely()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 22 Potential Issue API: SDKCheck of <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()> is checking!!!
The life time of api is [21,31]
35call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
34 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
#4.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void connect()> to <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zznx$zza: void zzd(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
#9.the call statck between class <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)> to <android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
One road protect good!
crashApis:11
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 23 Potential Issue API: SDKCheck of <android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$000(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.SeekBar,int)>[[-$i1 < 21]]--><android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onClick(android.view.View)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidateDynamicButtonColors()>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.SeekBar,int)>[[-$i1 < 21]]--><android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 24 Potential Issue API: SDKCheck of <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)> is checking!!!
The life time of api is [1,30]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.neopixl.pixlui.components.textview.EllipsizingTextView: void onDraw(android.graphics.Canvas)>[]--><com.neopixl.pixlui.components.textview.EllipsizingTextView: void resetText()>[]--><com.neopixl.pixlui.components.textview.EllipsizingTextView: android.text.Layout createWorkingLayout(java.lang.String)>[]--><android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
#1.the call statck between class <com.neopixl.pixlui.components.textview.EllipsizingTextView: void onDraw(android.graphics.Canvas)> to <android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:12
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 25 Potential Issue API: SDKCheck of <android.content.Context: java.lang.Object getSystemService(java.lang.Class)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.Context: java.lang.Object getSystemService(java.lang.Class)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 26 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 27 Potential Issue API: SDKCheck of <android.view.Display: java.lang.String getName()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectName(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: java.lang.String getName()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 28 Potential Issue API: SDKCheck of <android.app.Fragment: android.app.Fragment getParentFragment()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 17
Good road: <com.bumptech.glide.manager.RequestManagerFragment: java.lang.String toString()>[]--><com.bumptech.glide.manager.RequestManagerFragment: android.app.Fragment getParentFragmentUsingHint()>[[-$i0 < 17]]--><android.app.Fragment: android.app.Fragment getParentFragment()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 29 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
11call roads:
0 Mainhead roads:
11 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#1.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#2.the call statck between class <com.google.android.gms.internal.zznu: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.SaturationBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#3.the call statck between class <com.larswerkman.holocolorpicker.SaturationBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$500(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidate()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getTitle()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#4.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$500(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.SVBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#5.the call statck between class <com.larswerkman.holocolorpicker.SVBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.OpacityBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#6.the call statck between class <com.larswerkman.holocolorpicker.OpacityBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: boolean access$200(com.afollestad.materialdialogs.color.ColorChooserDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#7.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: boolean access$200(com.afollestad.materialdialogs.color.ColorChooserDialog)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void toggleCustom(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getTitle()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void invalidate()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: int getTitle()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#8.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$100(com.afollestad.materialdialogs.color.ColorChooserDialog,com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void toggleCustom(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: boolean isInSub()>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#9.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$100(com.afollestad.materialdialogs.color.ColorChooserDialog,com.afollestad.materialdialogs.MaterialDialog)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.ValueBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>
#10.the call statck between class <com.larswerkman.holocolorpicker.ValueBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:13
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 30 Potential Issue API: SDKCheck of <android.os.LocaleList: java.util.Locale get(int)> is checking!!!
The life time of api is [24,31]
2call roads:
1 Mainhead roads:
-$i0 < 24
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.NoteInfosActivity dummyMainMethod_it_feio_android_omninotes_NoteInfosActivity(android.content.Intent)>[]--><it.feio.android.omninotes.NoteInfosActivity: void onCreate(android.os.Bundle)>[]--><it.feio.android.omninotes.NoteInfosActivity: void populateViews(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.NotesHelper: it.feio.android.omninotes.models.StatsSingleNote getNoteInfos(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.NotesHelper: int getWords(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.count.CountFactory: it.feio.android.omninotes.helpers.count.WordCounter getWordCounter()>[]--><it.feio.android.omninotes.helpers.LanguageHelper: java.lang.String getCurrentLocale(android.content.Context)>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
1 Packageshead roads:
-$i0 < 24
Good road: <it.feio.android.omninotes.StatsActivity$1StatsTask: it.feio.android.omninotes.models.Stats doInBackground(java.lang.Void[])>[]--><it.feio.android.omninotes.db.DbHelper: it.feio.android.omninotes.models.Stats getStats()>[]--><it.feio.android.omninotes.helpers.NotesHelper: int getChars(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.helpers.count.CountFactory: it.feio.android.omninotes.helpers.count.WordCounter getWordCounter()>[]--><it.feio.android.omninotes.helpers.LanguageHelper: java.lang.String getCurrentLocale(android.content.Context)>[[-$i0 < 24]]--><android.os.LocaleList: java.util.Locale get(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 31 Potential Issue API: SDKCheck of <android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><it.feio.android.omninotes.OmniNotes: void onCreate()>[]--><it.feio.android.omninotes.utils.notifications.NotificationsHelper: void initNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationChannel: void <init>(java.lang.String,java.lang.CharSequence,int)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 32 Potential Issue API: SDKCheck of <android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
62call roads:
1 Mainhead roads:
61 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 33 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putLong(java.lang.String,long)> is checking!!!
The life time of api is [21,31]
2call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SnoozeActivity dummyMainMethod_it_feio_android_omninotes_SnoozeActivity(android.content.Intent)>[]--><it.feio.android.omninotes.SnoozeActivity: void onCreate(android.os.Bundle)>[]--><it.feio.android.omninotes.SnoozeActivity: void manageNotification(android.content.SharedPreferences)>[]--><it.feio.android.omninotes.SnoozeActivity: void postpone(android.content.SharedPreferences,java.lang.Long,java.lang.String)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void pick(java.lang.Long,java.lang.String)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void showDatePickerDialog(long)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.DetailFragment: void lambda$initViewReminder$2$DetailFragment(android.view.View)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void pick(java.lang.Long,java.lang.String)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void showDatePickerDialog(long)>[]--><android.os.BaseBundle: void putLong(java.lang.String,long)>
#1.the call statck between class <it.feio.android.omninotes.DetailFragment: void lambda$initViewReminder$2$DetailFragment(android.view.View)> to <android.os.BaseBundle: void putLong(java.lang.String,long)>has compatibility isssues！
-----------------------------------------
crashApis:14
crashApisInMain:6
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 34 Potential Issue API: SDKCheck of <android.media.MediaCodecList: void <init>(int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 21
Good road: <org.acra.collector.MediaCodecListCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MediaCodecListCollector: org.json.JSONObject collectMediaCodecList()>[[$i0 >= 21]]--><android.media.MediaCodecList: void <init>(int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 35 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
66call roads:
1 Mainhead roads:
65 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
$i0 < 17
$i0 < 14
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
$i0 < 17
$i0 < 14
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
$i0 < 17
$i0 < 14
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
$i0 < 17
$i0 < 14
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]
$i0 < 17
$i0 < 14
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 14]]--><me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminateHorizontalRect2(java.lang.Object)>[]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:true
66call by main package
-----------------------------------------
#################################################
N 36 Potential Issue API: SDKCheck of <android.os.SystemClock: long elapsedRealtimeNanos()> is checking!!!
The life time of api is [17,31]
144call roads:
1 Mainhead roads:
143 Packageshead roads:
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.google.android.gms.tagmanager.zzw: void zza(java.util.List,long)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: void initThumbnail(it.feio.android.omninotes.models.Note,it.feio.android.omninotes.models.holders.NoteViewHolder)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.data.HttpUrlFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.data.HttpUrlFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.engine.EngineJob$MainThreadCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.engine.EngineJob: void handleResultOnMainThread()>[]--><com.bumptech.glide.request.SingleRequest: void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.request.SingleRequest: void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.resource.bitmap.Downsampler: void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.google.android.gms.tagmanager.zzw: void zza(com.google.android.gms.tagmanager.DataLayer$zzc$zza)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzod$zza: void zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: void onConnectivityChanged(boolean)>[]--><com.bumptech.glide.manager.RequestTracker: void restartRequests()>[]--><com.bumptech.glide.request.ThumbnailRequestCoordinator: void begin()>[]--><com.bumptech.glide.request.ErrorRequestCoordinator: void begin()>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzod$zze: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzod$zzd$1: void zzrX()>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.internal.zzod,com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: void initThumbnail(it.feio.android.omninotes.models.Note,it.feio.android.omninotes.models.holders.NoteViewHolder)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
-$i0 < 17
Good road: <com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[]--><com.bumptech.glide.util.LogTime: long getLogTime()>[[-$i0 < 17]]--><android.os.SystemClock: long elapsedRealtimeNanos()>
One road protect good!
containsStatic:false
containsTry:true
144call by main package
-----------------------------------------
#################################################
N 37 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIntent(android.content.Intent)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 38 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean isEmpty()> is checking!!!
The life time of api is [21,31]
5call roads:
0 Mainhead roads:
5 Packageshead roads:
try
Good road with try: <com.google.android.gms.internal.zznw: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzoh: void onConnected(android.os.Bundle)>[[try]]--><com.google.android.gms.internal.zzod: void onConnected(android.os.Bundle)>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zzod$zze: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzod$zzd$1: void zzrX()>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.internal.zzod,com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><android.os.BaseBundle: boolean isEmpty()>
#3.the call statck between class <com.google.android.gms.internal.zzod$zzd$1: void zzrX()> to <android.os.BaseBundle: boolean isEmpty()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zzod$zza: void zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
try
Good road with try: <com.google.android.gms.internal.zznw: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzoh: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,int)>[[try]]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.common.ConnectionResult,com.google.android.gms.common.api.Api,int)>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><android.os.BaseBundle: boolean isEmpty()>
One road protect good!
crashApis:15
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 39 Potential Issue API: SDKCheck of <android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)> is checking!!!
The life time of api is [26,31]
1call roads:
1 Mainhead roads:
-$i0 < 26
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><it.feio.android.omninotes.OmniNotes: void onCreate()>[]--><it.feio.android.omninotes.utils.notifications.NotificationsHelper: void initNotificationChannels()>[[-$i0 < 26]]--><android.app.NotificationManager: void createNotificationChannel(android.app.NotificationChannel)>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 40 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 41 Potential Issue API: SDKCheck of <android.graphics.Bitmap: int getAllocationByteCount()> is checking!!!
The life time of api is [19,31]
150call roads:
1 Mainhead roads:
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimToSize(long)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimToSize(long)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.receiver.AlarmReceiver dummyMainMethod_it_feio_android_omninotes_receiver_AlarmReceiver(android.content.Intent)>[]--><com.bumptech.glide.Glide: void onTrimMemory(int)>[]--><com.bumptech.glide.Glide: void trimMemory(int)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimMemory(int)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void clearMemory()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimToSize(long)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
149 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key)>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void decodeFromRetrievedData()>[]--><com.bumptech.glide.load.engine.DecodeJob: void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.engine.LockedResource: void unlock()>[[try]]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key)>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void decodeFromRetrievedData()>[]--><com.bumptech.glide.load.engine.DecodeJob: void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.engine.LockedResource: void unlock()>[[try]]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key)>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void decodeFromRetrievedData()>[]--><com.bumptech.glide.load.engine.DecodeJob: void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.engine.LockedResource: void unlock()>[[try]]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <android.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource)>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void recycleFirstFrame()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.google.android.gms.tagmanager.zzw: void zza(java.util.List,long)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: void initThumbnail(it.feio.android.omninotes.models.Note,it.feio.android.omninotes.models.holders.NoteViewHolder)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
-$i0 < 19
Good road: <com.bumptech.glide.load.resource.bitmap.Downsampler: void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long)>[]--><com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getBitmapString(android.graphics.Bitmap)>[[-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.Engine: void onResourceRemoved(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.google.android.gms.tagmanager.zzw: void zza(com.google.android.gms.tagmanager.DataLayer$zzc$zza)>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.gms.internal.zzod$zza: void zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.google.android.gms.internal.zzod$zza: void zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.google.android.gms.internal.zzod$zza: void zzh(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String logBitmap(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifBitmapProvider: void release(android.graphics.Bitmap)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: void onConnectivityChanged(boolean)>[]--><com.bumptech.glide.manager.RequestTracker: void restartRequests()>[]--><com.bumptech.glide.request.ThumbnailRequestCoordinator: void begin()>[]--><com.bumptech.glide.request.ErrorRequestCoordinator: void begin()>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.google.android.gms.internal.zzod$zze: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.google.android.gms.internal.zzod$zze: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.google.android.gms.internal.zzod$zze: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zzod: void zzj(com.google.android.gms.internal.zzod)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.engine.LockedResource: void recycle()>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.gif.GifFrameLoader: void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()>[]--><com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.google.android.gms.internal.zzod$zzd$1: void zzrX()>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.internal.zzod,com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zza(com.google.android.gms.signin.internal.SignInResponse)>[]--><com.google.android.gms.internal.zzod: void zzrZ()>[]--><com.google.android.gms.internal.zzod: void zzsa()>[]--><com.google.android.gms.internal.zzod: void zzsb()>[]--><com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)>[]--><com.bumptech.glide.load.engine.DecodeJob: void run()>[[try]]--><com.bumptech.glide.load.engine.DecodeJob: void runWrapped()>[]--><com.bumptech.glide.load.engine.DecodeJob: void runGenerators()>[]--><com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()>[]--><com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>[]--><com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
-$i0 < 19
Good road: <com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options)>[]--><com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getBitmapString(android.graphics.Bitmap)>[[-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.cache.LruResourceCache: int getSize(java.lang.Object)>[]--><com.bumptech.glide.load.engine.cache.LruResourceCache: int getSize(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: int getSize()>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><it.feio.android.omninotes.models.adapters.NoteAdapter: void initThumbnail(it.feio.android.omninotes.models.Note,it.feio.android.omninotes.models.holders.NoteViewHolder)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)>[]--><com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestOptions)>[]--><com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)>[]--><com.bumptech.glide.request.SingleRequest: void begin()>[]--><com.bumptech.glide.request.target.SimpleTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)>[]--><com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback)>[]--><com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean)>[]--><com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)>[]--><com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)>[]--><com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)>[]--><com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[[$i6 < 19]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[[$i6 < 19]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
$i6 < 19
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[[$i6 < 19]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]
###Multi invoking in one method, need manual check!!!<com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try]][[-$i0 < 19]]
try
Good road with try: <com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)>[]--><com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)>[[try], [-$i0 < 19]]--><android.graphics.Bitmap: int getAllocationByteCount()>
One road protect good!
containsStatic:false
containsTry:true
150call by main package
-----------------------------------------
#################################################
N 42 Potential Issue API: SDKCheck of <android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)> is checking!!!
The life time of api is [23,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.graphics.drawable.Icon: android.graphics.drawable.Icon createWithResource(android.content.Context,int)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 43 Potential Issue API: SDKCheck of <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> is checking!!!
The life time of api is [1,30]
147call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
146 Packageshead roads:
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void init(android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void initAdapter()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.bumptech.glide.manager.DefaultConnectivityMonitor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void init(android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void initAdapter()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsActivity: void lambda$onFolderSelection$1$SettingsActivity(java.io.File,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogRecyclerView$ParseAsyncTask: it.gmariotti.changelibs.library.internal.ChangeLog doInBackground(java.lang.Void[])>[[try]]--><it.gmariotti.changelibs.library.parser.XmlParser: it.gmariotti.changelibs.library.internal.ChangeLog readChangeLogFile()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.bumptech.glide.manager.RequestManagerFragment: void onStart()>[]--><com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingService: void onCreate()>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsService: void onCreate()>[]--><com.google.android.gms.analytics.internal.zzak: void onCreate()>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzaj: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingService: void onDestroy()>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.internal.zzag: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzag: boolean zzod()>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsService: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.internal.zzak: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsService: void onDestroy()>[]--><com.google.android.gms.analytics.internal.zzak: void onDestroy()>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <com.bumptech.glide.manager.SupportRequestManagerFragment: void onStart()>[]--><com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogListView$ParseAsyncTask: it.gmariotti.changelibs.library.internal.ChangeLog doInBackground(java.lang.Void[])>[[try]]--><it.gmariotti.changelibs.library.parser.XmlParser: it.gmariotti.changelibs.library.internal.ChangeLog readChangeLogFile()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[[try]]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
One road protect good!
!!!this api will crash on sdk 31 
Error road: <it.feio.android.omninotes.utils.GeocodeHelper$1: void onNext(android.location.Location)>[]--><it.feio.android.omninotes.DetailFragment$OnGeoUtilResultListenerImpl: void onLocationRetrieved(android.location.Location)>[]--><it.feio.android.omninotes.utils.ConnectionManager: boolean internetAvailable(android.content.Context)>[]--><android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
#117.the call statck between class <it.feio.android.omninotes.utils.GeocodeHelper$1: void onNext(android.location.Location)> to <android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>has compatibility isssues！
-----------------------------------------
crashApis:16
containsStatic:false
containsTry:true
118call by main package
-----------------------------------------
#################################################
N 44 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutInfo.Builder: void <init>(android.content.Context,java.lang.String)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 45 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean containsKey(java.lang.String)> is checking!!!
The life time of api is [21,31]
11call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onAttach(android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void setTitle()>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
10 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.utils.date.TimePickerFragment: void onAttach(android.app.Activity)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#1.the call statck between class <it.feio.android.omninotes.utils.date.TimePickerFragment: void onAttach(android.app.Activity)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
-$i0 < 23
Good road: <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[[-$i0 < 23]]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.larswerkman.holocolorpicker.SVBar: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#3.the call statck between class <com.larswerkman.holocolorpicker.SVBar: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.sleepbot.datetimepicker.time.TimePickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#4.the call statck between class <com.sleepbot.datetimepicker.time.TimePickerDialog: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#5.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#6.the call statck between class <it.feio.android.omninotes.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)>[]--><com.google.android.gms.location.ActivityRecognitionResult: boolean zzc(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#7.the call statck between class <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.utils.date.DatePickerDialogFragment: void onAttach(android.app.Activity)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#8.the call statck between class <it.feio.android.omninotes.utils.date.DatePickerDialogFragment: void onAttach(android.app.Activity)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: com.afollestad.materialdialogs.color.ColorChooserDialog$Builder getBuilder()>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#9.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: com.afollestad.materialdialogs.color.ColorChooserDialog$Builder getBuilder()> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.sleepbot.datetimepicker.time.TimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean containsKey(java.lang.String)>
#10.the call statck between class <com.sleepbot.datetimepicker.time.TimePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean containsKey(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:17
crashApisInMain:7
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 46 Potential Issue API: SDKCheck of <android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)> is checking!!!
The life time of api is [27,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)>[[-$i4 < 27]]--><com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)>[[try]]--><android.media.MediaMetadataRetriever: android.graphics.Bitmap getScaledFrameAtTime(long,int,int,int)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 47 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)> is checking!!!
The life time of api is [21,31]
9call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.MainActivity dummyMainMethod_it_feio_android_omninotes_MainActivity(android.content.Intent)>[]--><it.feio.android.omninotes.MainActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SnoozeActivity dummyMainMethod_it_feio_android_omninotes_SnoozeActivity(android.content.Intent)>[]--><it.feio.android.omninotes.SnoozeActivity: void onTimeSet(android.widget.TimePicker,int,int)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void onTimeSet(android.widget.TimePicker,int,int)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void showRecurrencePickerDialog(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
8 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#1.the call statck between class <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.signin.internal.zzg: android.os.Bundle zza(com.google.android.gms.common.internal.zzg)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#2.the call statck between class <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.signin.internal.zzg: android.os.Bundle zzoO()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#3.the call statck between class <com.google.android.gms.signin.internal.zzg: android.os.Bundle zzoO()> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.ListFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#4.the call statck between class <it.feio.android.omninotes.ListFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.SettingsFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>[]--><it.feio.android.omninotes.SettingsActivity: void switchToScreen(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#5.the call statck between class <it.feio.android.omninotes.SettingsFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.location.internal.zzb: android.os.Bundle zzoO()>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#6.the call statck between class <com.google.android.gms.location.internal.zzb: android.os.Bundle zzoO()> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: void onSelection(com.afollestad.materialdialogs.MaterialDialog,android.view.View,int,java.lang.CharSequence)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#7.the call statck between class <com.afollestad.materialdialogs.folderselector.FolderChooserDialog: void onSelection(com.afollestad.materialdialogs.MaterialDialog,android.view.View,int,java.lang.CharSequence)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.utils.date.ReminderPickers: void lambda$null$0$ReminderPickers(com.sleepbot.datetimepicker.time.RadialPickerLayout,int,int)>[]--><it.feio.android.omninotes.utils.date.ReminderPickers: void showRecurrencePickerDialog(java.lang.String)>[]--><android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
#8.the call statck between class <it.feio.android.omninotes.utils.date.ReminderPickers: void lambda$null$0$ReminderPickers(com.sleepbot.datetimepicker.time.RadialPickerLayout,int,int)> to <android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:18
crashApisInMain:8
containsStatic:false
containsTry:false
9call by main package
-----------------------------------------
#################################################
N 48 Potential Issue API: SDKCheck of <android.os.StatFs: long getBlockCountLong()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 18
Good road: <org.acra.collector.MemoryInfoCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MemoryInfoCollector: long getTotalInternalMemorySize()>[[-$i0 < 18]]--><android.os.StatFs: long getBlockCountLong()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 49 Potential Issue API: SDKCheck of <android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.internal.zzoj$zzc: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzoj: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,android.app.PendingIntent)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,java.lang.String,android.app.PendingIntent)>[]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
#1.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> to <android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.GoogleApiActivity: void zza(int,com.google.android.gms.internal.zzoj)>[]--><com.google.android.gms.internal.zzoj: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.internal.zzoj: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,android.app.PendingIntent)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,java.lang.String,android.app.PendingIntent)>[]--><android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
#2.the call statck between class <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)> to <android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>has compatibility isssues！
-----------------------------------------
crashApis:19
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 50 Potential Issue API: SDKCheck of <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.internal.MDRootLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <com.afollestad.materialdialogs.internal.MDRootLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:20
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 51 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)> is checking!!!
The life time of api is [22,31]
17call roads:
0 Mainhead roads:
17 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <it.feio.android.omninotes.DetailFragment: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#1.the call statck between class <it.feio.android.omninotes.DetailFragment: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
-$i1 != 19
road!!!this api will crash on sdk 19
Error road(E): <com.google.android.gms.internal.zzoj$zzc: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzoj: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,android.app.PendingIntent)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,java.lang.String,android.app.PendingIntent)>[[-$i1 != 19]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#2.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void onConnectionFailed(com.google.android.gms.common.ConnectionResult)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
-$i1 != 19
road!!!this api will crash on sdk 19
Error road(E): <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)>[]--><com.google.android.gms.common.api.GoogleApiActivity: void zza(int,com.google.android.gms.internal.zzoj)>[]--><com.google.android.gms.internal.zzoj: void zza(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.internal.zzoj: boolean zzc(com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GoogleApiAvailability: void zza(android.content.Context,com.google.android.gms.common.ConnectionResult,int)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,android.app.PendingIntent)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: void zza(int,android.content.Context,java.lang.String,android.app.PendingIntent)>[[-$i1 != 19]]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#3.the call statck between class <com.google.android.gms.common.api.GoogleApiActivity: void onActivityResult(int,int,android.content.Intent)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <it.feio.android.simplegallery.views.TouchImageView: android.os.Parcelable onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#4.the call statck between class <it.feio.android.simplegallery.views.TouchImageView: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.ColorPicker: android.os.Parcelable onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#5.the call statck between class <com.larswerkman.holocolorpicker.ColorPicker: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.sleepbot.datetimepicker.time.TimePickerDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#6.the call statck between class <com.sleepbot.datetimepicker.time.TimePickerDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.ValueBar: android.os.Parcelable onSaveInstanceState()>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#7.the call statck between class <com.larswerkman.holocolorpicker.ValueBar: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#8.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.signin.internal.zzg: android.os.Bundle zza(com.google.android.gms.common.internal.zzg)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#9.the call statck between class <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.google.android.gms.internal.zznu: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>
#10.the call statck between class <com.google.android.gms.internal.zznu: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putBoolean(java.lang.String,boolean)>has compatibility isssues！
-----------------------------------------
crashApis:21
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 52 Potential Issue API: SDKCheck of <android.os.StatFs: long getBlockSizeLong()> is checking!!!
The life time of api is [18,31]
3call roads:
0 Mainhead roads:
3 Packageshead roads:
-$i0 < 18
Good road: <org.acra.collector.MemoryInfoCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MemoryInfoCollector: long getAvailableInternalMemorySize()>[[-$i0 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
-$i0 < 18
Good road: <org.acra.collector.MemoryInfoCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MemoryInfoCollector: long getTotalInternalMemorySize()>[[-$i0 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try], [-$i0 < 18]]
###Multi invoking in one method, need manual check!!!--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try]][[-$i0 < 18]]
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$29$SettingsFragment(java.util.List,com.afollestad.materialdialogs.MaterialDialog,android.widget.AdapterView,android.view.View,int,long)>[]--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try], [-$i0 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
###Multi invoking in one method, need manual check!!!--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try], [-$i0 < 18]]
###Multi invoking in one method, need manual check!!!--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try]][[-$i0 < 18]]
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: boolean lambda$null$31$SettingsFragment(java.util.List,com.afollestad.materialdialogs.MaterialDialog,android.widget.AdapterView,android.view.View,int,long)>[]--><it.feio.android.omninotes.utils.StorageHelper: long getSize(java.io.File)>[[try], [-$i0 < 18]]--><android.os.StatFs: long getBlockSizeLong()>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 53 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo build()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 54 Potential Issue API: SDKCheck of <android.service.notification.StatusBarNotification: java.lang.String getPackageName()> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.services.NotificationListener dummyMainMethod_it_feio_android_omninotes_services_NotificationListener(android.content.Intent)>[]--><it.feio.android.omninotes.services.NotificationListener: void onNotificationRemoved(android.service.notification.StatusBarNotification)>[]--><android.service.notification.StatusBarNotification: java.lang.String getPackageName()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.service.notification.StatusBarNotification: java.lang.String getPackageName()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:22
crashApisInMain:9
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 55 Potential Issue API: SDKCheck of <android.os.PowerManager: boolean isInteractive()> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <com.google.android.gms.analytics.AnalyticsReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzaj: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.google.android.gms.internal.zztx: void acquire(long)>[]--><com.google.android.gms.internal.zztx: void zzj(java.lang.String,long)>[[try]]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzj: int zzaD(android.content.Context)>[]--><com.google.android.gms.common.util.zzj: boolean zzb(android.os.PowerManager)>[]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsService: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.internal.zzak: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.internal.zzak: void zzkp()>[[try]]--><com.google.android.gms.internal.zztx: void release()>[]--><com.google.android.gms.internal.zztx: void zzgd(java.lang.String)>[[try]]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzj: int zzaD(android.content.Context)>[]--><com.google.android.gms.common.util.zzj: boolean zzb(android.os.PowerManager)>[]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingService: int onStartCommand(android.content.Intent,int,int)>[]--><com.google.android.gms.analytics.CampaignTrackingService: void zzkp()>[[try]]--><com.google.android.gms.internal.zztx: void release()>[]--><com.google.android.gms.internal.zztx: void zzgd(java.lang.String)>[[try]]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List)>[]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzj: int zzaD(android.content.Context)>[]--><com.google.android.gms.common.util.zzj: boolean zzb(android.os.PowerManager)>[]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><com.google.android.gms.internal.zztx: void acquire(long)>[]--><com.google.android.gms.internal.zztx: void zzj(java.lang.String,long)>[[try]]--><com.google.android.gms.common.stats.zzh: void zza(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)>[]--><com.google.android.gms.common.util.zzj: int zzaD(android.content.Context)>[]--><com.google.android.gms.common.util.zzj: boolean zzb(android.os.PowerManager)>[]--><android.os.PowerManager: boolean isInteractive()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 56 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.lang.Object get(java.lang.String)> is checking!!!
The life time of api is [21,31]
27call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SnoozeActivity dummyMainMethod_it_feio_android_omninotes_SnoozeActivity(android.content.Intent)>[]--><it.feio.android.omninotes.SnoozeActivity: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.receiver.AlarmReceiver dummyMainMethod_it_feio_android_omninotes_receiver_AlarmReceiver(android.content.Intent)>[]--><it.feio.android.omninotes.receiver.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><it.feio.android.omninotes.receiver.AlarmReceiver: void createNotification(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: io.nlopez.smartlocation.activity.providers.ActivityGooglePlayServicesProvider$ActivityRecognitionService dummyMainMethod_io_nlopez_smartlocation_activity_providers_ActivityGooglePlayServicesProvider$ActivityRecognitionService(android.content.Intent)>[]--><io.nlopez.smartlocation.activity.providers.ActivityGooglePlayServicesProvider$ActivityRecognitionService: void onHandleIntent(android.content.Intent)>[]--><com.google.android.gms.location.ActivityRecognitionResult: com.google.android.gms.location.ActivityRecognitionResult extractResult(android.content.Intent)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.simplegallery.GalleryPagerFragment dummyMainMethod_it_feio_android_simplegallery_GalleryPagerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.os.BaseBundle: java.lang.Object get(java.lang.String)>has compatibility isssues！
-----------------------------------------
26 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.AttachmentAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.widget.ListRemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.lang.Object get(java.lang.String)>
One road protect good!
crashApis:23
crashApisInMain:10
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 57 Potential Issue API: SDKCheck of <android.content.res.Configuration: int getLayoutDirection()> is checking!!!
The life time of api is [17,31]
64call roads:
1 Mainhead roads:
63 Packageshead roads:
$i0 < 17
$i0 >= 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]]--><com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)>[]--><com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 < 17
$i0 >= 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]]--><com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)>[]--><com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 >= 17
Good road: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.DefaultAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.DefaultAdapter: void setupGravity(android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.DefaultAdapter: boolean isRTL()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 < 17
$i0 >= 17
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]]--><com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)>[]--><com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 < 17
$i0 >= 17
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]]--><com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)>[]--><com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 >= 17
Good road: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.DefaultAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.DefaultAdapter: void setupGravity(android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.DefaultAdapter: boolean isRTL()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
$i0 < 17
$i0 >= 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]]--><com.afollestad.materialdialogs.internal.MDRootLayout: void setButtonGravity(com.afollestad.materialdialogs.GravityEnum)>[]--><com.afollestad.materialdialogs.internal.MDRootLayout: void invertGravityIfNecessary()>[[$i0 >= 17]]--><android.content.res.Configuration: int getLayoutDirection()>
One road protect good!
containsStatic:false
containsTry:true
64call by main package
-----------------------------------------
#################################################
N 58 Potential Issue API: SDKCheck of <android.app.Activity: boolean isDestroyed()> is checking!!!
The life time of api is [17,31]
5call roads:
1 Mainhead roads:
4 Packageshead roads:
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 59 Potential Issue API: SDKCheck of <android.os.BaseBundle: boolean getBoolean(java.lang.String)> is checking!!!
The life time of api is [22,31]
7call roads:
0 Mainhead roads:
7 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <be.billington.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#1.the call statck between class <be.billington.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#2.the call statck between class <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <it.feio.android.simplegallery.views.TouchImageView: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#3.the call statck between class <it.feio.android.simplegallery.views.TouchImageView: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.sleepbot.datetimepicker.time.TimePickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#4.the call statck between class <com.sleepbot.datetimepicker.time.TimePickerDialog: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.apps.dashclock.api.DashClockExtension: void onCreate()>[]--><com.google.android.apps.dashclock.api.DashClockExtension: void loadMetaData()>[[try]]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.fourmob.datetimepicker.date.DatePickerDialog: void onCreate(android.os.Bundle)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#6.the call statck between class <com.fourmob.datetimepicker.date.DatePickerDialog: void onCreate(android.os.Bundle)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 
Error road: <com.larswerkman.holocolorpicker.ColorPicker: void onRestoreInstanceState(android.os.Parcelable)>[]--><android.os.BaseBundle: boolean getBoolean(java.lang.String)>
#7.the call statck between class <com.larswerkman.holocolorpicker.ColorPicker: void onRestoreInstanceState(android.os.Parcelable)> to <android.os.BaseBundle: boolean getBoolean(java.lang.String)>has compatibility isssues！
-----------------------------------------
crashApis:24
containsStatic:false
containsTry:true
8call by main package
-----------------------------------------
#################################################
N 60 Potential Issue API: SDKCheck of <android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
-$i0 < 21
Good road: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.DefaultAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.RadioButton,int)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
-$i0 < 21
Good road: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.DefaultAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.RadioButton,int)>[[-$i0 < 21]]--><android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
3call by main package
-----------------------------------------
#################################################
N 61 Potential Issue API: SDKCheck of <android.service.notification.StatusBarNotification: java.lang.String getTag()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 
Error road: <it.feio.android.omninotes.services.NotificationListener: void onEventAsync(it.feio.android.omninotes.async.bus.NotificationRemovedEvent)>[]--><android.service.notification.StatusBarNotification: java.lang.String getTag()>
#1.the call statck between class <it.feio.android.omninotes.services.NotificationListener: void onEventAsync(it.feio.android.omninotes.async.bus.NotificationRemovedEvent)> to <android.service.notification.StatusBarNotification: java.lang.String getTag()>has compatibility isssues！
-----------------------------------------
crashApis:25
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 62 Potential Issue API: SDKCheck of <android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)> is checking!!!
The life time of api is [19,31]
6call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.async.DataBackupIntentService dummyMainMethod_it_feio_android_omninotes_async_DataBackupIntentService(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void onHandleIntent(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void importData(android.content.Intent)>[[try]]--><it.feio.android.omninotes.async.DataBackupIntentService: void resetReminders()>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SnoozeActivity dummyMainMethod_it_feio_android_omninotes_SnoozeActivity(android.content.Intent)>[]--><it.feio.android.omninotes.SnoozeActivity: void onCreate(android.os.Bundle)>[]--><it.feio.android.omninotes.SnoozeActivity: void manageNotification(android.content.SharedPreferences)>[]--><it.feio.android.omninotes.SnoozeActivity: void updateNoteReminder(long,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.SnoozeActivity: void updateNoteReminder(long,it.feio.android.omninotes.models.Note,boolean)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.receiver.AlarmReceiver dummyMainMethod_it_feio_android_omninotes_receiver_AlarmReceiver(android.content.Intent)>[]--><it.feio.android.omninotes.receiver.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><it.feio.android.omninotes.SnoozeActivity: void setNextRecurrentReminder(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.SnoozeActivity: void updateNoteReminder(long,it.feio.android.omninotes.models.Note,boolean)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.async.AlarmRestoreOnRebootService dummyMainMethod_it_feio_android_omninotes_async_AlarmRestoreOnRebootService(android.content.Intent)>[]--><it.feio.android.omninotes.async.AlarmRestoreOnRebootService: void onHandleWork(android.content.Intent)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
5 Packageshead roads:
-$i1 < 19
Good road: <it.feio.android.omninotes.async.notes.SaveNoteTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><it.feio.android.omninotes.async.notes.SaveNoteTask: it.feio.android.omninotes.models.Note doInBackground(it.feio.android.omninotes.models.Note[])>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <it.feio.android.omninotes.async.upgrade.UpgradeProcessor: void onUpgradeTo482()>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void trashNote(boolean)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <it.feio.android.omninotes.utils.date.ReminderPickers: void onRecurrenceSet(java.lang.String)>[]--><it.feio.android.omninotes.SnoozeActivity: void onRecurrenceReminderPicked(java.lang.String)>[]--><it.feio.android.omninotes.SnoozeActivity: void setNextRecurrentReminder(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.SnoozeActivity: void updateNoteReminder(long,it.feio.android.omninotes.models.Note,boolean)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
-$i1 < 19
Good road: <it.feio.android.omninotes.async.notes.NoteProcessorTrash: void processNote(it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.ReminderHelper: void addReminder(android.content.Context,it.feio.android.omninotes.models.Note,long)>[[-$i1 < 19]]--><android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
One road protect good!
containsStatic:false
containsTry:true
6call by main package
-----------------------------------------
#################################################
N 63 Potential Issue API: SDKCheck of <android.animation.AnimatorSet: void <init>()> is checking!!!
The life time of api is [24,31]
69call roads:
1 Mainhead roads:
68 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <it.feio.android.omninotes.ListFragment: void lambda$editNote$7$ListFragment(it.feio.android.omninotes.models.Note,android.view.View,it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.utils.AnimationsHelper: void zoomListItem(android.content.Context,android.view.View,android.widget.ImageView,android.view.View,android.animation.AnimatorListenerAdapter)>[]--><android.animation.AnimatorSet: void <init>()>
#6.the call statck between class <it.feio.android.omninotes.ListFragment: void lambda$editNote$7$ListFragment(it.feio.android.omninotes.models.Note,android.view.View,it.feio.android.omninotes.models.PasswordValidator$Result)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <com.getbase.floatingactionbutton.FloatingActionsMenu: void <init>(android.content.Context)>[]--><com.getbase.floatingactionbutton.FloatingActionsMenu: void <init>(android.content.Context,android.util.AttributeSet)>[]--><android.animation.AnimatorSet: void <init>()>
#7.the call statck between class <com.getbase.floatingactionbutton.FloatingActionsMenu: void <init>(android.content.Context)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <com.getbase.floatingactionbutton.FloatingActionsMenu: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><android.animation.AnimatorSet: void <init>()>
#8.the call statck between class <com.getbase.floatingactionbutton.FloatingActionsMenu: void <init>(android.content.Context,android.util.AttributeSet,int)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 23 
Error road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.MaterialProgressBar: void init(android.content.Context,android.util.AttributeSet,int,int)>[]--><me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable: void <init>(android.content.Context)>[]--><me.zhanghai.android.materialprogressbar.Animators: android.animation.Animator createIndeterminate(java.lang.Object)>[]--><android.animation.AnimatorSet: void <init>()>
#10.the call statck between class <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context)> to <android.animation.AnimatorSet: void <init>()>has compatibility isssues！
-----------------------------------------
crashApis:26
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 64 Potential Issue API: SDKCheck of <android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
63call roads:
1 Mainhead roads:
62 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.MaterialDialog$3: void onTextChanged(java.lang.CharSequence,int,int,int)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupInputDialog(com.afollestad.materialdialogs.MaterialDialog)>[]--><com.afollestad.materialdialogs.MaterialDialog: void invalidateInputMinMaxIndicator(int,boolean)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.EditText,int)>[[-$i1 < 21]]--><android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:true
63call by main package
-----------------------------------------
#################################################
N 65 Potential Issue API: SDKCheck of <android.os.BaseBundle: void putInt(java.lang.String,int)> is checking!!!
The life time of api is [21,31]
15call roads:
0 Mainhead roads:
15 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1500(com.afollestad.materialdialogs.color.ColorChooserDialog,int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void topIndex(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#1.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1500(com.afollestad.materialdialogs.color.ColorChooserDialog,int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1600(com.afollestad.materialdialogs.color.ColorChooserDialog,int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void subIndex(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#2.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void access$1600(com.afollestad.materialdialogs.color.ColorChooserDialog,int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void findSubIndexForColor(int,int)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void subIndex(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void subIndex(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog: void topIndex(int)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#3.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: android.app.Dialog onCreateDialog(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.simplegallery.views.TouchImageView: android.os.Parcelable onSaveInstanceState()>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#4.the call statck between class <it.feio.android.simplegallery.views.TouchImageView: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.larswerkman.holocolorpicker.ColorPicker: android.os.Parcelable onSaveInstanceState()>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#5.the call statck between class <com.larswerkman.holocolorpicker.ColorPicker: android.os.Parcelable onSaveInstanceState()> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.simplegallery.models.GalleryPagerAdapter: android.support.v4.app.Fragment getItem(int)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: it.feio.android.simplegallery.GalleryPagerFragment create(int,android.net.Uri)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#6.the call statck between class <it.feio.android.simplegallery.models.GalleryPagerAdapter: android.support.v4.app.Fragment getItem(int)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.sleepbot.datetimepicker.time.TimePickerDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#7.the call statck between class <com.sleepbot.datetimepicker.time.TimePickerDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#8.the call statck between class <com.google.android.gms.common.api.GoogleApiActivity: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#9.the call statck between class <com.afollestad.materialdialogs.color.ColorChooserDialog: void onSaveInstanceState(android.os.Bundle)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)>[]--><com.google.android.gms.signin.internal.zzg: android.os.Bundle zza(com.google.android.gms.common.internal.zzg)>[]--><android.os.BaseBundle: void putInt(java.lang.String,int)>
#10.the call statck between class <com.google.android.gms.signin.internal.zzg: void <init>(android.content.Context,android.os.Looper,boolean,com.google.android.gms.common.internal.zzg,com.google.android.gms.internal.zztw,com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)> to <android.os.BaseBundle: void putInt(java.lang.String,int)>has compatibility isssues！
-----------------------------------------
crashApis:27
containsStatic:false
containsTry:false
11call by main package
-----------------------------------------
#################################################
N 66 Potential Issue API: SDKCheck of <android.os.StatFs: long getAvailableBlocksLong()> is checking!!!
The life time of api is [18,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 18
Good road: <org.acra.collector.MemoryInfoCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[]--><org.acra.collector.MemoryInfoCollector: long getAvailableInternalMemorySize()>[[-$i0 < 18]]--><android.os.StatFs: long getAvailableBlocksLong()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 67 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutManager: boolean isRequestPinShortcutSupported()>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 68 Potential Issue API: SDKCheck of <android.view.Display: void getRealSize(android.graphics.Point)> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectRealSize(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: void getRealSize(android.graphics.Point)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 69 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnectedOrConnecting()> is checking!!!
The life time of api is [1,30]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void init(android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogRecyclerView: void initAdapter()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogRecyclerView$ParseAsyncTask: it.gmariotti.changelibs.library.internal.ChangeLog doInBackground(java.lang.Void[])>[[try]]--><it.gmariotti.changelibs.library.parser.XmlParser: it.gmariotti.changelibs.library.internal.ChangeLog readChangeLogFile()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogListView$ParseAsyncTask: it.gmariotti.changelibs.library.internal.ChangeLog doInBackground(java.lang.Void[])>[[try]]--><it.gmariotti.changelibs.library.parser.XmlParser: it.gmariotti.changelibs.library.internal.ChangeLog readChangeLogFile()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
try
Good road with try: <it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void init(android.util.AttributeSet,int)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void initAdapter()>[[try]]--><it.gmariotti.changelibs.library.Util: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnectedOrConnecting()>
One road protect good!
containsStatic:false
containsTry:true
5call by main package
-----------------------------------------
#################################################
N 70 Potential Issue API: SDKCheck of <android.os.BaseBundle: java.util.Set keySet()> is checking!!!
The life time of api is [21,31]
11call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.receiver.AlarmReceiver dummyMainMethod_it_feio_android_omninotes_receiver_AlarmReceiver(android.content.Intent)>[]--><it.feio.android.omninotes.receiver.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><it.feio.android.omninotes.receiver.AlarmReceiver: void createNotification(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.simplegallery.GalleryPagerFragment dummyMainMethod_it_feio_android_simplegallery_GalleryPagerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
10 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.AttachmentAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.content.Context)>[[try]]--><com.bumptech.glide.manager.SupportRequestManagerFragment: void registerFragmentWithRoot(android.support.v4.app.FragmentActivity)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.AttachmentAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)>[[try]]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.gif.GifDrawable: void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.widget.ListRemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)>[]--><com.google.android.gms.location.ActivityRecognitionResult: boolean zzc(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: java.util.Set keySet()>
#8.the call statck between class <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)> to <android.os.BaseBundle: java.util.Set keySet()>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.module.ManifestParser: java.util.List parse()>[[try]]--><android.os.BaseBundle: java.util.Set keySet()>
One road protect good!
crashApis:28
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 71 Potential Issue API: SDKCheck of <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)> is checking!!!
The life time of api is [19,31]
4call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.async.DataBackupIntentService dummyMainMethod_it_feio_android_omninotes_async_DataBackupIntentService(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void onHandleIntent(android.content.Intent)>[]--><it.feio.android.omninotes.async.DataBackupIntentService: void importDataFromSpringpad(android.content.Intent,it.feio.android.omninotes.utils.notifications.NotificationsHelper)>[]--><it.feio.android.omninotes.helpers.SpringImportHelper: void importDataFromSpringpad(android.content.Intent,it.feio.android.omninotes.utils.notifications.NotificationsHelper)>[[try]]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[[-$i0 < 19]]--><android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
One road protect good!
3 Packageshead roads:
-$i0 < 19
Good road: <it.feio.android.omninotes.SettingsFragment: void onActivityResult(int,int,android.content.Intent)>[]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[[-$i0 < 19]]--><android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.async.AttachmentTask: java.lang.Object doInBackground(java.lang.Object[])>[]--><it.feio.android.omninotes.async.AttachmentTask: it.feio.android.omninotes.models.Attachment doInBackground(java.lang.Void[])>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[[-$i0 < 19]]--><android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.ListFragment: void onEventAsync(it.feio.android.omninotes.async.bus.NotesMergeEvent)>[]--><it.feio.android.omninotes.helpers.NotesHelper: it.feio.android.omninotes.models.Note mergeNotes(java.util.List,boolean)>[]--><it.feio.android.omninotes.helpers.NotesHelper: void addAttachments(boolean,it.feio.android.omninotes.models.Note,java.util.ArrayList)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri)>[]--><it.feio.android.omninotes.utils.StorageHelper: it.feio.android.omninotes.models.Attachment createAttachmentFromUri(android.content.Context,android.net.Uri,boolean)>[]--><it.feio.android.omninotes.utils.StorageHelper: java.io.File createExternalStoragePrivateFile(android.content.Context,android.net.Uri,java.lang.String)>[[try]]--><it.feio.android.omninotes.utils.FileHelper: java.lang.String getPath(android.content.Context,android.net.Uri)>[[-$i0 < 19]]--><android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
One road protect good!
containsStatic:false
containsTry:true
4call by main package
-----------------------------------------
#################################################
N 72 Potential Issue API: SDKCheck of <android.content.ContentProvider: java.lang.String getCallingPackage()> is checking!!!
The life time of api is [19,31]
1call roads:
1 Mainhead roads:
-$i0 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: org.acra.attachment.AcraContentProvider dummyMainMethod_org_acra_attachment_AcraContentProvider(android.content.Intent)>[]--><org.acra.attachment.AcraContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>[[-$i0 < 19]]--><android.content.ContentProvider: java.lang.String getCallingPackage()>
One road protect good!
0 Packageshead roads:
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 73 Potential Issue API: SDKCheck of <android.graphics.Bitmap: void setPremultiplied(boolean)> is checking!!!
The life time of api is [19,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)>[[try]]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void normalize(android.graphics.Bitmap)>[]--><com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void maybeSetPreMultiplied(android.graphics.Bitmap)>[[-$i0 < 19]]--><android.graphics.Bitmap: void setPremultiplied(boolean)>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 74 Potential Issue API: SDKCheck of <android.media.ExifInterface: void <init>(java.io.InputStream)> is checking!!!
The life time of api is [24,31]
2call roads:
0 Mainhead roads:
2 Packageshead roads:
try
Good road with try: <com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)>[]--><com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[[try]]--><com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.data.mediastore.ThumbFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>[[try]]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.io.InputStream openThumbInputStream()>[]--><com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: int getOrientation(android.net.Uri)>[[try]]--><com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[[try]]--><com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)>[]--><android.media.ExifInterface: void <init>(java.io.InputStream)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 75 Potential Issue API: SDKCheck of <android.view.Display: int getFlags()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectFlags(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: int getFlags()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 76 Potential Issue API: SDKCheck of <android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
62call roads:
1 Mainhead roads:
61 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]
$i0 < 17
$i0 < 14
$i0 < 14
-$i1 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [$i0 < 14]]--><com.afollestad.materialdialogs.DialogInit: void setupProgressDialog(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 14]]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int)>[]--><com.afollestad.materialdialogs.internal.MDTintHelper: void setTint(android.widget.ProgressBar,int,boolean)>[[-$i1 < 21]]--><android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 77 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
62call roads:
1 Mainhead roads:
61 Packageshead roads:
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
$i0 < 17
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
$i0 < 17
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
$i0 < 17
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
$i0 < 17
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
###Multi invoking in one method, need manual check!!!--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17]][[-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]
$i0 < 17
-$i0 < 14
-$i0 < 21
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[$i0 < 17], [-$i0 < 14]]--><com.afollestad.materialdialogs.MaterialDialog: android.graphics.drawable.Drawable getButtonSelector(com.afollestad.materialdialogs.DialogAction,boolean)>[[-$i0 < 21]]--><com.afollestad.materialdialogs.util.RippleHelper: void applyColor(android.graphics.drawable.Drawable,int)>[]--><android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:true
62call by main package
-----------------------------------------
#################################################
N 78 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)> is checking!!!
The life time of api is [25,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setShortLabel(java.lang.CharSequence)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 79 Potential Issue API: SDKCheck of <android.view.Display: boolean isValid()> is checking!!!
The life time of api is [17,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectIsValid(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: boolean isValid()>
One road protect good!
containsStatic:false
containsTry:true
2call by main package
-----------------------------------------
#################################################
N 80 Potential Issue API: SDKCheck of <android.net.NetworkInfo: boolean isConnected()> is checking!!!
The life time of api is [1,30]
143call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.bumptech.glide.RequestManager$1: void run()>[]--><com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
One road protect good!
142 Packageshead roads:
!!!this api will crash on sdk 31 
Error road: <com.bumptech.glide.manager.DefaultConnectivityMonitor$1: void onReceive(android.content.Context,android.content.Intent)>[]--><com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)>[]--><android.net.NetworkInfo: boolean isConnected()>
#1.the call statck between class <com.bumptech.glide.manager.DefaultConnectivityMonitor$1: void onReceive(android.content.Context,android.content.Intent)> to <android.net.NetworkInfo: boolean isConnected()>has compatibility isssues！
-----------------------------------------
crashApis:29
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 81 Potential Issue API: SDKCheck of <android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [21,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
-$i1 < 21
Good road: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog$ColorGridAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[[-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$i1 < 21
Good road: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog$ColorGridAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[[-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[[-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
-$i1 < 21
Good road: <com.afollestad.materialdialogs.color.CircleView: void setBackgroundResource(int)>[]--><com.afollestad.materialdialogs.color.CircleView: void setBackgroundColor(int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[[-$i1 < 21]]--><android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
One road protect good!
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 82 Potential Issue API: SDKCheck of <android.app.ActivityManager: boolean isLowRamDevice()> is checking!!!
The life time of api is [19,31]
10call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.receiver.AlarmReceiver dummyMainMethod_it_feio_android_omninotes_receiver_AlarmReceiver(android.content.Intent)>[]--><it.feio.android.omninotes.receiver.AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>[[try]]--><it.feio.android.omninotes.receiver.AlarmReceiver: void createNotification(android.content.Context,it.feio.android.omninotes.models.Note)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.simplegallery.GalleryPagerFragment dummyMainMethod_it_feio_android_simplegallery_GalleryPagerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.simplegallery.GalleryPagerFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.support.v4.app.Fragment)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
9 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.AttachmentAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><it.feio.android.omninotes.models.adapters.AttachmentAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)>[]--><com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)>[]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)>[[try]]--><com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)>[]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options)>[[try]]--><com.bumptech.glide.load.resource.gif.GifDrawable: void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.widget.ListRemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getBitmapFromAttachment(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[]--><it.feio.android.omninotes.utils.BitmapHelper: android.graphics.Bitmap getImageBitmap(android.content.Context,it.feio.android.omninotes.models.Attachment,int,int)>[[try]]--><com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)>[]--><com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
try
Good road with try: <com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)>[]--><com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)>[]--><com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>[[try]]--><com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context)>[]--><com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder)>[]--><com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)>[]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: void <init>(android.content.Context)>[[-$i0 < 26]]--><com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)>[[-$i0 < 19]]--><android.app.ActivityManager: boolean isLowRamDevice()>
One road protect good!
containsStatic:true
containsTry:true
10call by main package
-----------------------------------------
#################################################
N 83 Potential Issue API: SDKCheck of <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:30
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 84 Potential Issue API: SDKCheck of <android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.afollestad.materialdialogs.internal.MDButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>[]--><android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
#1.the call statck between class <com.afollestad.materialdialogs.internal.MDButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)> to <android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>has compatibility isssues！
-----------------------------------------
crashApis:31
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 85 Potential Issue API: SDKCheck of <android.view.View: void setForeground(android.graphics.drawable.Drawable)> is checking!!!
The life time of api is [23,31]
4call roads:
0 Mainhead roads:
4 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog$ColorGridAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#1.the call statck between class <it.feio.android.omninotes.async.MainMenuTask: void onPostExecute(java.lang.Object)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)>[]--><it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.util.List)>[]--><it.feio.android.omninotes.models.views.NonScrollableListView: void justifyListViewHeightBasedOnChildren()>[]--><com.afollestad.materialdialogs.color.ColorChooserDialog$ColorGridAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#2.the call statck between class <it.feio.android.omninotes.async.CategoryMenuTask: void onPostExecute(java.lang.Object)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet,int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#3.the call statck between class <com.afollestad.materialdialogs.color.CircleView: void <init>(android.content.Context,android.util.AttributeSet)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
!!!this api will crash on sdk 16 17 18 19 20 21 22 
Error road: <com.afollestad.materialdialogs.color.CircleView: void setBackgroundResource(int)>[]--><com.afollestad.materialdialogs.color.CircleView: void setBackgroundColor(int)>[]--><com.afollestad.materialdialogs.color.CircleView: void update(int)>[]--><android.view.View: void setForeground(android.graphics.drawable.Drawable)>
#4.the call statck between class <com.afollestad.materialdialogs.color.CircleView: void setBackgroundResource(int)> to <android.view.View: void setForeground(android.graphics.drawable.Drawable)>has compatibility isssues！
-----------------------------------------
crashApis:32
containsStatic:false
containsTry:false
5call by main package
-----------------------------------------
#################################################
N 86 Potential Issue API: SDKCheck of <android.content.Context: int getColor(int)> is checking!!!
The life time of api is [23,31]
63call roads:
1 Mainhead roads:
$i1 > 22
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.PasswordActivity dummyMainMethod_it_feio_android_omninotes_PasswordActivity(android.content.Intent)>[]--><it.feio.android.omninotes.PasswordActivity$$Lambda$2: void onClick(android.view.View)>[]--><it.feio.android.omninotes.PasswordActivity: void lambda$initViews$4$PasswordActivity(android.view.View)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void resetPassword(android.app.Activity)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder contentColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
62 Packageshead roads:
$i1 > 22
Good road: <it.feio.android.omninotes.utils.PasswordHelper: void lambda$requestPassword$1$PasswordHelper(android.app.Activity,it.feio.android.omninotes.models.PasswordValidator,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void resetPassword(android.app.Activity)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder contentColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <com.afollestad.materialdialogs.color.CircleView: void setBackgroundResource(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.utils.PasswordHelper: void resetPassword(android.app.Activity)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog$Builder contentColorRes(int)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
$i1 > 22
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: void <init>(android.content.Context)>[]--><com.afollestad.materialdialogs.util.DialogUtils: int getColor(android.content.Context,int)>[[$i1 > 22]]--><android.content.Context: int getColor(int)>
One road protect good!
containsStatic:false
containsTry:true
63call by main package
-----------------------------------------
#################################################
N 87 Potential Issue API: SDKCheck of <android.view.Display: void getRealMetrics(android.util.DisplayMetrics)> is checking!!!
The life time of api is [17,31]
3call roads:
1 Mainhead roads:
-$i0 < 19
Good road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.MainActivity dummyMainMethod_it_feio_android_omninotes_MainActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.NavigationDrawerFragment dummyMainMethod_it_feio_android_omninotes_NavigationDrawerFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.NavigationDrawerFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.NavigationDrawerFragment: void init()>[[-$i0 < 19]]--><it.feio.android.omninotes.utils.Display: int getNavigationBarHeightKitkat(android.content.Context)>[]--><it.feio.android.omninotes.utils.Display: android.graphics.Point getScreenDimensions(android.content.Context)>[]--><android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
One road protect good!
2 Packageshead roads:
try
Good road with try: <org.acra.collector.DisplayManagerCollector: void collect(org.acra.ReportField,android.content.Context,org.acra.config.CoreConfiguration,org.acra.builder.ReportBuilder,org.acra.data.CrashReportData)>[[try]]--><org.acra.collector.DisplayManagerCollector: org.json.JSONObject collectDisplayData(android.view.Display)>[]--><org.acra.collector.DisplayManagerCollector: void collectRealMetrics(android.view.Display,org.json.JSONObject)>[[-$i0 < 17]]--><android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
One road protect good!
-$i0 < 19
Good road: <it.feio.android.omninotes.NavigationDrawerFragment: void onEvent(it.feio.android.omninotes.async.bus.NotesLoadedEvent)>[]--><it.feio.android.omninotes.NavigationDrawerFragment: void init()>[[-$i0 < 19]]--><it.feio.android.omninotes.utils.Display: int getNavigationBarHeightKitkat(android.content.Context)>[]--><it.feio.android.omninotes.utils.Display: android.graphics.Point getScreenDimensions(android.content.Context)>[]--><android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
One road protect good!
containsStatic:false
containsTry:true
3call by main package
-----------------------------------------
#################################################
N 88 Potential Issue API: SDKCheck of <android.widget.AbsListView: void setSelectionFromTop(int,int)> is checking!!!
The life time of api is [21,31]
25call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
24 Packageshead roads:
try
Good road with try: <com.google.android.gms.analytics.AnalyticsReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzaj: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
#2.the call statck between class <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)> to <android.widget.AbsListView: void setSelectionFromTop(int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.BaseFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.AnalyticsService: void onDestroy()>[]--><com.google.android.gms.analytics.internal.zzak: void onDestroy()>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <it.feio.android.omninotes.ListFragment: void onEvent(it.feio.android.omninotes.async.bus.NotesLoadedEvent)>[]--><it.feio.android.omninotes.ListFragment: void restoreListScrollPosition()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
#6.the call statck between class <it.feio.android.omninotes.ListFragment: void onEvent(it.feio.android.omninotes.async.bus.NotesLoadedEvent)> to <android.widget.AbsListView: void setSelectionFromTop(int,int)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.fourmob.datetimepicker.date.YearPickerView$1: void run()>[]--><android.widget.AbsListView: void setSelectionFromTop(int,int)>
One road protect good!
crashApis:33
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 89 Potential Issue API: SDKCheck of <android.view.View: void setTextAlignment(int)> is checking!!!
The life time of api is [17,31]
63call roads:
1 Mainhead roads:
62 Packageshead roads:
-$i0 < 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1000(it.feio.android.omninotes.DetailFragment,android.view.View)>[]--><it.feio.android.omninotes.DetailFragment: void startRecording(android.view.View)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1900(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void displayLocationDialog()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
-$i0 < 17
Good road: <com.afollestad.materialdialogs.internal.MDRootLayout: void onMeasure(int,int)>[]--><com.afollestad.materialdialogs.internal.MDButton: void setStacked(boolean,boolean)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.DetailFragment: void lambda$checkNoteLock$1$DetailFragment(it.feio.android.omninotes.models.PasswordValidator$Result)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.DetailFragment: void onActivityCreated(android.os.Bundle)>[]--><it.feio.android.omninotes.DetailFragment: void init()>[]--><it.feio.android.omninotes.DetailFragment: void initViews()>[]--><it.feio.android.omninotes.DetailFragment: void initViewLocation()>[]--><it.feio.android.omninotes.DetailFragment: void getLocation(it.feio.android.omninotes.models.listeners.OnGeoUtilResultListener)>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
-$i0 < 17
Good road: <it.feio.android.omninotes.DetailFragment: void access$1700(it.feio.android.omninotes.DetailFragment)>[]--><it.feio.android.omninotes.DetailFragment: void askReadExternalStoragePermission()>[]--><it.feio.android.omninotes.helpers.PermissionsHelper: void requestPermission(android.app.Activity,java.lang.String,int,android.view.View,it.feio.android.omninotes.models.listeners.OnPermissionRequestedListener)>[]--><it.feio.android.omninotes.SettingsFragment$$Lambda$33: void onPermissionGranted()>[]--><it.feio.android.omninotes.SettingsFragment: void lambda$null$0$SettingsFragment(android.view.View)>[]--><it.feio.android.omninotes.SettingsFragment: void export(android.view.View)>[]--><com.afollestad.materialdialogs.MaterialDialog$Builder: com.afollestad.materialdialogs.MaterialDialog build()>[]--><com.afollestad.materialdialogs.MaterialDialog: void <init>(com.afollestad.materialdialogs.MaterialDialog$Builder)>[]--><com.afollestad.materialdialogs.DialogInit: void init(com.afollestad.materialdialogs.MaterialDialog)>[[-$i0 < 17]]--><android.view.View: void setTextAlignment(int)>
One road protect good!
containsStatic:false
containsTry:true
63call by main package
-----------------------------------------
#################################################
N 90 Potential Issue API: SDKCheck of <android.os.BaseBundle: int size()> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
!!!this api will crash on sdk 16 17 18 19 20 
Error road: <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)>[]--><com.google.android.gms.location.ActivityRecognitionResult: boolean zzc(android.os.Bundle,android.os.Bundle)>[]--><android.os.BaseBundle: int size()>
#1.the call statck between class <com.google.android.gms.location.ActivityRecognitionResult: boolean equals(java.lang.Object)> to <android.os.BaseBundle: int size()>has compatibility isssues！
-----------------------------------------
crashApis:34
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 91 Potential Issue API: SDKCheck of <android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.MaterialProgressBar: void applyTintForDrawable(android.graphics.drawable.Drawable,me.zhanghai.android.materialprogressbar.MaterialProgressBar$TintInfo)>[[-$i0 < 21]]--><android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 92 Potential Issue API: SDKCheck of <android.service.notification.StatusBarNotification: int getId()> is checking!!!
The life time of api is [18,31]
1call roads:
1 Mainhead roads:
!!!this api will crash on sdk 16 17 
Error road: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.services.NotificationListener dummyMainMethod_it_feio_android_omninotes_services_NotificationListener(android.content.Intent)>[]--><it.feio.android.omninotes.services.NotificationListener: void onNotificationRemoved(android.service.notification.StatusBarNotification)>[]--><android.service.notification.StatusBarNotification: int getId()>
#1.the call statck between class <dummyMainClass: void dummyMainMethod(java.lang.String[])> to <android.service.notification.StatusBarNotification: int getId()>has compatibility isssues！
-----------------------------------------
0 Packageshead roads:
crashApis:35
crashApisInMain:11
containsStatic:false
containsTry:false
1call by main package
-----------------------------------------
#################################################
N 93 Potential Issue API: SDKCheck of <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i0 < 21
Good road: <me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompat: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>[[-$i0 < 21]]--><me.zhanghai.android.materialprogressbar.internal.ObjectAnimatorCompatLollipop: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>[]--><android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 94 Potential Issue API: SDKCheck of <android.view.View: void setNestedScrollingEnabled(boolean)> is checking!!!
The life time of api is [21,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
-$i1 < 21
Good road: <it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet)>[]--><it.gmariotti.changelibs.library.view.ChangeLogListView: void <init>(android.content.Context,android.util.AttributeSet,int)>[[-$i1 < 21]]--><android.view.View: void setNestedScrollingEnabled(boolean)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 95 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutManager: boolean requestPinShortcut(android.content.pm.ShortcutInfo,android.content.IntentSender)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 96 Potential Issue API: SDKCheck of <android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)> is checking!!!
The life time of api is [24,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutInfo.Builder: android.content.pm.ShortcutInfo.Builder setIcon(android.graphics.drawable.Icon)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
#################################################
N 97 Potential Issue API: SDKCheck of <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)> is checking!!!
The life time of api is [18,31]
35call roads:
1 Mainhead roads:
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.SettingsActivity dummyMainMethod_it_feio_android_omninotes_SettingsActivity(android.content.Intent)>[]--><dummyMainClass: it.feio.android.omninotes.SettingsFragment dummyMainMethod_it_feio_android_omninotes_SettingsFragment(android.content.Intent,android.app.Activity)>[]--><it.feio.android.omninotes.SettingsFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.AboutActivity dummyMainMethod_it_feio_android_omninotes_AboutActivity(android.content.Intent)>[]--><it.feio.android.omninotes.AboutActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <dummyMainClass: void dummyMainMethod(java.lang.String[])>[]--><dummyMainClass: it.feio.android.omninotes.GalleryActivity dummyMainMethod_it_feio_android_omninotes_GalleryActivity(android.content.Intent)>[]--><it.feio.android.omninotes.GalleryActivity: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
34 Packageshead roads:
try
Good road with try: <it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void onEventAsync(it.feio.android.omninotes.async.bus.NotesUpdatedEvent)>[]--><it.feio.android.omninotes.models.misc.DynamicNavigationLookupTable: void update()>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SketchFragment: void onStart()>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo()>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: void zzd(boolean)>[[try]]--><com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.common.zza zzh(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 
Error road: <com.google.android.gms.internal.zzoj$zzc: void connect()>[]--><com.google.android.gms.common.GoogleApiAvailability: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zzc: int isGooglePlayServicesAvailable(android.content.Context)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
#4.the call statck between class <com.google.android.gms.internal.zzoj$zzc: void connect()> to <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.internal.zznx$zza: void zzd(com.google.android.gms.common.ConnectionResult)>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$export$33$SettingsFragment(android.widget.EditText,com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <org.acra.reporter.ErrorReporterImpl: void uncaughtException(java.lang.Thread,java.lang.Throwable)>[[try]]--><org.acra.builder.ReportBuilder: void build(org.acra.builder.ReportExecutor)>[]--><org.acra.builder.ReportExecutor: void execute(org.acra.builder.ReportBuilder)>[]--><org.acra.util.ProcessFinisher: void finishLastActivity(java.lang.Thread)>[]--><com.google.android.gms.internal.zzpu: void run()>[]--><com.google.android.gms.analytics.internal.zzb$3: void run()>[]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
try
Good road with try: <it.feio.android.omninotes.SettingsFragment: void lambda$null$25$SettingsFragment(com.afollestad.materialdialogs.MaterialDialog,com.afollestad.materialdialogs.DialogAction)>[]--><it.feio.android.omninotes.OmniNotes: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper()>[[try]]--><it.feio.android.analitica.AnalyticsHelperFactory: it.feio.android.analitica.AnalyticsHelper getAnalyticsHelper(android.content.Context,boolean,java.lang.String[])>[]--><it.feio.android.analitica.GoogleAnalyticsHelper: void <init>(android.content.Context,boolean,it.feio.android.analitica.GoogleAnalyticsServiceIdentifier)>[]--><com.google.android.gms.analytics.GoogleAnalytics: com.google.android.gms.analytics.GoogleAnalytics getInstance(android.content.Context)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
!!!this api will crash on sdk 16 17 
Error road: <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)>[]--><com.google.android.gms.common.GooglePlayServicesUtil: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
#9.the call statck between class <com.google.android.gms.common.GooglePlayServicesUtil: android.app.Dialog zza(int,android.app.Activity,com.google.android.gms.common.internal.zzi,android.content.DialogInterface$OnCancelListener)> to <android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>has compatibility isssues！
-----------------------------------------
try
Good road with try: <com.google.android.gms.analytics.CampaignTrackingReceiver: void onReceive(android.content.Context,android.content.Intent)>[]--><com.google.android.gms.analytics.internal.zzf: com.google.android.gms.analytics.internal.zzf zzX(android.content.Context)>[[try]]--><com.google.android.gms.analytics.GoogleAnalytics: void zzkt()>[[try]]--><com.google.android.gms.internal.zznx$1: void run()>[[try]]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.internal.zznx)>[]--><com.google.android.gms.internal.zznx: void zzrQ()>[]--><com.google.android.gms.internal.zznx: void zzb(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.internal.zzof: void zzd(com.google.android.gms.common.ConnectionResult)>[]--><com.google.android.gms.common.GoogleApiAvailability: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zzc: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzc(android.content.Context,int)>[]--><com.google.android.gms.common.zze: boolean zzk(android.content.Context,java.lang.String)>[]--><com.google.android.gms.common.zze: boolean zzan(android.content.Context)>[]--><android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
One road protect good!
crashApis:36
containsStatic:false
containsTry:true
11call by main package
-----------------------------------------
#################################################
N 98 Potential Issue API: SDKCheck of <android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)> is checking!!!
The life time of api is [26,31]
1call roads:
0 Mainhead roads:
1 Packageshead roads:
$i0 >= 26
Good road: <it.feio.android.omninotes.DetailFragment: boolean onOptionsItemSelected(android.view.MenuItem)>[]--><it.feio.android.omninotes.DetailFragment: void addShortcut()>[]--><it.feio.android.omninotes.utils.ShortcutHelper: void addShortcut(android.content.Context,it.feio.android.omninotes.models.Note)>[[$i0 >= 26]]--><android.content.pm.ShortcutManager: android.content.Intent createShortcutResultIntent(android.content.pm.ShortcutInfo)>
One road protect good!
containsStatic:false
containsTry:false
2call by main package
-----------------------------------------
crashApis numbers:36
crashApis numbers in main road:11
On Android Version 16 this app may have error api use(at least): 33 and error api roads: 128
On Android Version 17 this app may have error api use(at least): 33 and error api roads: 128
On Android Version 18 this app may have error api use(at least): 29 and error api roads: 123
On Android Version 19 this app may have error api use(at least): 27 and error api roads: 123
On Android Version 20 this app may have error api use(at least): 27 and error api roads: 121
On Android Version 21 this app may have error api use(at least): 7 and error api roads: 42
On Android Version 22 this app may have error api use(at least): 4 and error api roads: 15
On Android Version 23 this app may have error api use(at least): 2 and error api roads: 10
On Android Version 24 this app may have error api use(at least): 1 and error api roads: 6
On Android Version 25 this app may have error api use(at least): 1 and error api roads: 6
On Android Version 26 this app may have error api use(at least): 1 and error api roads: 6
On Android Version 27 this app may have error api use(at least): 1 and error api roads: 6
On Android Version 28 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 29 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 30 this app may have error api use(at least): 0 and error api roads: 0
On Android Version 31 this app may have error api use(at least): 3 and error api roads: 3
